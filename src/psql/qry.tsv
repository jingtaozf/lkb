next-version	1	\nSELECT next_version($0); \n
orthography-set	0	SELECT orthography_set()
lex-id-set	0	SELECT lex_id_set()
lookup-word	1	SELECT lookup_word($0)
lookup-general	2	SELECT * FROM lookup_general($0,$1)
lookup-general-null	1	SELECT * FROM lookup_general_null($0)
retrieve-entries-by-orthkey	2	SELECT $0 FROM current_grammar WHERE orthkey LIKE $1;
retrieve-entry	2	SELECT $0 FROM current_grammar WHERE name LIKE $1
retrieve-head-entry	2	SELECT $0 FROM filtered WHERE name LIKE $1\n\t\tAND modstamp=\n\t\t\t(SELECT max(modstamp) FROM filtered WHERE name LIKE $1)\n\tLIMIT 1
retrieve-all-entries	1	SELECT $0 FROM current_grammar
initialize-current-grammar	1	SELECT initialize_current_grammar($0);\n VACUUM ANALYZE current_grammar;
build-current-grammar	0	\nSELECT build_current_grammar();\n
update-entry	3	\nINSERT INTO revision (name, $1) VALUES ($0 , $2); \nDELETE FROM current_grammar \n WHERE name LIKE $0:like-text ; \nINSERT INTO current_grammar\n SELECT * FROM active\n  WHERE name = $0 \n   LIMIT 1;\n\nDELETE FROM meta WHERE var='mod_time';\nINSERT INTO meta VALUES ('mod_time',current_timestamp);\n
clear-scratch	0	\nSELECT clear_scratch();\n       
commit-scratch	0	\nSELECT commit_scratch();\n       
show-scratch	0	\nSELECT show_scratch();\n       
merge-into-db	0	\n---- n o t e : must copy file to temp before invoking this code\n----           eg. COPY TO stdin from frontend\n DROP INDEX public_orthkey;\n DROP INDEX name_modstamp;\n DROP INDEX public_revision_name_modstamp;\n DROP INDEX public_revision_name;\n DROP INDEX public_revision_name_pattern;\n ALTER TABLE public.revision DROP CONSTRAINT revision_pkey;\n\n DELETE FROM revision_new;\n\n CREATE INDEX temp_name_userid_version on temp (name, userid, version);\n\n INSERT INTO revision_new\n  SELECT * FROM (SELECT DISTINCT name,userid,version FROM temp EXCEPT SELECT name,userid,version FROM public.revision) AS t1 NATURAL JOIN temp;\n\n DROP INDEX temp_name_userid_version;\n DELETE FROM temp;\n INSERT INTO public.revision SELECT * FROM revision_new;\n \n ALTER TABLE public.revision ADD PRIMARY KEY (name,version,userid);\n CREATE INDEX public_orthkey ON public.revision (orthkey); \n CREATE UNIQUE INDEX name_modstamp ON public.revision (name,modstamp); \n CREATE INDEX public_revision_name_modstamp ON public.revision (name, modstamp);\n\nCREATE INDEX public_revision_name\n ON public.revision (name varchar_ops); \nSELECT if_version('7.4','CREATE INDEX public_revision_name_pattern ON public.revision (name varchar_pattern_ops)','CREATE INDEX public_revision_name_pattern ON public.revision (name)');\n\nDELETE FROM public.meta WHERE var='mod_time';\nINSERT INTO public.meta VALUES ('mod_time',current_timestamp);\n\n SELECT count(*) FROM revision_new;\n
merge-defn	0	---- n o t e : must copy file to temp_defn before invoking this code\n----           eg. COPY TO stdin from frontend\n CREATE TABLE temp_defn_new AS \n  SELECT * FROM (SELECT mode, slot, field FROM temp_defn EXCEPT\n   SELECT mode, slot, field FROM defn) AS t1 \n   NATURAL JOIN temp_defn;\n INSERT INTO defn\n  SELECT * FROM temp_defn_new;\n DELETE FROM meta WHERE var='tmp-merge-defn';\n INSERT INTO meta VALUES ('tmp-merge-defn',(SELECT count(*) FROM temp_defn_new));\n DROP TABLE temp_defn_new;\n DROP TABLE temp_defn;\n\n DELETE FROM public.meta WHERE var='mod_time';\n INSERT INTO public.meta VALUES ('mod_time',current_timestamp);\n\n SELECT val FROM meta WHERE var='tmp-merge-defn';
merge-multi-into-db	1	SELECT merge_multi_into_db($0)
dump-db	2	SELECT dump_db($0,$1)
dump-multi-db	1	SELECT dump_multi_db($0)
size-current-grammar	0	SELECT count(*) FROM current_grammar;
value-set	1	SELECT DISTINCT $0 FROM revision_all WHERE $0 IS NOT NULL;
create-schema	1	SELECT create_schema($0)
remove-schema	1	SELECT remove_schema($0)
get-filter	0	SELECT get_filter()
test-user	1	SELECT test_user($0);
load-semi	0	SELECT load_semi()
dump-scratch-db	1	\nDELETE FROM temp;\nINSERT INTO temp\n (SELECT * FROM revision ORDER BY name, userid, version);\nCOPY temp TO $0 DELIMITERS ',' WITH NULL AS '';\n
test	1	$0
user-read-only-p	1	SELECT $0 IN (SELECT val FROM public.meta WHERE var='user-read-only');
