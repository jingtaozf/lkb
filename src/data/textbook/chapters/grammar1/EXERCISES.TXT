DISCUSSION -- Head-Complement Rule Detailed

The Head-Complement Rule is described in the textbook as being a single rule. In fact, part of the justification for eliminating the [VAL int|tr|dtr] feature from Chapter 3 and introducing the Head-Complement Rule is precisely because the revision reduces the number of rules needed from three to one.  However, it turns out that the notation used in the textbook is imprecise in the computational system of the LKB.  It's still necessary to explicitly detail a Head-Complement Rules for heads that take zero, one, and two complements.

Note that the rules here are written slightly different than in the textbook.  Rather than using the textbook's --> shorthand notation we are embedding everything that occurs to the right of the arrow in a feature called ARGS (for arguments) in the resulting structure (that is, the phrase built on the left-hand side of the arrow).  Also, we're currently hand encoding the Head Feature Principle and the Valence Principle into each of the rules.  In a later version of the grammar we'll show how these constraints can be made to apply to all rules so that they don't have to be redundantly specified. 

This first exercise is intended to get you familiar with LKB's TDL notation.  The best way to figure out how structures are represented in the LKB is simply to start building them.



EXERCISE -- Add the Head-Modifier Rule.

There are essentially three steps to adding the Head-Modifier Rule: Introducing prepositions into the type system, adding a lexical entry for a preposition that can act as a modifier, and constructing the rule itself.

* Open chapters/grammar1/types.tdl and add PREP to the type system in the same way that VERB, NOUN, and DET are.  Save the file.

* Next open chapters/grammar1/lexicon.tdl and add a lexical entry for the word "with" using "chased" as an example (remembering to change the SPR value for the preposition's entry).  Note that the lexical entries in this grammar are slightly different than in the book.  Rather than being represented as an ordered pair containing a word's spelling and its corresponding feature structure, there is simply a ORTH (for orthography) feature in the type word which contains the spelling.  Remember to save the file after you've made your changes.

* Finally, open chapters/grammar1/rules.tdl and add the head-modifier-rule to it.  Expand the definition of the Head-Modifier Rule from section 4.5 of the Sag and Wasow textbook to incorporate the Head Feature Principle and the Valence Principle.  Then use the Head-Complement Rule as a template for changing the textbook's AVM representation into LKB's TDL representation.  You might also want to add the restriction that the SPR of the head daughter be non-empty.  You can do this by adding < [ ] > to SPR, and using an & between the list and any coindexation.  The non-empty specifier restriction will eliminate multiple structures arising from the modification occurring both before and after the specifier attaches to the VP.

Try parsing ``The cat barks with the dogs'' to test whether your Head-Modifier Rule is working.



ADVANCED EXERCISE -- Design the head-complement rule so that it has a binary branching structure and discuss how many rules can be eliminated.

