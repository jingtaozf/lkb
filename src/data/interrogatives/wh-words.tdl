
hell_0 := word &
[ ORTH <! "the","hell" !>,
  SS [ LOC [ CAT [ HEAD noun & [ MOD < [ WH <! param !>,
                                         LOC.CAT [ SUBJ < >,
                                                   COMPS < >,
                                                   SPR < > ] ] > ],
                   SUBJ < >,
                   COMPS < >,
                   SPR < > ],
             CONT soa & [ QUANTS <! !>,
                          NUCL emphasis-rel & [ EMPH-BY speaker ] ],
             Q-STORE <! !>,
             P-STORE <! !> ],
       SLASH <! !>,
       WH <! !> ],
  ARG-ST < >,
  DTRS < inflected-lexeme > ].

;;; CCB - I'm guessing at the details of this from the tree in section
;;;5.2 for "Whose cousin's friend"...

;;;JTB - made all of these unfocused since that seemed to be the
;;;generalization they were grasping, and added a "what" determiner.

;;;JTB 07/23/01 - What the fuck is DEG supposed to do again?

inter_which-unfoc := wh-det-lxm-unfoc &
[ ORTH <! "which" !>,
  SS.LOC.Q-STORE <! !> ].

inter_which-foc := wh-det-lxm-foc &
[ ORTH <! "which" !>,
  SS.LOC.Q-STORE <! !> ].

;;;JTB 07/25/01 - What to do about these?  These are questioning the
;;;possessor.

inter_whose-unfoc :=  wh-poss-det-lxm-unfoc & 
[ ORTH <! "whose" !> ].

inter_whose-foc :=  wh-poss-det-lxm-foc &
[ ORTH <! "whose" !> ].

inter_how-unfoc :=  wh-det-lxm-unfoc &
[ ORTH <! "how" !>,
  SS.LOC [ CAT.HEAD [ DEG true, 
                      SPEC.NUCL.EXTENT #delta ],
           CONT [INDEX #delta, 
                 RESTR < >] ] ].

inter_how-foc :=  wh-det-lxm-foc &
[ ORTH <! "how" !>,
  SS.LOC [ CAT.HEAD [ DEG true, 
                      SPEC.NUCL.EXTENT #delta ],
           CONT [INDEX #delta, 
                 RESTR < >] ] ].

inter_what-unfoc :=  wh-det-lxm-unfoc &
[ ORTH <! "what" !> ].

inter_what-foc :=  wh-det-lxm-foc &
[ ORTH <! "what" !> ].

big_0 := adj-lxm &
[ ORTH <! "big" !>,
  SS.LOC.CAT [ HEAD.DEG true,
               SPR < [ LOC.CAT.HEAD.DEG true ] > ] ].

;a_0 := det-lxm &
;[ ORTH <! "a" !>,
;  SS.LOC.CAT.SPR < [ LOC.CAT [ HEAD adj ] ] > ].

;;; <<< >>> WHO

;;; 4 entries for each - one with a WH value and one without, times
;;;FOC vs not FOC....  CCB- These are messy large structures, containing
;;;a lot of redundant info.  Reduce them when you get the chance

;;; CCB - taken from Ch 5 of G&S; should have a preson_rel in the
;;;STORE's RESTR once you figure out how to do that.

;;;JTB - 7/17/01 - Added focused but unmarked versions of all of these
;;;but left the spelled-out focused ones in.  The ambiguity for each
;;;wh-word does have an effect on parsing, for instance, "who saw who"
;;;now how two possible readings: "who saw WHÓ?" and "WHÓ saw WHÓ?",
;;;both of which will appear when we enter "who saw who".  This is
;;;predicted and fine but a bit undesirable for teasing out the two
;;;different sentences.

interrogative_who := wh-n-lxm-unfoc &
[ ORTH <! "who" !>, 
  SS.LOC.CONT.RESTR < [ PROP.SOA.NUCL person-rel ] > ].

interrogative_who-foc-2 := wh-n-lxm-foc &
[ ORTH <! "who" !>,
  SS.LOC.CONT.RESTR < [ PROP.SOA.NUCL person-rel ] >  ].

interrogative_who-foc-1 := wh-n-lxm-foc &
[ ORTH <! "WHÓ" !>,
  SS.LOC.CONT.RESTR < [ PROP.SOA.NUCL person-rel ] >  ].

;;; <<< >>> WHOM

interrogative_whom := wh-n-lxm-unfoc &
[ ORTH <! "whom" !>,
  SS.LOC.CONT.RESTR < [ PROP.SOA.NUCL person-rel ] >  ].

interrogative_whom-foc-2 := wh-n-lxm-foc &
[ ORTH <! "whom" !>,
  SS.LOC.CONT.RESTR < [ PROP.SOA.NUCL person-rel ] >  ].

interrogative_whom-foc-1 := wh-n-lxm-foc &
[ ORTH <! "WHÓM" !>,
  SS.LOC.CONT.RESTR < [ PROP.SOA.NUCL person-rel ] >  ].

;;; <<< >>> WHAT

interrogative_what := wh-n-lxm-unfoc &
[ ORTH <! "what" !>,
  SS.LOC.CONT.RESTR < [ PROP.SOA.NUCL thing-rel ] >  ].

interrogative_what-foc-2 := wh-n-lxm-foc &
[ ORTH <! "what" !>,
  SS.LOC.CONT.RESTR < [ PROP.SOA.NUCL thing-rel ] >  ].

interrogative_what-foc-1 := wh-n-lxm-foc &
[ ORTH <! "WHÁT" !>,
  SS.LOC.CONT.RESTR < [ PROP.SOA.NUCL thing-rel ] >  ].

;;; CCB - add exist_rel to the WH valuse, as per ch 5.

;;; JTB 07/22/01 - Let's get the exclamatives going.

exclamative_what :=  wh-lxm-excl &
[ ORTH <! "what", "a" !> ].

exclamative_how := wh-lxm-excl &
[ ORTH <! "how" !>,
  SS.LOC [ CAT.HEAD.SPEC.NUCL.EXTENT #delta,
           CONT [INDEX #delta, RESTR < >] ] ].

;;;All dead entries:

;;;JTB 7/10/01 - This may be ancient, let's kill it.
;interrogative_who-2 := wh-n-lxm &
;[ ORTH <! "who" !>,
;  SS [ LOC [ CONT [ INDEX #i ],
;             STORE <! param & [ INDEX #i,
;                                RESTR < [ PERSON #i ] >,
;                                FOC false ] !> ], 
;       WH *e-list-of-scope-objs* ] ].

;;; JTB/IAS/CCB 07/10/01 - The constraint on WH is only applicable to
;;;fronted wh words, not accented ones.
;interrogative_who-foc := wh-n-lxm &
;[ ORTH <! "WHÓ" !>,
;  SS [ LOC [ CONT [ INDEX #i ],
;             STORE  <! #1 & [ FOC true,
;                              RESTR < [ PERSON #i ] > ] !> ],
;       WH <! #1 & param & [ INDEX #i ] !> ] ].

;;;JTB 07/10/01 - Dead
;interrogative_whom-2 := wh-n-lxm &
;[ ORTH <! "whom" !>,
;  SS [ LOC [ CONT [ INDEX #i ],
;             STORE <! param & [ INDEX #i,
;                                RESTR < [ PERSON #i ] >,
;                                FOC false ] !> ],
;       WH *e-list-of-scope-objs* ] ].

;;;JTB/IAS/CCB 07/10/01 - Also wrong, see above.
;interrogative_whom-foc := wh-n-lxm &
;[ ORTH <! "WHÓM" !>,
;  SS [ LOC [ CONT [ INDEX #i ],
;             STORE  <! #1 & [ FOC true ] !> ],
;       WH <! #1 & param & [ INDEX #i ] !> ] ].

;;;JTB 07/10/01 - Bye, bye, birdie
;interrogative_what-2 := wh-n-lxm &
;[ ORTH <! "what" !>,
;  SS [ LOC [ CONT [ INDEX #i ],
;             STORE <! param & [ INDEX #i,
;                                RESTR < [ THING #i ] >,
;                                FOC false ] !> ],
;       WH *e-list-of-scope-objs* ] ].

;;;JTB 07/10/01 - Same as above.
;interrogative_what-foc := wh-n-lxm &
;[ ORTH <! "WHÁT" !>,
;  SS [ LOC [ CONT [ INDEX #i ],
;             STORE  <! #1 & [ FOC true,
;                              RESTR < [ THING #i ] > ] !> ],
;       WH <! #1 & param & [ INDEX #i ] !> ] ].






