;;; `start symbol' of the grammar (see *start-symbol* in `globals.lsp'); 
;;;
;;; Based on this type, the LKB system validates each complete analysis of an
;;; input string to unify with the constraints on this type, thus checking for
;;; `sentence-hood' (currently, only specifier-saturated verbal projections are
;;; accepted as sentences).
;;;

start-symbol := phrase &
[HEAD verb,
 HEAD.FORM fin,
 SPR <>,
 COMPS <>,
 GAP <! !> ].

