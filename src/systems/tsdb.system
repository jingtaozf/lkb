;;; -*- Mode: LISP; Syntax: Common-Lisp; Package: MAKE -*-

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;        file: tsdb.system
;;;      module:
;;;     version: 0.0 -- 22-sep-95 (experimental)
;;;  written by: oe, dfki saarbruecken
;;; last update:
;;;  updated by:
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; author            | date        | modification
;;; ------------------|-------------|------------------------------------------
;;;                   |             |
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


(in-package "MAKE")

(defsystem "tsdb"
    :source-pathname (dir-append (get-sources-dir "tsdb")
				 '(:relative "tsdb"))
    :binary-pathname (dir-append (get-binaries-dir "tsdb")
				 '(:relative "tsdb"))
    :finally-do
    #+(and (not :tty) :allegro (or :linux (and :sparc :svr4) :alpha))
    (when (system:getenv "DISPLAY") 
      (funcall (symbol-function (read-from-string "tsdb::tsdb")) :podium))
    #-(and (not :tty) :allegro (or :linux (and :sparc :svr4) :alpha))
    nil

    :components
    ((:module "agenda"
      :source-pathname ""
      :source-extension ""
      :operation-form 
      ((:load (lambda (component force)
                (declare (ignore force))
                (unless (probe-file 
                         (component-full-pathname component :source))
                  (format t
                   "~&; missing: `~a';~%"
                   (component-full-pathname component :source)))))
       (:compile (lambda (component force)
                   (declare (ignore force))
                   (unless (probe-file 
                            (component-full-pathname component :source))
                     (format t
                             "~&; missing: `~a';~%"
                             (component-full-pathname component :source))))))
      :components
      ((:file "Registration")
       (:file "ToDo")))

     #+(and :allegro (or :linux (and :sparc :svr4) :alpha))
     (:module "c"
      :source-pathname %system-binaries%
      :source-extension "so"
      :load-only t
      :components
      ((:file "capi")
       (:file "gc")))

     (:module "tsdb"
      :source-pathname "lisp"
      :binary-pathname ""
      :components
      ((:file "tsdb-package")
       #+:page 
       (:file "tdl-patches")
       #+:lkb 
       (:file "lkb-interface")
       (:file "globals")
       (:file "utilities")
       #+(and :allegro (or :linux (and :sparc :svr4) :alpha)) 
       (:file "pvm")
       #+(and :allegro (or :linux (and :sparc :svr4) :alpha)) 
       (:file "capi")
       (:file "tsql")
       (:file "tsdb")
       (:file "process")
       (:file "commands")
       (:file "import")
       #+:edelweiss 
       (:file "server")
       (:file "statistics")
       (:file "podium")
       #+:allegro 
       (:file "allegro")
       #+:allegro 
       (:file "gc")
       #+:page 
       (:file "page-interface")
       (:file "derivations")
       #+(and :page :edelweiss) 
       (:file "chart")))

     (:module "podium"
      :source-pathname "tcl"
      :source-extension "tcl"
      :load-only t
      :operation-form 
      ((:load (lambda (component force)
                (declare (ignore force))
                (unless (probe-file 
                         (component-full-pathname component :source))
                  (format t
                   "~&; missing: `~a';~%"
                   (component-full-pathname component :source)))))
       (:compile (lambda (component force)
                   (declare (ignore force))
                   (unless (probe-file 
                            (component-full-pathname component :source))
                     (format t
                             "~&; missing: `~a';~%"
                             (component-full-pathname component :source))))))
      :components
      ((:file "icon" :source-extension "xbm")
       (:file "podium")
       (:file "goodies")
       (:file "table")
       (:file "showtable")
       (:file "showgraph")
       (:file "utilities")
       (:file "commands")
       (:file "input")
       (:file "copyleft")
       (:file "balloon")
       (:file "balloons" :source-extension ""))))
    :depends-on (#+(and :allegro (or :linux (and :sparc :svr4) :alpha)) "pvm"
                 #+:page "page"
                 #+:lkb "lkb"))





