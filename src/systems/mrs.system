(in-package "MAKE")


(defsystem "mrs"
     :device (make-pathname :device cl-user::%sys-device%)
    :source-pathname (get-sources-dir #+:lkb "lkb" #+:page "page")
    :binary-pathname (get-binaries-dir #+:lkb "lkb" #+:page "page")
    :source-extension "lisp"
    :depends-on (#+:lkb "lkb" #+:page "page")
    :finally-do
    (progn
      (when COMMON-LISP-USER::*grammar-directory* 
              (load (merge-pathnames
                        (make-pathname :name "mrsglobals-eng.lisp")
                    COMMON-LISP-USER::*grammar-directory*)))
      (when (and COMMON-LISP-USER::*grammar-directory*
                 (fboundp 'read-mrs-rule-file-aux))
        (read-mrs-rule-file-aux 
                (merge-pathnames
                   (make-pathname :directory 
                       (pathname-directory
                        (dir-append COMMON-LISP-USER::*grammar-directory* 
                                    '(:relative "data"))))          
                   (make-pathname :name "new-rules.mrs")))))
    :components
    ((:module "core"
      :source-pathname "mrs"
      :binary-pathname "mrs"
      :components
      ((:file "mrs-package")
       #+:lkb (:file "lkb-interface")   ; interface functions to LKB
       #+:page (:file "page-interface") ; interface functions to PAGE
       (:file "mrsglobals")             ; have to redefine most of these, but
                                        ; this is mostly done 
					; by mrsglobals-eng 
       #+:lkb(:file "extraglobals")     ; to avoid changing files that WK
                                        ; sees
       (:file "basemrs")                ; MRS structures and printing 
       (:file "mrsoutput")              ; constructing MRS from parse result  
       (:file "mrscorpus")              ; checking equality etc
       (:file "interface")
       (:file "mrsfns")))                 ; from old mrsglobals
       ;; following two files needed for scoping - can be excluded
       ;; for generation
     (:module "scoping"
       :source-pathname "mrs"
       :binary-pathname "mrs"
      :components
       ((:file "mrsresolve")             ; resolving scope
        (:file "mrscons")))               ; constraints on scope

       ;; following files for mrs to vit  - can be excluded 
       ;; for generation 
     (:module "mrs-to-vit"
       :source-pathname "mrs"
       :binary-pathname "mrs"
      :components
       ((:file "vit")                    ; VIT structures
        (:file "mrs-to-vit")             ; convert MRS to VIT
        (:file "cheapscope")             ; scope for fragments
        (:file "time-convert")           ; temporary code for converting
                                         ; times to VIT format
                                         ; needs fixing
        (:file "mrsmunge")               ; manipulate MRS via rules
                                         ; currently for vitrifying - potential
                                         ; other uses
       #+:lkb (:file "mrsruleinput")           ; creating rules for above
                                         ; requires LKB, but outputs compiled 
                                         ; rules which can be used without LKB
       ;; (:file "acl-mrs")             ; display etc in CLIM
                                         ; needs fixing
       #+:lkb (:file "lkbmrs")          ; LKB specific - redefines
                                        ; some functions
       #+:page (:file "pagemrs")))        ; PAGE specific
     #+:lkb
     (:module "generator-morph"
       :source-pathname "mrs"
       :binary-pathname "mrs"
      :components
       ((:file "lexutils")
        (:file "lexindex")        ; LKB specific - indexing
					; entries etc on semantics
       (:file "lexlookup")           ; LKB specific - retrieving
       (:file "genpredict")))))   ; LKB specific - null semantics
