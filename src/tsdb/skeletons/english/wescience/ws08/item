10430010@unknown@formal@none@1@S@<article>Japanese language</article>@1@2@@oe@30-11-2008
10430020@unknown@formal@none@1@S@is a language spoken by over 130 million people in [[Japan]] and in Japanese emigrant communities.@1@16@@oe@30-11-2008
10430030@unknown@formal@none@1@S@It is related to the [[Ryukyuan languages]], but whatever [[Classification of the Japanese language|relationships with other languages]] it may have remain undemonstrated.@1@22@@oe@30-11-2008
10430040@unknown@formal@none@1@S@It is an [[agglutinative language]] and is distinguished by a complex system of [[Honorific speech in Japanese|honorifics]] reflecting the hierarchical nature of Japanese society, with verb forms and particular vocabulary to indicate the relative status of speaker, listener and the third person mentioned in conversation whether he is there or not.@1@51@@oe@30-11-2008
10430050@unknown@formal@none@1@S@The sound inventory of Japanese is relatively small, and it has a lexically distinct [[Japanese pitch accent|pitch-accent]] system.@1@18@@oe@30-11-2008
10430060@unknown@formal@none@1@S@It is a [[mora (linguistics)|mora]]-timed language.@1@6@@oe@30-11-2008
10430070@unknown@formal@none@1@S@The Japanese language is written with a combination of three different types of scripts: [[Chinese characters]] called ''[[kanji]]'' (漢字 / かんじ), and two [[syllabary|syllabic]] scripts made up of modified [[Chinese characters]], ''[[hiragana]]'' (平仮名 / ひらがな) and ''[[katakana]]'' (片仮名 / カタカナ).@1@40@@oe@30-11-2008
10430080@unknown@formal@none@1@S@The [[Latin alphabet]], ''[[rōmaji]]'' (ローマ字), is also often used in modern Japanese, especially for company names and logos, advertising, and when entering Japanese text into a computer.@1@27@@oe@30-11-2008
10430090@unknown@formal@none@1@S@Western style [[Arabic numerals]] are generally used for numbers, but traditional [[Sino-Japanese vocabulary|Sino-Japanese]] numerals are also commonplace.@1@17@@oe@30-11-2008
10430100@unknown@formal@none@1@S@Japanese [[vocabulary]] has been heavily influenced by [[loanword]]s from other languages.@1@11@@oe@30-11-2008
10430110@unknown@formal@none@1@S@A vast number of words were borrowed from [[Chinese language|Chinese]], or created from Chinese models, over a period of at least 1,500 years.@1@23@@oe@30-11-2008
10430120@unknown@formal@none@1@S@Since the late 19th century, Japanese has borrowed a considerable number of words from [[Indo-European languages]], primarily [[English language|English]].@1@19@@oe@30-11-2008
10430130@unknown@formal@none@1@S@Because of the special trade relationship between Japan and first [[Portugal]] in the 16th century, and then mainly the [[Netherlands]] in the 17th century, [[Portuguese language|Portuguese]], [[German language|German]] and [[Dutch language|Dutch]] have also been influential.@1@35@@oe@30-11-2008
10430140@unknown@formal@none@1@S@== Geographic distribution ==@1@4@@oe@30-11-2008
10430150@unknown@formal@none@1@S@Although Japanese is spoken almost exclusively in Japan, it has been and sometimes still is spoken elsewhere.@1@17@@oe@30-11-2008
10430160@unknown@formal@none@1@S@When [[Imperial Japan|Japan]] occupied [[Korea]], [[Taiwan]], parts of the [[Chinese mainland]], and various Pacific islands before and during [[World War II]], locals in [[Greater East Asia Co-Prosperity Sphere|those countries]] were forced to learn Japanese in empire-building programs.@1@37@@oe@30-11-2008
10430170@unknown@formal@none@1@S@As a result, there are many people in these countries who can speak Japanese in addition to the local languages.@1@20@@oe@30-11-2008
10430180@unknown@formal@none@1@S@Japanese emigrant communities (the largest of which are to be found in [[Brazil]]) sometimes employ Japanese as their primary language.@1@20@@oe@30-11-2008
10430190@unknown@formal@none@1@S@Approximately 5% of Hawaii residents speak Japanese, with Japanese ancestry the largest single ancestry in the state (over 24% of the population).@1@22@@oe@30-11-2008
10430200@unknown@formal@none@1@S@Japanese emigrants can also be found in [[Peru]], [[Argentina]], [[Australia]] (especially [[Sydney]], [[Brisbane]], and [[Melbourne]]), the [[United States]] (notably [[California]], where 1.2% of the population has Japanese ancestry, and [[Hawaii]]), and the [[Philippines]] (particularly in [[Davao]] and [[Laguna (province)|Laguna]]).@1@39@@oe@30-11-2008
10430210@unknown@formal@none@1@S@Their descendants, who are known as (, literally Japanese descendants), however, rarely speak Japanese fluently after the second generation.@1@19@@oe@30-11-2008
10430220@unknown@formal@none@1@S@There are estimated to be several million non-Japanese studying the language as well.@1@13@@oe@30-11-2008
10430230@unknown@formal@none@1@S@=== Official status ===@1@4@@oe@30-11-2008
10430240@unknown@formal@none@1@S@Japanese is the de facto official language of Japan.@1@9@@oe@30-11-2008
10430250@unknown@formal@none@1@S@There is a form of the language considered standard: Standard Japanese, or the common language.@1@15@@oe@30-11-2008
10430260@unknown@formal@none@1@S@The meanings of the two terms are almost the same. or is a conception that forms the counterpart of dialect.@1@20@@oe@30-11-2008
10430270@unknown@formal@none@1@S@This normative language was born after the from the language spoken in uptown [[Tokyo]] for communicating necessity. is taught in schools and used on television and in official communications, and is the version of Japanese discussed in this article.@1@39@@oe@30-11-2008
10430280@unknown@formal@none@1@S@Formerly, standard was different from .@1@6@@oe@30-11-2008
10430290@unknown@formal@none@1@S@The two systems have different rules of grammar and some variance in vocabulary. was the main method of writing Japanese until about 1900; since then gradually extended its influence and the two methods were both used in writing until the 1940s.@1@41@@oe@30-11-2008
10430300@unknown@formal@none@1@S@still has some relevance for historians, literary scholars, and lawyers (many Japanese laws that survived [[World War II]] are still written in , although there are ongoing efforts to modernize their language). is the predominant method of both speaking and writing Japanese today, although grammar and vocabulary are occasionally used in modern Japanese for effect.@1@55@@oe@30-11-2008
10430310@unknown@formal@none@1@S@=== Dialects ===@1@3@@oe@30-11-2008
10430320@unknown@formal@none@1@S@Dozens of dialects are spoken in Japan.@1@7@@oe@30-11-2008
10430330@unknown@formal@none@1@S@The profusion is due to many factors, including the length of time the [[Japanese Archipelago|archipelago]] has been inhabited, its mountainous island terrain, and Japan's long history of both external and internal isolation.@1@32@@oe@30-11-2008
10430340@unknown@formal@none@1@S@Dialects typically differ in terms of [[Japanese pitch accent|pitch accent]], inflectional [[morphology (linguistics)|morphology]], [[vocabulary]], and particle usage.@1@17@@oe@30-11-2008
10430350@unknown@formal@none@1@S@Some even differ in [[vowel]] and [[consonant]] inventories, although this is uncommon.@1@12@@oe@30-11-2008
10430360@unknown@formal@none@1@S@The main distinction in Japanese accents is between and , though Kyūshū-type dialects form a third, smaller group.@1@18@@oe@30-11-2008
10430370@unknown@formal@none@1@S@Within each type are several subdivisions.@1@6@@oe@30-11-2008
10430380@unknown@formal@none@1@S@Kyoto-Osaka-type dialects are in the central region, with borders roughly formed by [[Toyama Prefecture|Toyama]], [[Kyoto Prefecture|Kyōto]], [[Hyōgo Prefecture|Hyōgo]], and [[Mie Prefecture|Mie]] Prefectures; most [[Shikoku]] dialects are also that type.@1@29@@oe@30-11-2008
10430390@unknown@formal@none@1@S@The final category of dialects are those that are descended from the Eastern dialect of [[Old Japanese]]; these dialects are spoken in [[Hachijōjima|Hachijō-jima island]] and few islands.@1@27@@oe@30-11-2008
10430400@unknown@formal@none@1@S@Dialects from peripheral regions, such as [[Tōhoku Region|Tōhoku]] or [[Tsushima Island|Tsushima]], may be unintelligible to speakers from other parts of the country.@1@22@@oe@30-11-2008
10430410@unknown@formal@none@1@S@The several dialects of [[Kagoshima Prefecture|Kagoshima]] in southern [[Kyūshū]] are famous for being unintelligible not only to speakers of standard Japanese but to speakers of nearby dialects elsewhere in Kyūshū as well.@1@32@@oe@30-11-2008
10430420@unknown@formal@none@1@S@This is probably due in part to the Kagoshima dialects' peculiarities of pronunciation, which include the existence of closed syllables (i.e., syllables that end in a consonant, such as {{IPA|/kob/}} or {{IPA|/koʔ/}} for Standard Japanese {{IPA|/kumo/}} "spider").@1@37@@oe@30-11-2008
10430430@unknown@formal@none@1@S@A dialects group of [[Kansai region|Kansai]] is spoken and known by many Japanese, and [[Osaka]] dialect in particular is associated with comedy (See [[Kansai dialect]]).@1@25@@oe@30-11-2008
10430440@unknown@formal@none@1@S@Dialects of Tōhoku and North [[Kantō region|Kantō]] are associated with typical farmers.@1@12@@oe@30-11-2008
10430450@unknown@formal@none@1@S@The [[Ryūkyūan languages]], spoken in [[Okinawa Prefecture|Okinawa]] and [[Amami Islands]] that are politically part of [[Kagoshima Prefecture|Kagoshima]], are distinct enough to be considered a separate branch of the [[Japonic languages|Japonic]] family.@1@31@@oe@30-11-2008
10430460@unknown@formal@none@1@S@But many Japanese common people tend to consider the Ryūkyūan languages as dialects of Japanese.@1@15@@oe@30-11-2008
10430470@unknown@formal@none@1@S@Not only is each language unintelligible to Japanese speakers, but most are unintelligible to those who speak other Ryūkyūan languages.@1@20@@oe@30-11-2008
10430480@unknown@formal@none@1@S@Recently, Standard Japanese has become prevalent nationwide (including the Ryūkyū islands) due to [[education]], [[mass media]], and increase of mobility networks within Japan, as well as economic integration.@1@28@@oe@30-11-2008
10430490@unknown@formal@none@1@S@== Sounds ==@1@3@@oe@30-11-2008
10430500@unknown@formal@none@1@S@{{IPA notice}}@1@2@@oe@30-11-2008
10430510@unknown@formal@none@1@S@Japanese vowels are "pure" sounds.@1@5@@oe@30-11-2008
10430520@unknown@formal@none@1@S@The only unusual vowel is the high back vowel {{IPA|/ɯ/}} , which is like {{IPA|/u/}}, but [[roundedness|compressed]] instead of rounded.@1@20@@oe@30-11-2008
10430530@unknown@formal@none@1@S@Japanese has five vowels, and [[vowel length]] is phonemic, so each one has both a short and a long version.@1@20@@oe@30-11-2008
10430540@unknown@formal@none@1@S@Some Japanese consonants have several [[allophone]]s, which may give the impression of a larger inventory of sounds.@1@17@@oe@30-11-2008
10430550@unknown@formal@none@1@S@However, some of these allophones have since become phonemic.@1@9@@oe@30-11-2008
10430560@unknown@formal@none@1@S@For example, in the Japanese language up to and including the first half of the twentieth century, the phonemic sequence {{IPA|/ti/}} was [[palatalization|palatalized]] and realized phonetically as {{IPA|[tɕi]}}, approximately ''chi'' ; however, now {{IPA|/ti/}} and {{IPA|/tɕi/}} are distinct, as evidenced by words like ''tī'' {{IPA|[tiː]}} "Western style tea" and ''chii'' {{IPA|[tɕii]}} "social status."@1@53@@oe@30-11-2008
10430570@unknown@formal@none@1@S@The 'r' of the Japanese language (technically a [[lateral consonant|lateral]] [[apical consonant|apical]] postalveolar flap), is of particular interest, sounding to most English speakers to be something between an 'l' and a [[retroflex consonant|retroflex]] 'r' depending on its position in a word.@1@41@@oe@30-11-2008
10430580@unknown@formal@none@1@S@The syllabic structure and the [[phonotactics]] are very simple: the only [[consonant cluster]]s allowed within a syllable consist of one of a subset of the consonants plus {{IPA|/j/}}.@1@28@@oe@30-11-2008
10430590@unknown@formal@none@1@S@These type of clusters only occur in onsets.@1@8@@oe@30-11-2008
10430600@unknown@formal@none@1@S@However, consonant clusters across syllables are allowed as long as the two consonants are a nasal followed by a [[homo-organic]] consonant.@1@21@@oe@30-11-2008
10430610@unknown@formal@none@1@S@[[Consonant length]] (gemination) is also phonemic.@1@6@@oe@30-11-2008
10430620@unknown@formal@none@1@S@== Grammar ==@1@3@@oe@30-11-2008
10430630@unknown@formal@none@1@S@=== Sentence structure ===@1@4@@oe@30-11-2008
10430640@unknown@formal@none@1@S@Japanese word order is classified as [[Subject Object Verb]].@1@9@@oe@30-11-2008
10430650@unknown@formal@none@1@S@However, unlike many [[Indo-European language]]s, Japanese sentences only require that verbs come last for intelligibility.@1@15@@oe@30-11-2008
10430660@unknown@formal@none@1@S@This is because the Japanese [[sentence element]]s are marked with [[Japanese particles|particles]] that identify their grammatical functions.@1@17@@oe@30-11-2008
10430670@unknown@formal@none@1@S@The basic sentence structure is [[topic-comment]].@1@6@@oe@30-11-2008
10430680@unknown@formal@none@1@S@For example, . ("this") is the topic of the sentence, indicated by the particle ''-wa''.@1@15@@oe@30-11-2008
10430690@unknown@formal@none@1@S@The verb is , a [[copula]], commonly translated as "to be" or "it is" (though there are other verbs that can be translated as "to be").@1@26@@oe@30-11-2008
10430700@unknown@formal@none@1@S@As a phrase, is the comment.@1@6@@oe@30-11-2008
10430710@unknown@formal@none@1@S@This sentence loosely translates to "As for this person, (it) is Mr./Mrs./Miss Tanaka."@1@13@@oe@30-11-2008
10430720@unknown@formal@none@1@S@Thus Japanese, like [[Chinese language|Chinese]], [[Korean language|Korean]], and many other Asian languages, is often called a [[topic-prominent language]], which means it has a strong tendency to indicate the topic separately from the subject, and the two do not always coincide.@1@40@@oe@30-11-2008
10430730@unknown@formal@none@1@S@The sentence 　 literally means, "As for elephants, (their) noses are long".@1@12@@oe@30-11-2008
10430740@unknown@formal@none@1@S@The topic is "elephant", and the subject is "nose".@1@9@@oe@30-11-2008
10430750@unknown@formal@none@1@S@Japanese is a [[pro-drop language]], meaning that the subject or object of a sentence need not be stated if it is obvious from context.@1@24@@oe@30-11-2008
10430760@unknown@formal@none@1@S@In addition, it is commonly felt, particularly in spoken Japanese, that the shorter a sentence is, the better.@1@18@@oe@30-11-2008
10430770@unknown@formal@none@1@S@As a result of this grammatical permissiveness and tendency towards brevity, Japanese speakers tend naturally to omit words from sentences, rather than refer to them with [[pronoun]]s.@1@27@@oe@30-11-2008
10430780@unknown@formal@none@1@S@In the context of the above example, would mean "[their] noses are long," while by itself would mean "[they] are long."@1@21@@oe@30-11-2008
10430790@unknown@formal@none@1@S@A single verb can be a complete sentence: "[I / we / they / etc] did [it]!".@1@17@@oe@30-11-2008
10430800@unknown@formal@none@1@S@In addition, since adjectives can form the predicate in a Japanese sentence (below), a single adjective can be a complete sentence: "[I'm] jealous [of it]!".@1@25@@oe@30-11-2008
10430810@unknown@formal@none@1@S@While the language has some words that are typically translated as pronouns, these are not used as frequently as pronouns in some [[Indo-European language]]s, and function differently.@1@27@@oe@30-11-2008
10430820@unknown@formal@none@1@S@Instead, Japanese typically relies on special verb forms and auxiliary verbs to indicate the direction of benefit of an action: "down" to indicate the out-group gives a benefit to the in-group; and "up" to indicate the in-group gives a benefit to the out-group.@1@43@@oe@30-11-2008
10430830@unknown@formal@none@1@S@Here, the in-group includes the speaker and the out-group doesn't, and their boundary depends on context.@1@16@@oe@30-11-2008
10430840@unknown@formal@none@1@S@For example, (literally, "explained" with a benefit from the out-group to the in-group) means "[he/she/they] explained it to [me/us]".@1@19@@oe@30-11-2008
10430850@unknown@formal@none@1@S@Similarly, (literally, "explained" with a benefit from the in-group to the out-group) means "[I/we] explained [it] to [him/her/them]".@1@18@@oe@30-11-2008
10430860@unknown@formal@none@1@S@Such beneficiary auxiliary verbs thus serve a function comparable to that of pronouns and prepositions in Indo-European languages to indicate the actor and the recipient of an action.@1@28@@oe@30-11-2008
10430870@unknown@formal@none@1@S@Japanese "pronouns" also function differently from most modern Indo-European pronouns (and more like nouns) in that they can take modifiers as any other noun may.@1@25@@oe@30-11-2008
10430880@unknown@formal@none@1@S@For instance, one cannot say in English:@1@7@@oe@30-11-2008
10430890@unknown@formal@none@1@S@:@1@1@@oe@30-11-2008
10430900@unknown@formal@none@1@S@*The amazed he ran down the street. (grammatically incorrect)@1@9@@oe@30-11-2008
10430910@unknown@formal@none@1@S@But one ''can'' grammatically say essentially the same thing in Japanese:@1@11@@oe@30-11-2008
10430920@unknown@formal@none@1@S@: (grammatically correct)@1@3@@oe@30-11-2008
10430930@unknown@formal@none@1@S@This is partly due to the fact that these words evolved from regular nouns, such as "you" ( "lord"), "you" ( "that side, yonder"), and "I" ( "servant").@1@28@@oe@30-11-2008
10430940@unknown@formal@none@1@S@This is why some linguists do not classify Japanese "pronouns" as pronouns, but rather as referential nouns.@1@17@@oe@30-11-2008
10430950@unknown@formal@none@1@S@Japanese personal pronouns are generally used only in situations requiring special emphasis as to who is doing what to whom.@1@20@@oe@30-11-2008
10430960@unknown@formal@none@1@S@The choice of words used as pronouns is correlated with the sex of the speaker and the social situation in which they are spoken: men and women alike in a formal situation generally refer to themselves as ( "private") or (also ), while men in rougher or intimate conversation are much more likely to use the word ( "oneself", "myself") or .@1@62@@oe@30-11-2008
10430970@unknown@formal@none@1@S@Similarly, different words such as , , and (, more formally "the one before me") may be used to refer to a listener depending on the listener's relative social position and the degree of familiarity between the speaker and the listener.@1@41@@oe@30-11-2008
10430980@unknown@formal@none@1@S@When used in different social relationships, the same word may have positive (intimate or respectful) or negative (distant or disrespectful) connotations.@1@21@@oe@30-11-2008
10430990@unknown@formal@none@1@S@Japanese often use titles of the person referred to where pronouns would be used in English.@1@16@@oe@30-11-2008
10431000@unknown@formal@none@1@S@For example, when speaking to one's teacher, it is appropriate to use (, teacher), but inappropriate to use .@1@19@@oe@30-11-2008
10431010@unknown@formal@none@1@S@This is because is used to refer to people of equal or lower status, and one's teacher has allegedly higher status.@1@21@@oe@30-11-2008
10431020@unknown@formal@none@1@S@For English speaking learners of Japanese, a frequent beginners mistake is to include or at the beginning of sentences as one would with ''I'' or ''you'' in English.@1@28@@oe@30-11-2008
10431030@unknown@formal@none@1@S@Though these sentences are not grammatically incorrect, even in formal settings it would be considered unnatural and would equate in English to repeatedly using a noun where a [[pronoun]] would suffice.@1@31@@oe@30-11-2008
10431040@unknown@formal@none@1@S@=== Inflection and conjugation ===@1@5@@oe@30-11-2008
10431050@unknown@formal@none@1@S@Japanese nouns have no grammatical number, gender or article aspect.@1@10@@oe@30-11-2008
10431060@unknown@formal@none@1@S@The noun may refer to a single book or several books; can mean "person" or "people"; and can be "tree" or "trees".@1@22@@oe@30-11-2008
10431070@unknown@formal@none@1@S@Where number is important, it can be indicated by providing a quantity (often with a [[Japanese counter word|counter word]]) or (rarely) by adding a suffix.@1@25@@oe@30-11-2008
10431080@unknown@formal@none@1@S@Words for people are usually understood as singular.@1@8@@oe@30-11-2008
10431090@unknown@formal@none@1@S@Thus usually means ''Mr./Mrs./Miss. Tanaka''.@1@5@@oe@30-11-2008
10431100@unknown@formal@none@1@S@Words that refer to people and animals can be made to indicate a group of individuals through the addition of a collective suffix (a noun suffix that indicates a group), such as , but this is not a true plural: the meaning is closer to the English phrase "and company".@1@50@@oe@30-11-2008
10431110@unknown@formal@none@1@S@A group described as may include people not named Tanaka.@1@10@@oe@30-11-2008
10431120@unknown@formal@none@1@S@Some Japanese nouns are effectively plural, such as "people" and "we/us", while the word "friend" is considered singular, although plural in form.@1@22@@oe@30-11-2008
10431130@unknown@formal@none@1@S@Verbs are [[Japanese verb conjugations|conjugated]] to show tenses, of which there are two: past and present, or non-past, which is used for the present and the future.@1@27@@oe@30-11-2008
10431140@unknown@formal@none@1@S@For verbs that represent an ongoing process, the ''-te iru'' form indicates a continuous (or progressive) tense.@1@17@@oe@30-11-2008
10431150@unknown@formal@none@1@S@For others that represent a change of state, the form indicates a perfect tense.@1@14@@oe@30-11-2008
10431160@unknown@formal@none@1@S@For example, means "He has come (and is still here)", but means "He is eating".@1@15@@oe@30-11-2008
10431170@unknown@formal@none@1@S@Questions (both with an interrogative pronoun and yes/no questions) have the same structure as affirmative sentences, but with intonation rising at the end.@1@23@@oe@30-11-2008
10431180@unknown@formal@none@1@S@In the formal register, the question particle is added.@1@9@@oe@30-11-2008
10431190@unknown@formal@none@1@S@For example, "It is OK" becomes "Is it OK?".@1@9@@oe@30-11-2008
10431200@unknown@formal@none@1@S@In a more informal tone sometimes the particle is added instead to show a personal interest of the speaker: "Why aren't (you) coming?".@1@23@@oe@30-11-2008
10431210@unknown@formal@none@1@S@Some simple queries are formed simply by mentioning the topic with an interrogative intonation to call for the hearer's attention: "(What about) this?"; "(What's your) name?".@1@26@@oe@30-11-2008
10431220@unknown@formal@none@1@S@Negatives are formed by inflecting the verb.@1@7@@oe@30-11-2008
10431230@unknown@formal@none@1@S@For example, "I will eat bread" or "I eat bread" becomes "I will not eat bread" or "I do not eat bread".@1@22@@oe@30-11-2008
10431240@unknown@formal@none@1@S@The so-called verb form is used for a variety of purposes: either progressive or perfect aspect (see above); combining verbs in a temporal sequence ( "I'll eat breakfast and leave at once"), simple commands, conditional statements and permissions ( "May I go out?"), etc.@1@44@@oe@30-11-2008
10431250@unknown@formal@none@1@S@The word (plain), (polite) is the [[copula]] verb.@1@8@@oe@30-11-2008
10431260@unknown@formal@none@1@S@It corresponds approximately to the English ''be'', but often takes on other roles, including a marker for tense, when the verb is conjugated into its past form (plain), (polite).@1@29@@oe@30-11-2008
10431270@unknown@formal@none@1@S@This comes into use because only adjectives and verbs can carry tense in Japanese.@1@14@@oe@30-11-2008
10431280@unknown@formal@none@1@S@Two additional common verbs are used to indicate existence ("there is") or, in some contexts, property: (negative ) and (negative ), for inanimate and animate things, respectively.@1@27@@oe@30-11-2008
10431290@unknown@formal@none@1@S@For example, "There's a cat", "[I] haven't got a good idea".@1@11@@oe@30-11-2008
10431300@unknown@formal@none@1@S@Note that the negative forms of the verbs and are actually ''i''-adjectives and inflect as such, e.g.@1@17@@oe@30-11-2008
10431310@unknown@formal@none@1@S@"There was no cat".@1@4@@oe@30-11-2008
10431320@unknown@formal@none@1@S@The verb "to do" (, polite form ) is often used to make verbs from nouns ( "to cook", "to study", etc.) and has been productive in creating modern slang words.@1@31@@oe@30-11-2008
10431330@unknown@formal@none@1@S@Japanese also has a huge number of compound verbs to express concepts that are described in English using a verb and a preposition (e.g. "to fly out, to flee," from "to fly, to jump" + "to put out, to emit").@1@40@@oe@30-11-2008
10431340@unknown@formal@none@1@S@There are three types of [[Japanese adjectives|adjective]] (see also [[Japanese adjectives]]):@1@11@@oe@30-11-2008
10431350@unknown@formal@none@1@S@# , or adjectives, which have a [[Japanese verb conjugations|conjugating]] ending (such as "to be hot") which can become past ( "it was hot"), or negative ( "it is not hot").@1@31@@oe@30-11-2008
10431360@unknown@formal@none@1@S@Note that is also an adjective, which can become past ( "it was not hot").@1@15@@oe@30-11-2008
10431370@unknown@formal@none@1@S@#: "a hot day".@1@4@@oe@30-11-2008
10431380@unknown@formal@none@1@S@# , or adjectives, which are followed by a form of the [[copula]], usually .@1@15@@oe@30-11-2008
10431390@unknown@formal@none@1@S@For example (strange)@1@3@@oe@30-11-2008
10431400@unknown@formal@none@1@S@#: "a strange person".@1@4@@oe@30-11-2008
10431410@unknown@formal@none@1@S@# , also called true adjectives, such as "that"@1@9@@oe@30-11-2008
10431420@unknown@formal@none@1@S@#: "that mountain".@1@3@@oe@30-11-2008
10431430@unknown@formal@none@1@S@Both and may [[predicate (grammar)|predicate]] sentences.@1@6@@oe@30-11-2008
10431440@unknown@formal@none@1@S@For example,@1@2@@oe@30-11-2008
10431450@unknown@formal@none@1@S@: "The rice is hot."@1@5@@oe@30-11-2008
10431460@unknown@formal@none@1@S@: "He's strange."@1@3@@oe@30-11-2008
10431470@unknown@formal@none@1@S@Both inflect, though they do not show the full range of conjugation found in true verbs.@1@16@@oe@30-11-2008
10431480@unknown@formal@none@1@S@The in Modern Japanese are few in number, and unlike the other words, are limited to directly modifying nouns.@1@19@@oe@30-11-2008
10431490@unknown@formal@none@1@S@They never predicate sentences.@1@4@@oe@30-11-2008
10431500@unknown@formal@none@1@S@Examples include "big", "this", "so-called" and "amazing".@1@7@@oe@30-11-2008
10431510@unknown@formal@none@1@S@Both and form [[adverb]]s, by following with in the case of :@1@12@@oe@30-11-2008
10431520@unknown@formal@none@1@S@: "become strange",@1@3@@oe@30-11-2008
10431530@unknown@formal@none@1@S@and by changing to in the case of :@1@9@@oe@30-11-2008
10431540@unknown@formal@none@1@S@: "become hot".@1@3@@oe@30-11-2008
10431550@unknown@formal@none@1@S@The grammatical function of nouns is indicated by [[postposition]]s, also called [[Japanese particles|particles]].@1@13@@oe@30-11-2008
10431560@unknown@formal@none@1@S@These include for example:@1@4@@oe@30-11-2008
10431570@unknown@formal@none@1@S@* for the [[nominative case]].@1@5@@oe@30-11-2008
10431580@unknown@formal@none@1@S@Not necessarily a subject.@1@4@@oe@30-11-2008
10431590@unknown@formal@none@1@S@: "'''He''' did it."@1@4@@oe@30-11-2008
10431600@unknown@formal@none@1@S@* for the [[dative case]].@1@5@@oe@30-11-2008
10431610@unknown@formal@none@1@S@: "Please give it to '''Mr. Tanaka'''."@1@7@@oe@30-11-2008
10431620@unknown@formal@none@1@S@It is also used for the [[lative]] case, indicating a motion to a location.@1@14@@oe@30-11-2008
10431630@unknown@formal@none@1@S@: "I want to go ''to'' '''Japan'''."@1@7@@oe@30-11-2008
10431640@unknown@formal@none@1@S@* for the [[genitive case]], or nominalizing phrases.@1@8@@oe@30-11-2008
10431650@unknown@formal@none@1@S@: "'''my''' camera"@1@3@@oe@30-11-2008
10431660@unknown@formal@none@1@S@: "(I) like go'''ing''' skiing."@1@5@@oe@30-11-2008
10431670@unknown@formal@none@1@S@* for the [[accusative case]].@1@5@@oe@30-11-2008
10431680@unknown@formal@none@1@S@Not necessarily an object.@1@4@@oe@30-11-2008
10431690@unknown@formal@none@1@S@: "'''What''' will (you) eat?"@1@5@@oe@30-11-2008
10431700@unknown@formal@none@1@S@* for the topic.@1@4@@oe@30-11-2008
10431710@unknown@formal@none@1@S@It can co-exist with case markers above except , and it overrides and .@1@14@@oe@30-11-2008
10431720@unknown@formal@none@1@S@: "As for me, Thai food is good."@1@8@@oe@30-11-2008
10431730@unknown@formal@none@1@S@The nominative marker after is hidden under . <small>(Note that English generally makes no distinction between sentence topic and subject.)</small> Note: The difference between and goes beyond the English distinction between sentence topic and subject.@1@35@@oe@30-11-2008
10431740@unknown@formal@none@1@S@While indicates the topic, which the rest of the sentence describes or acts upon, it carries the implication that the subject indicated by is not unique, or may be part of a larger group.@1@34@@oe@30-11-2008
10431750@unknown@formal@none@1@S@: "As for Mr. Ikeda, he is forty-two years old."@1@10@@oe@30-11-2008
10431760@unknown@formal@none@1@S@Others in the group may also be of that age.@1@10@@oe@30-11-2008
10431770@unknown@formal@none@1@S@Absence of often means the subject is the [[focus (linguistics)|focus]] of the sentence.@1@13@@oe@30-11-2008
10431780@unknown@formal@none@1@S@: "It is Mr. Ikeda who is forty-two years old."@1@10@@oe@30-11-2008
10431790@unknown@formal@none@1@S@This is a reply to an implicit or explicit question who in this group is forty-two years old.@1@18@@oe@30-11-2008
10431800@unknown@formal@none@1@S@=== Politeness ===@1@3@@oe@30-11-2008
10431810@unknown@formal@none@1@S@Unlike most western languages, Japanese has an extensive grammatical system to express politeness and formality.@1@15@@oe@30-11-2008
10431820@unknown@formal@none@1@S@Most relationships are not equal in Japanese [[society]].@1@8@@oe@30-11-2008
10431830@unknown@formal@none@1@S@The differences in social position are determined by a variety of factors including job, age, experience, or even psychological state (e.g., a person asking a favour tends to do so politely).@1@31@@oe@30-11-2008
10431840@unknown@formal@none@1@S@The person in the lower position is expected to use a polite form of speech, whereas the other might use a more plain form.@1@24@@oe@30-11-2008
10431850@unknown@formal@none@1@S@Strangers will also speak to each other politely.@1@8@@oe@30-11-2008
10431860@unknown@formal@none@1@S@Japanese children rarely use polite speech until they are teens, at which point they are expected to begin speaking in a more adult manner.@1@24@@oe@30-11-2008
10431870@unknown@formal@none@1@S@''See [[uchi-soto]]''.@1@2@@oe@30-11-2008
10431880@unknown@formal@none@1@S@Whereas (polite language) is commonly an [[inflection]]al system, (respectful language) and (humble language) often employ many special honorific and humble alternate verbs: "go" becomes in polite form, but is replaced by in honorific speech and or in humble speech.@1@39@@oe@30-11-2008
10431890@unknown@formal@none@1@S@The difference between honorific and humble speech is particularly pronounced in the Japanese language.@1@14@@oe@30-11-2008
10431900@unknown@formal@none@1@S@Humble language is used to talk about oneself or one's own group (company, family) whilst honorific language is mostly used when describing the interlocutor and his/her group.@1@27@@oe@30-11-2008
10431910@unknown@formal@none@1@S@For example, the suffix ("Mr" "Mrs." or "Miss") is an example of honorific language.@1@14@@oe@30-11-2008
10431920@unknown@formal@none@1@S@It is not used to talk about oneself or when talking about someone from one's company to an external person, since the company is the speaker's "group".@1@27@@oe@30-11-2008
10431930@unknown@formal@none@1@S@When speaking directly to one's superior in one's company or when speaking with other employees within one's company about a superior, a Japanese person will use vocabulary and inflections of the honorific register to refer to the in-group superior and his or her speech and actions.@1@46@@oe@30-11-2008
10431940@unknown@formal@none@1@S@When speaking to a person from another company (i.e., a member of an out-group), however, a Japanese person will use the plain or the humble register to refer to the speech and actions of his or her own in-group superiors.@1@40@@oe@30-11-2008
10431950@unknown@formal@none@1@S@In short, the register used in Japanese to refer to the person, speech, or actions of any particular individual varies depending on the relationship (either in-group or out-group) between the speaker and listener, as well as depending on the relative status of the speaker, listener, and third-person referents.@1@48@@oe@30-11-2008
10431960@unknown@formal@none@1@S@For this reason, the Japanese system for explicit indication of social register is known as a system of "relative honorifics."@1@20@@oe@30-11-2008
10431970@unknown@formal@none@1@S@This stands in stark contrast to the [[Korean language|Korean]] system of "absolute honorifics," in which the same register is used to refer to a particular individual (e.g. one's father, one's company president, etc.) in any context regardless of the relationship between the speaker and interlocutor.@1@45@@oe@30-11-2008
10431980@unknown@formal@none@1@S@Thus, polite Korean speech can sound very presumptuous when translated verbatim into Japanese, as in Korean it is acceptable and normal to say things like "Our '''Mr.''' Company-President..." when communicating with a member of an out-group, which would be very inappropriate in a Japanese social context.@1@46@@oe@30-11-2008
10431990@unknown@formal@none@1@S@Most [[noun]]s in the Japanese language may be made polite by the addition of or as a prefix. is generally used for words of native Japanese origin, whereas is affixed to words of Chinese derivation.@1@35@@oe@30-11-2008
10432000@unknown@formal@none@1@S@In some cases, the prefix has become a fixed part of the word, and is included even in regular speech, such as 'cooked rice; meal.'@1@25@@oe@30-11-2008
10432010@unknown@formal@none@1@S@Such a construction often indicates deference to either the item's owner or to the object itself.@1@16@@oe@30-11-2008
10432020@unknown@formal@none@1@S@For example, the word 'friend,' would become when referring to the friend of someone of higher status (though mothers often use this form to refer to their children's friends).@1@29@@oe@30-11-2008
10432030@unknown@formal@none@1@S@On the other hand, a polite speaker may sometimes refer to 'water' as in order to show politeness.@1@18@@oe@30-11-2008
10432040@unknown@formal@none@1@S@Most Japanese people employ politeness to indicate a lack of familiarity.@1@11@@oe@30-11-2008
10432050@unknown@formal@none@1@S@That is, they use polite forms for new acquaintances, but if a relationship becomes more intimate, they no longer use them.@1@21@@oe@30-11-2008
10432060@unknown@formal@none@1@S@This occurs regardless of age, social class, or gender.@1@9@@oe@30-11-2008
10432070@unknown@formal@none@1@S@== Vocabulary ==@1@3@@oe@30-11-2008
10432080@unknown@formal@none@1@S@The original language of Japan, or at least the original language of a certain population that was ancestral to a significant portion of the historical and present Japanese nation, was the so-called ( or infrequently , i.e. "[[Yamato people|Yamato]] words"), which in scholarly contexts is sometimes referred to as ( or rarely , i.e. the words").@1@56@@oe@30-11-2008
10432090@unknown@formal@none@1@S@In addition to words from this original language, present-day Japanese includes a great number of words that were either borrowed from [[Chinese language|Chinese]] or constructed from Chinese roots following Chinese patterns.@1@31@@oe@30-11-2008
10432100@unknown@formal@none@1@S@These words, known as , entered the language from the fifth century onwards via contact with Chinese culture.@1@18@@oe@30-11-2008
10432110@unknown@formal@none@1@S@According to a [[Japanese dictionary]] ''Shinsen-kokugojiten'' (新選国語辞典), [[Sino-Japanese vocabulary|Chinese-based words]] comprise 49.1% of the total vocabulary, Wago is 33.8% and other foreign words are 8.8%.@1@25@@oe@30-11-2008
10432120@unknown@formal@none@1@S@Like Latin-derived words in English, words typically are perceived as somewhat formal or academic compared to equivalent Yamato words.@1@19@@oe@30-11-2008
10432130@unknown@formal@none@1@S@Indeed, it is generally fair to say that an English word derived from Latin/French roots typically corresponds to a Sino-Japanese word in Japanese, whereas a simpler Anglo-Saxon word would best be translated by a Yamato equivalent.@1@36@@oe@30-11-2008
10432140@unknown@formal@none@1@S@A much smaller number of words has been borrowed from [[Korean language|Korean]] and [[Ainu language|Ainu]].@1@15@@oe@30-11-2008
10432150@unknown@formal@none@1@S@Japan has also borrowed a number of words from other languages, particularly ones of European extraction, which are called .@1@20@@oe@30-11-2008
10432160@unknown@formal@none@1@S@This began with [[Japanese words of Portuguese origin|borrowings from Portuguese]] in the 16th century, followed by borrowing from [[Dutch language|Dutch]] during Japan's [[sakoku|long isolation]] of the [[Edo period]].@1@28@@oe@30-11-2008
10432170@unknown@formal@none@1@S@With the [[Meiji Restoration]] and the reopening of Japan in the 19th century, borrowing occurred from [[German language|German]], [[French language|French]] and [[English language|English]].@1@23@@oe@30-11-2008
10432180@unknown@formal@none@1@S@Currently, words of English origin are the most commonly borrowed.@1@10@@oe@30-11-2008
10432190@unknown@formal@none@1@S@In the Meiji era, the Japanese also coined many neologisms using Chinese roots and morphology to translate Western concepts.@1@19@@oe@30-11-2008
10432200@unknown@formal@none@1@S@The Chinese and Koreans imported many of these pseudo-Chinese words into [[Chinese language|Chinese]], [[Korean language|Korean]], and [[Vietnamese language|Vietnamese]] via their [[kanji]] in the late 19th and early 20th centuries.@1@29@@oe@30-11-2008
10432210@unknown@formal@none@1@S@For example, ("politics"), and ("chemistry") are words derived from Chinese roots that were first created and used by the Japanese, and only later borrowed into Chinese and other East Asian languages.@1@31@@oe@30-11-2008
10432220@unknown@formal@none@1@S@As a result, Japanese, Chinese, Korean, and Vietnamese share a large common corpus of vocabulary in the same way a large number of Greek- and Latin-derived words are shared among modern European languages, although many academic words formed from such roots were certainly coined by native speakers of other languages, such as English.@1@53@@oe@30-11-2008
10432230@unknown@formal@none@1@S@In the past few decades, (made-in-Japan English) has become a prominent phenomenon.@1@12@@oe@30-11-2008
10432240@unknown@formal@none@1@S@Words such as (< ''one'' + ''pattern'', "to be in a rut", "to have a one-track mind") and 　 (< ''skin'' + ''-ship'', "physical contact"), although coined by compounding English roots, are nonsensical in most non-Japanese contexts; exceptions exist in nearby languages such as Korean however, which often use words such as skinship and rimokon (remote control) in the same way as in Japanese.@1@64@@oe@30-11-2008
10432250@unknown@formal@none@1@S@Additionally, many native Japanese words have become commonplace in English, due to the popularity of many Japanese cultural exports.@1@19@@oe@30-11-2008
10432260@unknown@formal@none@1@S@Words such as [[futon]], [[haiku]], [[judo]], [[kamikaze]], [[karaoke]], [[karate]], [[ninja]], [[origami]], [[rickshaw]] (from ), [[samurai]], [[sayonara]], [[sumo]], [[sushi]], [[tsunami]], [[tycoon]] and many others have become part of the English language.@1@30@@oe@30-11-2008
10432270@unknown@formal@none@1@S@See [[list of English words of Japanese origin]] for more.@1@10@@oe@30-11-2008
10432280@unknown@formal@none@1@S@== Writing system ==@1@4@@oe@30-11-2008
10432290@unknown@formal@none@1@S@Literacy was introduced to Japan in the form of the [[Chinese writing system]], by way of [[Baekje]] before the 5th century.@1@21@@oe@30-11-2008
10432300@unknown@formal@none@1@S@Using this language, the Japanese emperor [[Emperor Yūryaku|Yūryaku]] sent a letter to a Chinese emperor [[Emperor Shun of Liu Song|Liu Song]] in 478 CE.@1@24@@oe@30-11-2008
10432310@unknown@formal@none@1@S@After the ruin of Baekje, Japan invited scholars from China to learn more of the Chinese writing system.@1@18@@oe@30-11-2008
10432320@unknown@formal@none@1@S@Japanese Emperors gave an official rank to Chinese scholars (続守言/薩弘格/袁晋卿) and spread the use of Chinese characters from the 7th century to the 8th century.@1@25@@oe@30-11-2008
10432330@unknown@formal@none@1@S@At first, the Japanese wrote in [[Classical Chinese]], with Japanese names represented by characters used for their meanings and not their sounds.@1@22@@oe@30-11-2008
10432340@unknown@formal@none@1@S@Later, during the seventh century CE, the Chinese-sounding phoneme principle was used to write pure Japanese poetry and prose (comparable to Akkadian's retention of Sumerian cuneiform), but some Japanese words were still written with characters for their meaning and not the original Chinese sound.@1@44@@oe@30-11-2008
10432350@unknown@formal@none@1@S@This is when the history of Japanese as a written language begins in its own right.@1@16@@oe@30-11-2008
10432360@unknown@formal@none@1@S@By this time, the Japanese language was already distinct from the [[Ryukyuan languages]].@1@13@@oe@30-11-2008
10432370@unknown@formal@none@1@S@The Korean settlers and their descendants used Kudara-on or Baekje pronunciation (百済音), which was also called Tsushima-pronunciation (対馬音) or [[Go-on]] (呉音).@1@21@@oe@30-11-2008
10432380@unknown@formal@none@1@S@An example of this mixed style is the [[Kojiki]], which was written in 712 AD.@1@15@@oe@30-11-2008
10432390@unknown@formal@none@1@S@They then started to use Chinese characters to write Japanese in a style known as , a syllabic script which used Chinese characters for their sounds in order to transcribe the words of Japanese speech syllable by syllable.@1@38@@oe@30-11-2008
10432400@unknown@formal@none@1@S@Over time, a writing system evolved.@1@6@@oe@30-11-2008
10432410@unknown@formal@none@1@S@[[Chinese characters]] ([[kanji]]) were used to write either words borrowed from Chinese, or Japanese words with the same or similar meanings.@1@21@@oe@30-11-2008
10432420@unknown@formal@none@1@S@Chinese characters were also used to write grammatical elements, were simplified, and eventually became two syllabic scripts: [[hiragana]] and [[katakana]].@1@20@@oe@30-11-2008
10432430@unknown@formal@none@1@S@Modern Japanese is written in a mixture of three main systems: [[kanji]], characters of Chinese origin used to represent both Chinese [[loanword]]s into Japanese and a number of native Japanese [[morpheme]]s; and two [[syllabary|syllabaries]]: [[hiragana]] and [[katakana]].@1@37@@oe@30-11-2008
10432440@unknown@formal@none@1@S@The [[Latin alphabet]] is also sometimes used.@1@7@@oe@30-11-2008
10432450@unknown@formal@none@1@S@Arabic numerals are much more common than the kanji when used in counting, but kanji numerals are still used in compounds, such as ("unification").@1@24@@oe@30-11-2008
10432460@unknown@formal@none@1@S@''[[Hiragana]]'' are used for words without kanji representation, for words no longer written in kanji, and also following kanji to show conjugational endings.@1@23@@oe@30-11-2008
10432470@unknown@formal@none@1@S@Because of the way verbs (and adjectives) in Japanese are [[conjugated]], kanji alone cannot fully convey Japanese tense and mood, as kanji cannot be subject to variation when written without losing its meaning.@1@33@@oe@30-11-2008
10432480@unknown@formal@none@1@S@For this reason, hiragana are suffixed to the ends of kanji to show verb and adjective conjugations.@1@17@@oe@30-11-2008
10432490@unknown@formal@none@1@S@Hiragana used in this way are called [[okurigana]].@1@8@@oe@30-11-2008
10432500@unknown@formal@none@1@S@Hiragana are also written in a superscript called [[furigana]] above or beside a kanji to show the proper reading.@1@19@@oe@30-11-2008
10432510@unknown@formal@none@1@S@This is done to facilitate learning, as well as to clarify particularly old or obscure (or sometimes invented) readings.@1@19@@oe@30-11-2008
10432520@unknown@formal@none@1@S@''[[Katakana]]'', like hiragana, are a syllabary; katakana are primarily used to write foreign words, plant and animal names, and for emphasis.@1@21@@oe@30-11-2008
10432530@unknown@formal@none@1@S@For example "Australia" has been adapted as , and "supermarket" has been adapted and shortened into .@1@17@@oe@30-11-2008
10432540@unknown@formal@none@1@S@The [[Latin alphabet]] (in Japanese referred to as [[romaji|''Rōmaji'']] , literally "Roman letters") is used for some loan words like "CD" and "DVD", and also for some Japanese creations like "Sony".@1@31@@oe@30-11-2008
10432550@unknown@formal@none@1@S@Historically, attempts to limit the number of kanji in use commenced in the mid-19th century, but did not become a matter of government intervention until after Japan's defeat in the Second World War.@1@33@@oe@30-11-2008
10432560@unknown@formal@none@1@S@During the period of post-war occupation (and influenced by the views of some U.S. officials), various schemes including the complete abolition of kanji and exclusive use of rōmaji were considered.@1@30@@oe@30-11-2008
10432570@unknown@formal@none@1@S@The ("common use kanji", originally called [kanji for general use]) scheme arose as a compromise solution.@1@16@@oe@30-11-2008
10432580@unknown@formal@none@1@S@Japanese students begin to learn kanji from their first year at elementary school.@1@13@@oe@30-11-2008
10432590@unknown@formal@none@1@S@A guideline created by the Japanese Ministry of Education, the list of ("education kanji", a subset of ), specifies the 1,006 simple characters a child is to learn by the end of sixth grade.@1@34@@oe@30-11-2008
10432600@unknown@formal@none@1@S@Children continue to study another 939 characters in junior high school, covering in total 1,945 .@1@16@@oe@30-11-2008
10432610@unknown@formal@none@1@S@The official list of was revised several times, but the total number of officially sanctioned characters remained largely unchanged.@1@19@@oe@30-11-2008
10432620@unknown@formal@none@1@S@As for kanji for personal names, the circumstances are somewhat complicated. and (an appendix of additional characters for names) are approved for registering personal names.@1@25@@oe@30-11-2008
10432630@unknown@formal@none@1@S@Names containing unapproved characters are denied registration.@1@7@@oe@30-11-2008
10432640@unknown@formal@none@1@S@However, as with the list of , criteria for inclusion were often arbitrary and led to many common and popular characters being disapproved for use.@1@25@@oe@30-11-2008
10432650@unknown@formal@none@1@S@Under popular pressure and following a court decision holding the exclusion of common characters unlawful, the list of was substantially extended from 92 in 1951 (the year it was first decreed) to 983 in 2004.@1@35@@oe@30-11-2008
10432660@unknown@formal@none@1@S@Furthermore, families whose names are not on these lists were permitted to continue using the older forms.@1@17@@oe@30-11-2008
10432670@unknown@formal@none@1@S@Many writers rely on [[newspaper]] circulation to publish their work with officially sanctioned characters.@1@14@@oe@30-11-2008
10432680@unknown@formal@none@1@S@This distribution method is more efficient than traditional [[pen]] and [[paper]] publications.@1@12@@oe@30-11-2008
10432690@unknown@formal@none@1@S@==Study by non-native speakers==@1@4@@oe@30-11-2008
10432700@unknown@formal@none@1@S@Many major universities throughout the world provide Japanese language courses, and a number of secondary and even primary schools worldwide offer courses in the language.@1@25@@oe@30-11-2008
10432710@unknown@formal@none@1@S@International interest in the Japanese language dates from the 1800s but has become more prevalent following Japan's economic bubble of the 1980s and the global popularity of [[Japanese pop culture]] (such as [[anime]] and [[video games]]) since the 1990s.@1@39@@oe@30-11-2008
10432720@unknown@formal@none@1@S@About 2.3 million people studied the language worldwide in 2003: 900,000 South [[Koreans]], 389,000 [[People's Republic of China|Chinese]], 381,000 [[Australians]], and 140,000 [[United States|Americans]] study Japanese in lower and higher educational institutions.@1@32@@oe@30-11-2008
10432730@unknown@formal@none@1@S@In Japan, more than 90,000 foreign students study at [[List of universities in Japan|Japanese universities]] and Japanese [[language school]]s, including 77,000 Chinese and 15,000 South Koreans in 2003.@1@28@@oe@30-11-2008
10432740@unknown@formal@none@1@S@In addition, local governments and some [[non-profit organisation|NPO]] groups provide free Japanese language classes for foreign residents, including [[Japanese Brazilians]] and foreigners married to Japanese nationals.@1@26@@oe@30-11-2008
10432750@unknown@formal@none@1@S@In the United Kingdom, studies are supported by the [[British Association for Japanese Studies]].@1@14@@oe@30-11-2008
10432760@unknown@formal@none@1@S@In Ireland, Japanese is offered as a language in the [[Leaving Certificate]] in some schools.@1@15@@oe@30-11-2008
10432770@unknown@formal@none@1@S@The Japanese government provides standardised tests to measure spoken and written comprehension of Japanese for second language learners; the most prominent is the [[Japanese Language Proficiency Test]] (JLPT).@1@28@@oe@30-11-2008
10432780@unknown@formal@none@1@S@The Japanese External Trade Organisation [[JETRO]] organises the ''Business Japanese Proficiency Test'' which tests the learner's ability to understand Japanese in a business setting.@1@24@@oe@30-11-2008
10432790@unknown@formal@none@1@S@When learning Japanese in a college setting, students are usually first taught how to pronounce [[romaji]].@1@16@@oe@30-11-2008
10432800@unknown@formal@none@1@S@From that point, they are taught the two main syllabaries, with [[kanji]] usually being introduced in the second semester.@1@19@@oe@30-11-2008
10432810@unknown@formal@none@1@S@Focus is usually first on polite (distal) speech, as students that might interact with native speakers would be expected to use.@1@21@@oe@30-11-2008
10432820@unknown@formal@none@1@S@Casual speech and formal speech usually follow polite speech, as well as the usage of honourifics.@1@16@@oe@30-11-2008
10440010@unknown@formal@none@1@S@<article>Java (programming language)</article>@1@3@@oe@30-11-2008
10440020@unknown@formal@none@1@S@'''Java''' is a [[programming language]] originally developed by [[Sun Microsystems]] and released in 1995 as a core component of Sun Microsystems' [[Java (Sun)|Java platform]].@1@24@@oe@30-11-2008
10440030@unknown@formal@none@1@S@The language derives much of its [[Syntax of programming languages|syntax]] from [[C (programming language)|C]] and [[C++]] but has a simpler [[object model]] and fewer low-level facilities.@1@26@@oe@30-11-2008
10440040@unknown@formal@none@1@S@Java applications are typically [[compiler|compiled]] to [[bytecode]] that can run on any [[Java virtual machine]] (JVM) regardless of [[computer architecture]].@1@20@@oe@30-11-2008
10440050@unknown@formal@none@1@S@The original and [[reference implementation]] Java [[compiler]]s, virtual machines, and [[library (computing)|class libraries]] were developed by Sun from 1995.@1@19@@oe@30-11-2008
10440060@unknown@formal@none@1@S@As of May 2007, in compliance with the specifications of the [[Java Community Process]], Sun made available most of their Java technologies as [[free software]] under the [[GNU General Public License]].@1@31@@oe@30-11-2008
10440070@unknown@formal@none@1@S@Others have also developed alternative implementations of these Sun technologies, such as the [[GNU Compiler for Java]] and [[GNU Classpath]].@1@20@@oe@30-11-2008
10440080@unknown@formal@none@1@S@== History ==@1@3@@oe@30-11-2008
10440090@unknown@formal@none@1@S@The Java language was created by [[James Gosling]] in June 1991 for use in one of his many [[set-top box]] projects.@1@21@@oe@30-11-2008
10440100@unknown@formal@none@1@S@The language was initially called ''Oak'', after an [[oak tree]] that stood outside Gosling's office—and also went by the name ''Green''—and ended up later being renamed to ''Java'', from a list of random words.@1@34@@oe@30-11-2008
10440110@unknown@formal@none@1@S@Gosling's goals were to implement a [[virtual machine]] and a language that had a familiar C/C++ style of notation.@1@19@@oe@30-11-2008
10440120@unknown@formal@none@1@S@The first public implementation was Java 1.0 in 1995.@1@9@@oe@30-11-2008
10440130@unknown@formal@none@1@S@It promised "[[Write once, run anywhere|Write Once, Run Anywhere]]" (WORA), providing no-cost runtimes on popular platforms.@1@16@@oe@30-11-2008
10440140@unknown@formal@none@1@S@It was fairly secure and its security was configurable, allowing network and file access to be restricted.@1@17@@oe@30-11-2008
10440150@unknown@formal@none@1@S@Major web browsers soon incorporated the ability to run secure Java ''[[applet]]s'' within web pages.@1@15@@oe@30-11-2008
10440160@unknown@formal@none@1@S@Java quickly became popular.@1@4@@oe@30-11-2008
10440170@unknown@formal@none@1@S@With the advent of ''Java 2'', new versions had multiple configurations built for different types of platforms.@1@17@@oe@30-11-2008
10440180@unknown@formal@none@1@S@For example, ''[[J2EE]]'' was for enterprise applications and the greatly stripped down version ''[[J2ME]]'' was for mobile applications.@1@18@@oe@30-11-2008
10440190@unknown@formal@none@1@S@''[[J2SE]]'' was the designation for the Standard Edition.@1@8@@oe@30-11-2008
10440200@unknown@formal@none@1@S@In 2006, for marketing purposes, new ''J2'' versions were renamed ''Java EE'', ''Java ME'', and ''Java SE'', respectively.@1@18@@oe@30-11-2008
10440210@unknown@formal@none@1@S@In 1997, Sun Microsystems approached the [[International Organization for Standardization#JTC1|ISO/IEC JTC1 standards body]] and later the [[Ecma International]] to formalize Java, but it soon withdrew from the process.@1@28@@oe@30-11-2008
10440220@unknown@formal@none@1@S@Java remains a [[de facto]] standard that is controlled through the [[Java Community Process]].@1@14@@oe@30-11-2008
10440230@unknown@formal@none@1@S@At one time, Sun made most of its Java implementations available without charge although they were [[proprietary software]].@1@18@@oe@30-11-2008
10440240@unknown@formal@none@1@S@Sun's revenue from Java was generated by the selling of licenses for specialized products such as the Java Enterprise System.@1@20@@oe@30-11-2008
10440250@unknown@formal@none@1@S@Sun distinguishes between its [[Software Development Kit|Software Development Kit (SDK)]] and [[HotSpot|Runtime Environment (JRE)]] that is a subset of the SDK, the primary distinction being that in the JRE, the compiler, utility programs, and many necessary header files are not present.@1@41@@oe@30-11-2008
10440260@unknown@formal@none@1@S@On [[13 November]] [[2006]], Sun released much of Java as [[free software|free]] and [[open-source software|open-source]] software under the terms of the [[GNU General Public License]] (GPL).@1@26@@oe@30-11-2008
10440270@unknown@formal@none@1@S@On [[8 May]] [[2007]] Sun finished the process, making all of Java's core code free and open-source, aside from a small portion of code to which Sun did not hold the copyright.@1@32@@oe@30-11-2008
10440280@unknown@formal@none@1@S@== Philosophy ==@1@3@@oe@30-11-2008
10440290@unknown@formal@none@1@S@=== Primary goals ===@1@4@@oe@30-11-2008
10440300@unknown@formal@none@1@S@There were five primary goals in the creation of the Java language:@1@12@@oe@30-11-2008
10440310@unknown@formal@none@1@S@# It should use the [[object-oriented programming]] methodology.@1@8@@oe@30-11-2008
10440320@unknown@formal@none@1@S@# It should allow the same program to be [[execution (computers)|executed]] on multiple [[operating system]]s.@1@15@@oe@30-11-2008
10440330@unknown@formal@none@1@S@# It should contain built-in support for using [[computer network]]s.@1@10@@oe@30-11-2008
10440340@unknown@formal@none@1@S@# It should be designed to execute code from [[remote procedure call|remote source]]s securely.@1@14@@oe@30-11-2008
10440350@unknown@formal@none@1@S@# It should be easy to use by selecting what were considered the good parts of other object-oriented languages.@1@19@@oe@30-11-2008
10440360@unknown@formal@none@1@S@=== Platform independence ===@1@4@@oe@30-11-2008
10440370@unknown@formal@none@1@S@One characteristic, [[Cross-platform|platform independence]], means that [[computer program|program]]s written in the Java language must run similarly on any supported hardware/operating-system platform.@1@21@@oe@30-11-2008
10440380@unknown@formal@none@1@S@One should be able to write a program once, compile it once, and run it anywhere.@1@16@@oe@30-11-2008
10440390@unknown@formal@none@1@S@This is achieved by most Java [[compiler]]s by compiling the Java language code ''halfway'' (to [[Java bytecode]]) – simplified machine instructions specific to the Java platform.@1@26@@oe@30-11-2008
10440400@unknown@formal@none@1@S@The code is then run on a [[virtual machine]] (VM), a program written in native code on the host hardware that [[Interpreter (computing)|interprets]] and executes generic Java bytecode.@1@28@@oe@30-11-2008
10440410@unknown@formal@none@1@S@(In some JVM versions, bytecode can also be compiled to native code, either before or during program execution, resulting in faster execution.)@1@22@@oe@30-11-2008
10440420@unknown@formal@none@1@S@Further, standardized libraries are provided to allow access to features of the host machines (such as graphics, [[thread (computer science)|threading]] and [[Computer network|networking]]) in unified ways.@1@26@@oe@30-11-2008
10440430@unknown@formal@none@1@S@Note that, although there is an explicit compiling stage, at some point, the Java bytecode is interpreted or converted to native [[machine code]] by the [[Just-in-time compilation|JIT compiler]].@1@28@@oe@30-11-2008
10440440@unknown@formal@none@1@S@The first implementations of the language used an interpreted virtual machine to achieve [[Porting|portability]].@1@14@@oe@30-11-2008
10440450@unknown@formal@none@1@S@These implementations produced programs that ran slower than programs compiled to native executables, for instance written in C or C++, so the language suffered a reputation for poor performance.@1@29@@oe@30-11-2008
10440460@unknown@formal@none@1@S@More recent JVM implementations produce programs that run significantly faster than before, using multiple techniques.@1@15@@oe@30-11-2008
10440470@unknown@formal@none@1@S@One technique, known as ''just-in-time compilation'' (JIT), translates the Java bytecode into native code at the time that the program is run, which results in a program that executes faster than interpreted code but also incurs compilation overhead during execution.@1@40@@oe@30-11-2008
10440480@unknown@formal@none@1@S@More sophisticated VMs use ''[[dynamic recompilation]]'', in which the VM can analyze the behavior of the running program and selectively recompile and optimize critical parts of the program.@1@28@@oe@30-11-2008
10440490@unknown@formal@none@1@S@Dynamic recompilation can achieve optimizations superior to static compilation because the dynamic compiler can base optimizations on knowledge about the runtime environment and the set of loaded classes, and can identify the ''hot spots'' (parts of the program, often inner loops, that take up the most execution time).@1@48@@oe@30-11-2008
10440500@unknown@formal@none@1@S@JIT compilation and dynamic recompilation allow Java programs to take advantage of the speed of native code without losing portability.@1@20@@oe@30-11-2008
10440510@unknown@formal@none@1@S@Another technique, commonly known as ''static compilation'', is to compile directly into native code like a more traditional compiler.@1@19@@oe@30-11-2008
10440520@unknown@formal@none@1@S@Static Java compilers, such as [[GCJ]], translate the Java language code to native [[object code]], removing the intermediate bytecode stage.@1@20@@oe@30-11-2008
10440530@unknown@formal@none@1@S@This achieves good performance compared to interpretation, but at the expense of portability; the output of these compilers can only be run on a single [[Computer architecture|architecture]].@1@27@@oe@30-11-2008
10440540@unknown@formal@none@1@S@Some see avoiding the VM in this manner as defeating the point of developing in Java; however it can be useful to provide both a generic [[bytecode]] version, as well as an optimised native code version of an application.@1@39@@oe@30-11-2008
10440550@unknown@formal@none@1@S@=== Implementations ===@1@3@@oe@30-11-2008
10440560@unknown@formal@none@1@S@Sun Microsystems officially licenses the Java Standard Edition platform for [[Microsoft Windows]], [[Linux]], and [[Solaris (operating system)|Solaris]].@1@17@@oe@30-11-2008
10440570@unknown@formal@none@1@S@Through a network of third-party vendors and licensees, alternative Java environments are available for these and other platforms.@1@18@@oe@30-11-2008
10440580@unknown@formal@none@1@S@To qualify as a certified Java licensee, an implementation on any particular platform must pass a rigorous suite of validation and compatibility tests.@1@23@@oe@30-11-2008
10440590@unknown@formal@none@1@S@This method enables a guaranteed level of compliance and platform through a trusted set of commercial and non-commercial partners.@1@19@@oe@30-11-2008
10440600@unknown@formal@none@1@S@Sun's trademark license for usage of the Java brand insists that all implementations be "compatible".@1@15@@oe@30-11-2008
10440610@unknown@formal@none@1@S@This resulted in a legal dispute with [[Microsoft]] after Sun claimed that the Microsoft implementation did not support the [[Java remote method invocation|RMI]] and [[Java Native Interface|JNI]] interfaces and had added platform-specific features of their own.@1@36@@oe@30-11-2008
10440620@unknown@formal@none@1@S@Sun sued in 1997, and in 2001 won a settlement of $20 million as well as a court order enforcing the terms of the license from Sun.@1@27@@oe@30-11-2008
10440630@unknown@formal@none@1@S@As a result, Microsoft no longer ships Java with [[Microsoft Windows|Windows]], and in recent versions of Windows, [[Internet Explorer]] cannot support Java applets without a third-party plugin.@1@27@@oe@30-11-2008
10440640@unknown@formal@none@1@S@However, Sun and others have made available Java run-time systems at no cost for those and other versions of Windows.@1@20@@oe@30-11-2008
10440650@unknown@formal@none@1@S@Platform-independent Java is essential to the [[Java Enterprise Edition]] strategy, and an even more rigorous validation is required to certify an implementation.@1@22@@oe@30-11-2008
10440660@unknown@formal@none@1@S@This environment enables portable server-side applications, such as [[Web service]]s, [[servlet]]s, and [[Enterprise JavaBean]]s, as well as with [[Embedded system]]s based on [[OSGi]], using [[Embedded Java]] environments.@1@27@@oe@30-11-2008
10440670@unknown@formal@none@1@S@Through the new [[GlassFish]] project, Sun is working to create a fully functional, unified [[open-source]] implementation of the Java EE technologies.@1@21@@oe@30-11-2008
10440680@unknown@formal@none@1@S@=== Automatic memory management ===@1@5@@oe@30-11-2008
10440690@unknown@formal@none@1@S@One of the ideas behind Java's automatic memory management model is that programmers be spared the burden of having to perform manual memory management.@1@24@@oe@30-11-2008
10440700@unknown@formal@none@1@S@In some languages the programmer allocates memory for the creation of objects stored on the [[heap]] and the responsibility of later deallocating that memory also resides with the programmer.@1@29@@oe@30-11-2008
10440710@unknown@formal@none@1@S@If the programmer forgets to deallocate memory or writes code that fails to do so, a [[memory leak]] occurs and the program can consume an arbitrarily large amount of memory.@1@30@@oe@30-11-2008
10440720@unknown@formal@none@1@S@Additionally, if the program attempts to deallocate the region of memory more than once, the result is undefined and the program may become unstable and may crash.@1@27@@oe@30-11-2008
10440730@unknown@formal@none@1@S@Finally, in non garbage collected environments, there is a certain degree of overhead and complexity of user-code to track and finalize allocations.@1@22@@oe@30-11-2008
10440740@unknown@formal@none@1@S@Often developers may box themselves into certain designs to provide reasonable assurances that memory leaks will not occur.@1@18@@oe@30-11-2008
10440750@unknown@formal@none@1@S@In Java, this potential problem is avoided by [[automatic garbage collection]].@1@11@@oe@30-11-2008
10440760@unknown@formal@none@1@S@The programmer determines when objects are created, and the Java runtime is responsible for managing the [[object lifetime|object's lifecycle]].@1@19@@oe@30-11-2008
10440770@unknown@formal@none@1@S@The program or other objects can reference an object by holding a reference to it (which, from a low-level point of view, is its address on the heap).@1@28@@oe@30-11-2008
10440780@unknown@formal@none@1@S@When no references to an object remain, the [[unreachable object]] is eligible for release by the Java garbage collector - it may be freed automatically by the garbage collector at any time.@1@32@@oe@30-11-2008
10440790@unknown@formal@none@1@S@Memory leaks may still occur if a programmer's code holds a reference to an object that is no longer needed—in other words, they can still occur but at higher conceptual levels.@1@31@@oe@30-11-2008
10440800@unknown@formal@none@1@S@The use of garbage collection in a language can also affect programming paradigms.@1@13@@oe@30-11-2008
10440810@unknown@formal@none@1@S@If, for example, the developer assumes that the cost of memory allocation/recollection is low, they may choose to more freely construct objects instead of pre-initializing, holding and reusing them.@1@29@@oe@30-11-2008
10440820@unknown@formal@none@1@S@With the small cost of potential performance penalties (inner-loop construction of large/complex objects), this facilitates thread-isolation (no need to synchronize as different threads work on different object instances) and data-hiding.@1@30@@oe@30-11-2008
10440830@unknown@formal@none@1@S@The use of transient immutable value-objects minimizes side-effect programming.@1@9@@oe@30-11-2008
10440840@unknown@formal@none@1@S@Comparing Java and [[C++]], it is possible in C++ to implement similar functionality (for example, a memory management model for specific classes can be designed in C++ to improve speed and lower memory fragmentation considerably), with the possible cost of adding comparable runtime overhead to that of Java's garbage collector, and of added development time and application complexity if one favors manual implementation over using an existing third-party library.@1@69@@oe@30-11-2008
10440850@unknown@formal@none@1@S@In Java, garbage collection is built-in and virtually invisible to the developer.@1@12@@oe@30-11-2008
10440860@unknown@formal@none@1@S@That is, developers may have no notion of when garbage collection will take place as it may not necessarily correlate with any actions being explicitly performed by the code they write.@1@31@@oe@30-11-2008
10440870@unknown@formal@none@1@S@Depending on intended application, this can be beneficial or disadvantageous: the programmer is freed from performing low-level tasks, but at the same time loses the option of writing lower level code.@1@31@@oe@30-11-2008
10440880@unknown@formal@none@1@S@Additionally, the garbage collection capability demands some attention to tuning the JVM, as large heaps will cause apparently random stalls in performance.@1@22@@oe@30-11-2008
10440890@unknown@formal@none@1@S@Java does not support [[pointer (computing)|pointer arithmetic]] as is supported in, for example, C++.@1@14@@oe@30-11-2008
10440900@unknown@formal@none@1@S@This is because the garbage collector may relocate referenced objects, invalidating such pointers.@1@13@@oe@30-11-2008
10440910@unknown@formal@none@1@S@Another reason that Java forbids this is that type safety and security can no longer be guaranteed if arbitrary manipulation of pointers is allowed.@1@24@@oe@30-11-2008
10440920@unknown@formal@none@1@S@== Syntax ==@1@3@@oe@30-11-2008
10440930@unknown@formal@none@1@S@The syntax of Java is largely derived from [[C++]].@1@9@@oe@30-11-2008
10440940@unknown@formal@none@1@S@Unlike C++, which combines the syntax for structured, generic, and object-oriented programming, Java was built exclusively as an object oriented language.@1@21@@oe@30-11-2008
10440950@unknown@formal@none@1@S@As a result, almost everything is an object and all code is written inside a class.@1@16@@oe@30-11-2008
10440960@unknown@formal@none@1@S@The exceptions are the intrinsic data types (ordinal and real numbers, boolean values, and characters), which are not classes for performance reasons.@1@22@@oe@30-11-2008
10440970@unknown@formal@none@1@S@=== Hello, world program ===@1@5@@oe@30-11-2008
10440980@unknown@formal@none@1@S@This is a minimal [[Hello world program]] in Java with [[syntax highlighting]]:@1@12@@oe@30-11-2008
10440990@unknown@formal@none@1@S@<source lang="java"> // Hello.java public class Hello { public static void main(String[] args) { System.out.println("Hello, world!"); } } </source>@1@19@@oe@30-11-2008
10441000@unknown@formal@none@1@S@To execute a Java program, the code is saved as a file named <code>Hello.java</code>.@1@14@@oe@30-11-2008
10441010@unknown@formal@none@1@S@It must first be compiled into bytecode using a [[Java compiler]], which produces a file named <code>Hello.class</code>.@1@17@@oe@30-11-2008
10441020@unknown@formal@none@1@S@This class is then ''launched''.@1@5@@oe@30-11-2008
10441030@unknown@formal@none@1@S@The above example merits a bit of explanation.@1@8@@oe@30-11-2008
10441040@unknown@formal@none@1@S@* All executable statements in Java are written inside a class, including stand-alone programs.@1@14@@oe@30-11-2008
10441050@unknown@formal@none@1@S@* Source files are by convention named the same as the class they contain, appending the mandatory suffix ''.java''.@1@19@@oe@30-11-2008
10441060@unknown@formal@none@1@S@A <code>'''class'''</code> that is declared <code>'''public'''</code> is required to follow this convention.@1@12@@oe@30-11-2008
10441070@unknown@formal@none@1@S@(In this case, the class <code>'''Hello'''</code> is public, therefore the source must be stored in a file called ''Hello.java'').@1@19@@oe@30-11-2008
10441080@unknown@formal@none@1@S@* The compiler will generate a class file for each class defined in the source file.@1@16@@oe@30-11-2008
10441090@unknown@formal@none@1@S@The name of the class file is the name of the class, with ''.class'' appended.@1@15@@oe@30-11-2008
10441100@unknown@formal@none@1@S@For class file generation, anonymous classes are treated as if their name was the concatenation of the name of their enclosing class, a ''$'', and an integer.@1@27@@oe@30-11-2008
10441110@unknown@formal@none@1@S@* The [[Java keywords|keyword]] <code>'''public'''</code> denotes that a method can be called from code in other classes, or that a class may be used by classes outside the class hierarchy.@1@30@@oe@30-11-2008
10441120@unknown@formal@none@1@S@* The keyword <code>'''static'''</code> indicates that the method is a [[class method|static method]], associated with the class rather than object instances.@1@21@@oe@30-11-2008
10441130@unknown@formal@none@1@S@* The keyword <code>'''void'''</code> indicates that the main method does not return any value to the caller.@1@17@@oe@30-11-2008
10441140@unknown@formal@none@1@S@* The method name "<code>main</code>" is not a keyword in the Java language.@1@13@@oe@30-11-2008
10441150@unknown@formal@none@1@S@It is simply the name of the method the Java launcher calls to pass control to the program.@1@18@@oe@30-11-2008
10441160@unknown@formal@none@1@S@Java classes that run in managed environments such as applets and [[Enterprise Java Beans]] do not use or need a <code>main()</code> method.@1@22@@oe@30-11-2008
10441170@unknown@formal@none@1@S@* The main method must accept an [[array]] of '''{{Javadoc:SE|java/lang|String}}''' objects.@1@11@@oe@30-11-2008
10441180@unknown@formal@none@1@S@By convention, it is referenced as <code>'''args'''</code> although any other legal identifier name can be used.@1@16@@oe@30-11-2008
10441190@unknown@formal@none@1@S@Since Java 5, the main method can also use [[varargs|variable arguments]], in the form of <code>public static void main(String... args)</code>, allowing the main method to be invoked with an arbitrary number of <code>String</code> arguments.@1@34@@oe@30-11-2008
10441200@unknown@formal@none@1@S@The effect of this alternate declaration is semantically identical (the <code>args</code> parameter is still an array of <code>String</code> objects), but allows an alternate syntax for creating and passing the array.@1@30@@oe@30-11-2008
10441210@unknown@formal@none@1@S@* The Java launcher launches Java by loading a given class (specified on the command line) and starting its <code>public static void main(String[])</code> method.@1@24@@oe@30-11-2008
10441220@unknown@formal@none@1@S@Stand-alone programs must declare this method explicitly.@1@7@@oe@30-11-2008
10441230@unknown@formal@none@1@S@The <code>String[] args</code> parameter is an [[array]] of {{Javadoc:SE|java/lang|String}} objects containing any arguments passed to the class.@1@17@@oe@30-11-2008
10441240@unknown@formal@none@1@S@The parameters to <code>main</code> are often passed by means of a [[command line]].@1@13@@oe@30-11-2008
10441250@unknown@formal@none@1@S@* The printing facility is part of the Java standard library: The '''{{Javadoc:SE|java/lang|System}}''' class defines a public static field called '''{{Javadoc:SE|name=out|java/lang|System|out}}'''.@1@21@@oe@30-11-2008
10441260@unknown@formal@none@1@S@The <code>out</code> object is an instance of the {{Javadoc:SE|java/io|PrintStream}} class and provides the method '''{{Javadoc:SE|name=println(String)|java/io|PrintStream|println(java.lang.String)}}''' for displaying data to the screen while creating a new line ([[standard streams|standard out]]).@1@29@@oe@30-11-2008
10441270@unknown@formal@none@1@S@=== A more comprehensive example ===@1@6@@oe@30-11-2008
10441280@unknown@formal@none@1@S@<source lang="java"> // OddEven.java import javax.swing.JOptionPane;public class OddEven { public static void main(String[] args) { // This is the main method.It gets called when this class is run through a Java interpreter.OddEven number = new OddEven(); /* This line of code creates a new instance of this class called "number" and * initializes it, and the next line of code calls the "showDialog()" method, * which brings up a prompt to ask you for a number */ number.showDialog(); } private int input; // A whole number("int" means integer) // "input" is the number that the user gives to the computer public OddEven() { /* This is the constructor method.It gets called when an object of the OddEven type * is created. */ } public void showDialog() { try /* This makes sure nothing goes wrong.If something does, * the interpreter skips to "catch" to see what it should do. */ { input = Integer.parseInt(JOptionPane.showInputDialog("Please Enter A Number")); calculate(); /* * The code above brings up a JOptionPane, which is a dialog box * The String returned by the "showInputDialog()" method is converted into * an integer, making the program treat it as a number instead of a word. * After that, this method calls a second method, calculate() that will * display either "Even" or "Odd." */ } catch (NumberFormatException e) /* This means that there was a problem with the format of the number * (Like if someone were to type in 'Hello world' instead of a number). */ { System.err.println("ERROR: Invalid input.Please type in a numerical value."); } } private void calculate() { if (input % 2 == 0) System.out.println("Even"); /* When this gets called, it sends a message to the interpreter. * The interpreter usually shows it on the command prompt (For Windows users) * or the terminal (For Linux users).(Assuming it's open) */ else System.out.println("Odd"); } } </source>@1@312@@oe@30-11-2008
10441290@unknown@formal@none@1@S@* The '''[[Java keywords#import|import]]''' statement imports the '''{{Javadoc:SE|javax/swing|JOptionPane}}''' class from the '''{{Javadoc:SE|package=javax.swing|javax/swing}}''' package.@1@13@@oe@30-11-2008
10441300@unknown@formal@none@1@S@* The <code>'''OddEven'''</code> class declares a single <code>'''[[Java keywords#private|private]]'''</code> [[field (computer science)|field]] of type <code>'''int'''</code> named <code>'''input'''</code>.@1@17@@oe@30-11-2008
10441310@unknown@formal@none@1@S@Every instance of the <code>OddEven</code> class has its own copy of the <code>input</code> field.@1@14@@oe@30-11-2008
10441320@unknown@formal@none@1@S@The private declaration means that no other class can access (read or write) the <code>input</code> field.@1@16@@oe@30-11-2008
10441330@unknown@formal@none@1@S@* <code>'''OddEven()'''</code> is a <code>'''public'''</code> [[constructor (computer science)|constructor]].@1@8@@oe@30-11-2008
10441340@unknown@formal@none@1@S@Constructors have the same name as the enclosing class they are declared in, and unlike a method, have no [[return type]].@1@21@@oe@30-11-2008
10441350@unknown@formal@none@1@S@A constructor is used to initialize an [[object (computer science)|object]] that is a newly created instance of the class.@1@19@@oe@30-11-2008
10441360@unknown@formal@none@1@S@The dialog returns a <code>String</code> that is converted to an <code>int</code> by the '''{{Javadoc:SE|java/lang|Integer|parseInt(String)}}''' method.@1@15@@oe@30-11-2008
10441370@unknown@formal@none@1@S@* The <code>'''calculate()'''</code> method is declared without the <code>static</code> keyword.@1@10@@oe@30-11-2008
10441380@unknown@formal@none@1@S@This means that the method is invoked using a specific instance of the <code>OddEven</code> class.@1@15@@oe@30-11-2008
10441390@unknown@formal@none@1@S@(The [[reference (computer science)|reference]] used to invoke the method is passed as an undeclared parameter of type <code>OddEven</code> named <code>'''[[Java keywords#this|this]]'''</code>.)@1@21@@oe@30-11-2008
10441400@unknown@formal@none@1@S@The method tests the expression <code>input % 2 == 0</code> using the <code>'''[[Java keywords#if|if]]'''</code> keyword to see if the remainder of dividing the <code>input</code> field belonging to the instance of the class by two is zero.@1@36@@oe@30-11-2008
10441410@unknown@formal@none@1@S@If this expression is true, then it prints '''Even'''; if this expression is false it prints '''Odd'''.@1@17@@oe@30-11-2008
10441420@unknown@formal@none@1@S@(The <code>input</code> field can be equivalently accessed as <code>this.input</code>, which explicitly uses the undeclared <code>this</code> parameter.)@1@16@@oe@30-11-2008
10441430@unknown@formal@none@1@S@* <code>'''OddEven number = new OddEven();'''</code> declares a local object [[reference (computer science)|reference]] variable in the <code>main</code> method named <code>number</code>.@1@20@@oe@30-11-2008
10441440@unknown@formal@none@1@S@This variable can hold a reference to an object of type <code>OddEven</code>.@1@12@@oe@30-11-2008
10441450@unknown@formal@none@1@S@The declaration initializes <code>number</code> by first creating an instance of the <code>OddEven</code> class, using the <code>'''[[Java keywords#new|new]]'''</code> keyword and the <code>OddEven()</code> constructor, and then assigning this instance to the variable.@1@30@@oe@30-11-2008
10441460@unknown@formal@none@1@S@* The statement <code>'''number.showDialog();'''</code> calls the calculate method.@1@8@@oe@30-11-2008
10441470@unknown@formal@none@1@S@The instance of <code>OddEven</code> object referenced by the <code>number</code> [[local variable]] is used to invoke the method and passed as the undeclared <code>this</code> parameter to the <code>calculate</code> method.@1@28@@oe@30-11-2008
10441480@unknown@formal@none@1@S@* For simplicity, [[error handling]] has been ignored in this example.@1@11@@oe@30-11-2008
10441490@unknown@formal@none@1@S@Entering a value that is not a number will cause the program to crash.@1@14@@oe@30-11-2008
10441500@unknown@formal@none@1@S@This can be avoided by catching and handling the {{Javadoc:SE|java/lang|NumberFormatException}} thrown by <code>Integer.parseInt(String)</code>.@1@13@@oe@30-11-2008
10441510@unknown@formal@none@1@S@=== Applet ===@1@3@@oe@30-11-2008
10441520@unknown@formal@none@1@S@Java applets are programs that are embedded in other applications, typically in a Web page displayed in a [[Web browser]].@1@20@@oe@30-11-2008
10441530@unknown@formal@none@1@S@<source lang="java"> // Hello.java import java.applet.Applet; import java.awt.Graphics;public class Hello extends Applet { public void paint(Graphics gc) { gc.drawString("Hello, world!", 65, 95); } } </source>@1@25@@oe@30-11-2008
10441540@unknown@formal@none@1@S@The <code>'''import'''</code> statements direct the [[Java compiler]] to include the '''{{Javadoc:SE|package=java.applet|java/applet|Applet}}''' and '''{{Javadoc:SE|package=java.awt|java/awt|Graphics}}''' classes in the compilation.@1@17@@oe@30-11-2008
10441550@unknown@formal@none@1@S@The import statement allows these classes to be referenced in the [[source code]] using the ''simple class name'' (i.e. <code>Applet</code>) instead of the ''fully qualified class name'' (i.e. <code>java.applet.Applet</code>).@1@29@@oe@30-11-2008
10441560@unknown@formal@none@1@S@The <code>Hello</code> class <code>'''extends'''</code> ([[subclass (computer science)|subclasses]]) the <code>'''Applet'''</code> class; the <code>Applet</code> class provides the framework for the host application to display and control the [[Object lifetime|lifecycle]] of the applet.@1@30@@oe@30-11-2008
10441570@unknown@formal@none@1@S@The <code>Applet</code> class is an [[Abstract Windowing Toolkit]] (AWT) {{Javadoc:SE|java/awt|Component}}, which provides the applet with the capability to display a [[graphical user interface]] (GUI) and respond to user [[event-driven programming|events]].@1@30@@oe@30-11-2008
10441580@unknown@formal@none@1@S@The <code>Hello</code> class [[method overriding (programming)|overrides]] the '''{{Javadoc:SE|name=paint(Graphics)|java/awt|Container|paint(java.awt.Graphics)}}''' method inherited from the {{Javadoc:SE|java/awt|Container}} [[superclass (computer science)|superclass]] to provide the code to display the applet.@1@24@@oe@30-11-2008
10441590@unknown@formal@none@1@S@The <code>paint()</code> method is passed a <code>'''Graphics'''</code> object that contains the graphic context used to display the applet.@1@18@@oe@30-11-2008
10441600@unknown@formal@none@1@S@The <code>paint()</code> method calls the graphic context '''{{Javadoc:SE|name=drawString(String, int, int)|java/awt|Graphics|drawString(java.lang.String,%20int,%20int)}}''' method to display the '''"Hello, world!"''' string at a [[pixel]] offset of (<code>'''65, 95'''</code>) from the upper-left corner in the applet's display.@1@32@@oe@30-11-2008
10441610@unknown@formal@none@1@S@<source lang="html4strict"><html> <head> <title>Hello World Applet</title> </head> <body> <applet code="Hello" width="200" height="200"> </applet> </body> </html> </source>@1@16@@oe@30-11-2008
10441620@unknown@formal@none@1@S@An applet is placed in an [[HTML]] document using the '''<code><applet></code>''' [[HTML element]].@1@13@@oe@30-11-2008
10441630@unknown@formal@none@1@S@The <code>applet</code> tag has three attributes set: '''<code>code="Hello"</code>''' specifies the name of the <code>Applet</code> class and '''<code>width="200" height="200"</code>''' sets the pixel width and height of the applet.@1@27@@oe@30-11-2008
10441640@unknown@formal@none@1@S@Applets may also be embedded in HTML using either the <code>object</code> or <code>embed</code> element, although support for these elements by Web browsers is inconsistent.@1@24@@oe@30-11-2008
10441650@unknown@formal@none@1@S@However, the <code>applet</code> tag is deprecated, so the <code>object</code> tag is preferred where supported.@1@14@@oe@30-11-2008
10441660@unknown@formal@none@1@S@The host application, typically a Web browser, instantiates the '''<code>Hello</code>''' applet and creates an {{Javadoc:SE|java/applet|AppletContext}} for the applet.@1@18@@oe@30-11-2008
10441670@unknown@formal@none@1@S@Once the applet has initialized itself, it is added to the AWT display hierarchy.@1@14@@oe@30-11-2008
10441680@unknown@formal@none@1@S@The <code>paint</code> method is called by the AWT [[event dispatching thread]] whenever the display needs the applet to draw itself.@1@20@@oe@30-11-2008
10441690@unknown@formal@none@1@S@=== '''Servlet''' ===@1@3@@oe@30-11-2008
10441700@unknown@formal@none@1@S@Java Servlet technology provides Web developers with a simple, consistent mechanism for extending the functionality of a Web server and for accessing existing business systems.@1@25@@oe@30-11-2008
10441710@unknown@formal@none@1@S@Servlets are [[server-side]] Java EE components that generate responses (typically [[HTML]] pages) to requests (typically [[HTTP]] requests) from [[client (computing)|client]]s.@1@20@@oe@30-11-2008
10441720@unknown@formal@none@1@S@A servlet can almost be thought of as an applet that runs on the server side—without a face.@1@18@@oe@30-11-2008
10441730@unknown@formal@none@1@S@<source lang="java"> // Hello.java import java.io.*; import javax.servlet.*;public class Hello extends GenericServlet { public void service(ServletRequest request, ServletResponse response) throws ServletException, IOException { response.setContentType("text/html"); final PrintWriter pw = response.getWriter(); pw.println("Hello, world!"); pw.close(); } } </source>@1@35@@oe@30-11-2008
10441740@unknown@formal@none@1@S@The '''<code>import</code>''' statements direct the Java compiler to include all of the public classes and [[interface (Java)|interfaces]] from the '''{{Javadoc:SE|package=java.io|java/io}}''' and '''{{Javadoc:EE|package=javax.servlet|javax/servlet}}''' [[Java package|packages]] in the compilation.@1@27@@oe@30-11-2008
10441750@unknown@formal@none@1@S@The <code>'''Hello'''</code> class <code>'''extends'''</code> the '''{{Javadoc:EE|javax/servlet|GenericServlet}}''' class; the <code>GenericServlet</code> class provides the interface for the [[server (computing)|server]] to forward requests to the servlet and control the servlet's lifecycle.@1@28@@oe@30-11-2008
10441760@unknown@formal@none@1@S@The <code>Hello</code> class overrides the '''{{Javadoc:EE|name=service(ServletRequest, ServletResponse)|javax/servlet|Servlet|service(javax.servlet.ServletRequest,javax.servlet.ServletResponse)}}''' method defined by the {{Javadoc:EE|javax/servlet|Servlet}} [[Interface (Java)|interface]] to provide the code for the service request handler.@1@23@@oe@30-11-2008
10441770@unknown@formal@none@1@S@The <code>service()</code> method is passed a '''{{Javadoc:EE|javax/servlet|ServletRequest}}''' object that contains the request from the client and a '''{{Javadoc:EE|javax/servlet|ServletResponse}}''' object used to create the response returned to the client.@1@28@@oe@30-11-2008
10441780@unknown@formal@none@1@S@The <code>service()</code> method declares that it <code>'''throws'''</code> the [[exception handling|exceptions]] {{Javadoc:EE|javax/servlet|ServletException}} and {{Javadoc:SE|java/io|IOException}} if a problem prevents it from responding to the request.@1@23@@oe@30-11-2008
10441790@unknown@formal@none@1@S@The '''{{Javadoc:EE|name=setContentType(String)|javax/servlet|ServletResponse|setContentType(java.lang.String)}}''' method in the response object is called to set the [[MIME]] content type of the returned data to '''"text/html"'''.@1@21@@oe@30-11-2008
10441800@unknown@formal@none@1@S@The '''{{Javadoc:EE|name=getWriter()|javax/servlet|ServletResponse|getWriter()}}''' method in the response returns a '''{{Javadoc:SE|java/io|PrintWriter}}''' object that is used to write the data that is sent to the client.@1@23@@oe@30-11-2008
10441810@unknown@formal@none@1@S@The '''{{Javadoc:SE|name=println(String)|java/io|PrintWriter|println(java.lang.String)}}''' method is called to write the '''"Hello, world!"''' string to the response and then the '''{{Javadoc:SE|name=close()|java/io|PrintWriter|close()}}''' method is called to close the print writer, which causes the data that has been written to the stream to be returned to the client.@1@43@@oe@30-11-2008
10441820@unknown@formal@none@1@S@=== JavaServer Page ===@1@4@@oe@30-11-2008
10441830@unknown@formal@none@1@S@JavaServer Pages (JSPs) are [[server-side]] Java EE components that generate responses, typically [[HTML]] pages, to [[HTTP]] requests from [[client (computing)|client]]s.@1@20@@oe@30-11-2008
10441840@unknown@formal@none@1@S@JSPs embed Java code in an HTML page by using the special [[delimiter]]s <code lang-java"><%</code> and <code lang-java">%></code>.@1@18@@oe@30-11-2008
10441850@unknown@formal@none@1@S@A JSP is compiled to a Java ''servlet'', a Java application in its own right, the first time it is accessed.@1@21@@oe@30-11-2008
10441860@unknown@formal@none@1@S@After that, the generated servlet creates the response.@1@8@@oe@30-11-2008
10441870@unknown@formal@none@1@S@=== Swing application ===@1@4@@oe@30-11-2008
10441880@unknown@formal@none@1@S@Swing is a graphical user interface [[library (computer science)|library]] for the Java SE platform.@1@14@@oe@30-11-2008
10441890@unknown@formal@none@1@S@This example Swing application creates a single window with "Hello, world!" inside:@1@12@@oe@30-11-2008
10441900@unknown@formal@none@1@S@<source lang="java"> // Hello.java (Java SE 5) import java.awt.BorderLayout; import javax.swing.*;public class Hello extends JFrame { public Hello() { super("hello"); setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE); setLayout(new BorderLayout()); add(new JLabel("Hello, world!")); pack(); }public static void main(String[] args) { new Hello().setVisible(true); } } </source>@1@38@@oe@30-11-2008
10441910@unknown@formal@none@1@S@The first '''<code>import</code>''' statement directs the Java compiler to include the {{Javadoc:SE|java/awt|BorderLayout}} class from the {{Javadoc:SE|package=java.awt|java/awt}} package in the compilation; the second '''<code>import</code>''' includes all of the public classes and interfaces from the '''{{Javadoc:SE|package=javax.swing|javax/swing}}''' package.@1@35@@oe@30-11-2008
10441920@unknown@formal@none@1@S@The <code>'''Hello'''</code> class <code>'''extends'''</code> the '''{{Javadoc:SE|javax/swing|JFrame}}''' class; the <code>JFrame</code> class implements a [[window (computing)|window]] with a [[title bar]] and a close [[Widget (computing)|control]].@1@23@@oe@30-11-2008
10441930@unknown@formal@none@1@S@The <code>'''Hello()'''</code> [[constructor (computer science)|constructor]] initializes the frame by first calling the superclass constructor, passing the parameter <code>"hello"</code>, which is used as the window's title.@1@25@@oe@30-11-2008
10441940@unknown@formal@none@1@S@It then calls the '''{{Javadoc:SE|name=setDefaultCloseOperation(int)|javax/swing|JFrame|setDefaultCloseOperation(int)}}''' method inherited from <code>JFrame</code> to set the default operation when the close control on the title bar is selected to '''{{Javadoc:SE|javax/swing|WindowConstants|EXIT_ON_CLOSE}}''' — this causes the <code>JFrame</code> to be disposed of when the frame is closed (as opposed to merely hidden), which allows the JVM to exit and the program to terminate.@1@56@@oe@30-11-2008
10441950@unknown@formal@none@1@S@Next, the [[Layout manager|layout]] of the frame is set to a <code>BorderLayout</code>; this tells Swing how to arrange the components that will be added to the frame.@1@27@@oe@30-11-2008
10441960@unknown@formal@none@1@S@A '''{{Javadoc:SE|javax/swing|JLabel}}''' is created for the string '''"Hello, world!"''' and the '''{{Javadoc:SE|name=add(Component)|java/awt|Container|add(java.awt.Component)}}''' method inherited from the {{Javadoc:SE|java/awt|Container}} superclass is called to add the label to the frame.@1@27@@oe@30-11-2008
10441970@unknown@formal@none@1@S@The '''{{Javadoc:SE|name=pack()|java/awt|Window|pack()}}''' method inherited from the {{Javadoc:SE|java/awt|Window}} superclass is called to size the window and lay out its contents, in the manner indicated by the <code>BorderLayout</code>.@1@26@@oe@30-11-2008
10441980@unknown@formal@none@1@S@The <code>'''main()'''</code> method is called by the JVM when the program starts.@1@12@@oe@30-11-2008
10441990@unknown@formal@none@1@S@It [[Instance (programming)|instantiates]] a new '''<code>Hello</code>''' frame and causes it to be displayed by calling the '''{{Javadoc:SE|name=setVisible(boolean)|java/awt|Component|setVisible(boolean)}}''' method inherited from the {{Javadoc:SE|java/awt|Component}} superclass with the boolean parameter <code>'''true'''</code>.@1@28@@oe@30-11-2008
10442000@unknown@formal@none@1@S@Note that once the frame is displayed, exiting the <code>main</code> method does not cause the program to terminate because the AWT [[event dispatching thread]] remains active until all of the Swing top-level windows have been disposed.@1@36@@oe@30-11-2008
10442010@unknown@formal@none@1@S@== Criticism ==@1@3@@oe@30-11-2008
10442020@unknown@formal@none@1@S@[[Java performance|Java's performance]] has improved substantially since the early versions, and performance of [[JIT compiler]]s relative to native compilers has in some tests been shown to be quite similar.@1@29@@oe@30-11-2008
10442030@unknown@formal@none@1@S@The performance of the compilers does not necessarily indicate the performance of the compiled code; only careful testing can reveal the true performance issues in any system.@1@27@@oe@30-11-2008
10442040@unknown@formal@none@1@S@The default [[look and feel]] of [[Graphical User Interface|GUI]] applications written in Java using the [[Swing (Java)|Swing]] toolkit is very different from native applications.@1@24@@oe@30-11-2008
10442050@unknown@formal@none@1@S@It is possible to specify a different look and feel through the [[pluggable look and feel]] system of Swing.@1@19@@oe@30-11-2008
10442060@unknown@formal@none@1@S@Clones of [[Microsoft Windows|Windows]], [[GTK]] and [[Motif (widget toolkit)|Motif]] are supplied by Sun.@1@13@@oe@30-11-2008
10442070@unknown@formal@none@1@S@[[Apple Computer|Apple]] also provides an [[Aqua (theme)|Aqua]] look and feel for [[Mac OS X]].@1@14@@oe@30-11-2008
10442080@unknown@formal@none@1@S@Though prior implementations of these looks and feels have been considered lacking, Swing in Java SE 6 addresses this problem by using more native [[Widget (computing)|widget]] drawing routines of the underlying platforms.@1@32@@oe@30-11-2008
10442090@unknown@formal@none@1@S@Alternatively, third party toolkits such as [[wx4j]], [[Qt (toolkit)|Qt Jambi]] or [[Standard Widget Toolkit|SWT]] may be used for increased integration with the native windowing system.@1@25@@oe@30-11-2008
10442100@unknown@formal@none@1@S@As in C++ and some other object-oriented languages, variables of Java's [[primitive type]]s were not originally objects.@1@17@@oe@30-11-2008
10442110@unknown@formal@none@1@S@Values of primitive types are either stored directly in fields (for objects) or on the [[Stack-based memory allocation|stack]] (for methods) rather than on the heap, as is the common case for objects (but see [[Escape analysis]]).@1@36@@oe@30-11-2008
10442120@unknown@formal@none@1@S@This was a conscious decision by Java's designers for performance reasons.@1@11@@oe@30-11-2008
10442130@unknown@formal@none@1@S@Because of this, Java was not considered to be a pure object-oriented programming language.@1@14@@oe@30-11-2008
10442140@unknown@formal@none@1@S@However, as of Java 5.0, [[Object type|autoboxing]] enables programmers to write as if primitive types are their wrapper classes, with their object-oriented counterparts representing classes of their own, and freely interchange between them for improved flexibility.@1@36@@oe@30-11-2008
10442150@unknown@formal@none@1@S@Java suppresses several features (such as [[operator overloading]] and [[multiple inheritance]]) for ''classes'' in order to simplify the language, to "save the programmers from themselves", and to prevent possible errors and anti-pattern design.@1@33@@oe@30-11-2008
10442160@unknown@formal@none@1@S@This has been a source of criticism, relating to a lack of low-level features, but some of these limitations may be worked around.@1@23@@oe@30-11-2008
10442170@unknown@formal@none@1@S@Java ''interfaces'' have always had multiple inheritance.@1@7@@oe@30-11-2008
10442180@unknown@formal@none@1@S@== Resources ==@1@3@@oe@30-11-2008
10442190@unknown@formal@none@1@S@=== Java Runtime Environment ===@1@5@@oe@30-11-2008
10442200@unknown@formal@none@1@S@The Java Runtime Environment, or ''JRE'', is the software required to run any [[Application software|application]] deployed on the Java Platform.@1@20@@oe@30-11-2008
10442210@unknown@formal@none@1@S@[[End-user]]s commonly use a JRE in [[Software package (programming)|software package]]s and Web browser [[plugin]]s.@1@14@@oe@30-11-2008
10442220@unknown@formal@none@1@S@Sun also distributes a superset of the JRE called the Java 2 [[SDK]] (more commonly known as the JDK), which includes development tools such as the [[Java compiler]], [[Javadoc]], [[JAR (file format)|Jar]] and [[debugger]].@1@34@@oe@30-11-2008
10442230@unknown@formal@none@1@S@One of the unique advantages of the concept of a runtime engine is that errors (exceptions) should not 'crash' the system.@1@21@@oe@30-11-2008
10442240@unknown@formal@none@1@S@Moreover, in runtime engine environments such as Java there exist tools that attach to the runtime engine and every time that an exception of interest occurs they record debugging information that existed in memory at the time the exception was thrown (stack and heap values).@1@45@@oe@30-11-2008
10442250@unknown@formal@none@1@S@These [[Automated Exception Handling]] tools provide 'root-cause' information for exceptions in Java programs that run in production, testing or development environments.@1@21@@oe@30-11-2008
10442260@unknown@formal@none@1@S@==== Components ====@1@3@@oe@30-11-2008
10442270@unknown@formal@none@1@S@* Java [[Library (computer science)|libraries]] are the compiled [[byte code]]s of [[source code]] developed by the JRE implementor to support application development in Java.@1@24@@oe@30-11-2008
10442280@unknown@formal@none@1@S@Examples of these libraries are:@1@5@@oe@30-11-2008
10442290@unknown@formal@none@1@S@** The core libraries, which include:@1@6@@oe@30-11-2008
10442300@unknown@formal@none@1@S@*** Collection libraries that implement [[data structure]]s such as [[List (computing)|lists]], [[associative array|dictionaries]], [[tree structure|trees]] and [[Set (computer science)|sets]]@1@19@@oe@30-11-2008
10442310@unknown@formal@none@1@S@*** [[XML]] Processing (Parsing, Transforming, Validating) libraries@1@7@@oe@30-11-2008
10442320@unknown@formal@none@1@S@*** Security@1@2@@oe@30-11-2008
10442330@unknown@formal@none@1@S@*** [[i18n|Internationalization and localization]] libraries@1@5@@oe@30-11-2008
10442340@unknown@formal@none@1@S@** The integration libraries, which allow the application writer to communicate with external systems.@1@14@@oe@30-11-2008
10442350@unknown@formal@none@1@S@These libraries include:@1@3@@oe@30-11-2008
10442360@unknown@formal@none@1@S@*** The [[Java Database Connectivity]] (JDBC) [[Application Programming Interface|API]] for database access@1@12@@oe@30-11-2008
10442370@unknown@formal@none@1@S@*** [[Java Naming and Directory Interface]] (JNDI) for lookup and discovery@1@11@@oe@30-11-2008
10442380@unknown@formal@none@1@S@*** [[Java remote method invocation|RMI]] and [[CORBA]] for distributed application development@1@11@@oe@30-11-2008
10442390@unknown@formal@none@1@S@** [[User Interface]] libraries, which include:@1@6@@oe@30-11-2008
10442400@unknown@formal@none@1@S@*** The (heavyweight, or [[native mode|native]]) [[Abstract Windowing Toolkit]] (AWT), which provides [[graphical user interface|GUI]] components, the means for laying out those components and the means for handling events from those components@1@32@@oe@30-11-2008
10442410@unknown@formal@none@1@S@*** The (lightweight) [[Swing (Java)|Swing]] libraries, which are built on AWT but provide (non-native) implementations of the AWT widgetry@1@19@@oe@30-11-2008
10442420@unknown@formal@none@1@S@*** APIs for audio capture, processing, and playback@1@8@@oe@30-11-2008
10442430@unknown@formal@none@1@S@* A platform dependent implementation of [[Java virtual machine]] (JVM) that is the means by which the byte codes of the Java libraries and third party applications are executed@1@29@@oe@30-11-2008
10442440@unknown@formal@none@1@S@* Plugins, which enable [[Java applet|applet]]s to be run in [[Web browser]]s@1@12@@oe@30-11-2008
10442450@unknown@formal@none@1@S@* [[Java Web Start]], which allows Java applications to be efficiently distributed to [[end user]]s across the [[Internet]]@1@18@@oe@30-11-2008
10442460@unknown@formal@none@1@S@* Licensing and documentation@1@4@@oe@30-11-2008
10442470@unknown@formal@none@1@S@=== APIs ===@1@3@@oe@30-11-2008
10442480@unknown@formal@none@1@S@Sun has defined three platforms targeting different application environments and segmented many of its [[application programming interface|API]]s so that they belong to one of the platforms.@1@26@@oe@30-11-2008
10442490@unknown@formal@none@1@S@The platforms are:@1@3@@oe@30-11-2008
10442500@unknown@formal@none@1@S@* [[Java Platform, Micro Edition]] (Java ME) — targeting environments with limited resources,@1@13@@oe@30-11-2008
10442510@unknown@formal@none@1@S@* [[Java Platform, Standard Edition]] (Java SE) — targeting workstation environments, and@1@12@@oe@30-11-2008
10442520@unknown@formal@none@1@S@* [[Java Platform, Enterprise Edition]] (Java EE) — targeting large distributed enterprise or Internet environments.@1@15@@oe@30-11-2008
10442530@unknown@formal@none@1@S@The [[Class (computer science)|classes]] in the Java APIs are organized into separate groups called [[Java package|packages]].@1@16@@oe@30-11-2008
10442540@unknown@formal@none@1@S@Each package contains a set of related [[Interface (Java)|interface]]s, classes and [[exception handling|exceptions]].@1@13@@oe@30-11-2008
10442550@unknown@formal@none@1@S@Refer to the separate platforms for a description of the packages available.@1@12@@oe@30-11-2008
10442560@unknown@formal@none@1@S@The set of APIs is controlled by Sun Microsystems in cooperation with others through the [[Java Community Process]] program.@1@19@@oe@30-11-2008
10442570@unknown@formal@none@1@S@Companies or individuals participating in this process can influence the design and development of the APIs.@1@16@@oe@30-11-2008
10442580@unknown@formal@none@1@S@This process has been a subject of controversy.@1@8@@oe@30-11-2008
10450010@unknown@formal@none@1@S@<article>Language</article>@1@1@@oe@30-11-2008
10450020@unknown@formal@none@1@S@A '''language''' is a dynamic set of visual, auditory, or tactile [[symbol]]s of [[communication]] and the elements used to manipulate them.@1@21@@oe@30-11-2008
10450030@unknown@formal@none@1@S@''Language'' can also refer to the use of such systems as a general [[phenomenon]].@1@14@@oe@30-11-2008
10450040@unknown@formal@none@1@S@Language is considered to be an exclusively human mode of communication; although other animals make use of quite sophisticated communicative systems, none of these are known to make use of all of the properties that linguists use to define language.@1@40@@oe@30-11-2008
10450050@unknown@formal@none@1@S@== Properties of language ==@1@5@@oe@30-11-2008
10450060@unknown@formal@none@1@S@A set of agreed-upon symbols is only one feature of language; all languages must define the structural relationships between these symbols in a system of [[grammar]].@1@26@@oe@30-11-2008
10450070@unknown@formal@none@1@S@Rules of grammar are what distinguish language from other forms of communication.@1@12@@oe@30-11-2008
10450080@unknown@formal@none@1@S@They allow a finite set of symbols to be manipulated to create a potentially infinite number of grammatical utterances.@1@19@@oe@30-11-2008
10450090@unknown@formal@none@1@S@Another property of language is that its symbols are [[arbitrary]].@1@10@@oe@30-11-2008
10450100@unknown@formal@none@1@S@Any concept or grammatical rule can be mapped onto a symbol.@1@11@@oe@30-11-2008
10450110@unknown@formal@none@1@S@Most languages make use of sound, but the combinations of sounds used do not have any ''inherent'' meaning – they are merely an agreed-upon convention to represent a certain thing by users of that language.@1@35@@oe@30-11-2008
10450120@unknown@formal@none@1@S@For instance, there is nothing about the [[Spanish language|Spanish]] [[word]] itself that forces Spanish speakers to convey the idea of "nothing".@1@21@@oe@30-11-2008
10450130@unknown@formal@none@1@S@Another set of sounds (for example, the English word ''nothing'') could equally be used to represent the same concept, but all Spanish speakers have acquired or learned to correlate this meaning for this particular sound pattern.@1@36@@oe@30-11-2008
10450140@unknown@formal@none@1@S@For [[Slovene language|Slovenian]], [[Croatian language|Croatian]], [[Serbian language|Serbian/Kosovan]] or [[Bosnian language|Bosnian]] speakers on the other hand, means something else; it means "hope".@1@21@@oe@30-11-2008
10450150@unknown@formal@none@1@S@==The study of language==@1@4@@oe@30-11-2008
10450160@unknown@formal@none@1@S@===Linguistics===@1@1@@oe@30-11-2008
10450170@unknown@formal@none@1@S@[[Linguistics]] is the [[science|scientific]] and [[philosophy|philosophical]] study of language, encompassing a number of sub-fields.@1@14@@oe@30-11-2008
10450180@unknown@formal@none@1@S@At the core of [[theoretical linguistics]] are the study of language structure ([[grammar]]) and the study of meaning ([[semantics]]).@1@19@@oe@30-11-2008
10450190@unknown@formal@none@1@S@The first of these encompasses [[morphology (linguistics)|morphology]] (the formation and composition of [[word]]s), [[syntax]] (the rules that determine how words combine into [[phrase]]s and [[Sentence (linguistics)|sentences]]) and [[phonology]] (the study of sound systems and abstract sound units).@1@37@@oe@30-11-2008
10450200@unknown@formal@none@1@S@[[Phonetics]] is a related branch of linguistics concerned with the actual properties of speech sounds ([[phone]]s), non-speech sounds, and how they are produced and [[speech perception|perceived]].@1@26@@oe@30-11-2008
10450210@unknown@formal@none@1@S@[[Theoretical linguistics]] is mostly concerned with developing models of linguistic knowledge.@1@11@@oe@30-11-2008
10450220@unknown@formal@none@1@S@The fields that are generally considered as the core of theoretical linguistics are [[syntax]], [[phonology]], [[Morphology (linguistics)|morphology]], and [[semantics]].@1@19@@oe@30-11-2008
10450230@unknown@formal@none@1@S@[[Applied linguistics]] attempts to put linguistic theories into practice through areas like [[translation]], [[Stylistics (linguistics)|stylistics]], [[literary criticism]] and [[Literary theory|theory]], [[discourse analysis]], [[speech therapy]], speech pathology and [[Second language acquisition|foreign language teaching]].@1@32@@oe@30-11-2008
10450240@unknown@formal@none@1@S@===History===@1@1@@oe@30-11-2008
10450250@unknown@formal@none@1@S@The historical record of [[linguistics]] begins in [[India]] with [[Pāṇini]], the [[5th century BCE]] grammarian who formulated 3,959 rules of [[Sanskrit language|Sanskrit]] [[morphology (linguistics)|morphology]], known as the ''{{IAST|[[Aṣṭādhyāyī]]}}'' (अष्टाध्यायी) and with [[Tolkāppiyar]], the [[3rd century BCE]] grammarian of the [[Tamil language|Tamil]] work [[Tolkāppiyam]]. grammar is highly systematized and technical.@1@49@@oe@30-11-2008
10450260@unknown@formal@none@1@S@Inherent in its analytic approach are the concepts of the [[phoneme]], the [[morpheme]], and the [[Root (linguistics)|root]]; Western linguists only recognized the phoneme some two millennia later.@1@27@@oe@30-11-2008
10450270@unknown@formal@none@1@S@Tolkāppiyar's work is perhaps the first to describe [[articulatory phonetics]] for a language.@1@13@@oe@30-11-2008
10450280@unknown@formal@none@1@S@Its classification of the alphabet into [[consonant]]s and [[vowel]]s, and elements like nouns, verbs, vowels, and consonants, which he put into classes, were also breakthroughs at the time.@1@28@@oe@30-11-2008
10450290@unknown@formal@none@1@S@In the [[Middle East]], the [[Persian Empire|Persian]] linguist [[Sibawayh]] (سیبویه) made a detailed and professional description of [[Arabic language|Arabic]] in 760 CE in his monumental work, ''Al-kitab fi al-nahw'' (الكتاب في النحو, ''The Book on Grammar''), bringing many [[Linguistics|linguistic]] aspects of language to light.@1@44@@oe@30-11-2008
10450300@unknown@formal@none@1@S@In his book, he distinguished [[phonetics]] from [[phonology]].@1@8@@oe@30-11-2008
10450310@unknown@formal@none@1@S@Later in the West, the success of [[science]], [[mathematics]], and other [[formal system]]s in the 20th century led many to attempt a formalization of the study of language as a "semantic code".@1@32@@oe@30-11-2008
10450320@unknown@formal@none@1@S@This resulted in the [[academic discipline]] of [[linguistics]], the founding of which is attributed to [[Ferdinand de Saussure]].@1@18@@oe@30-11-2008
10450330@unknown@formal@none@1@S@In the 20th century, substantial contributions to the understanding of language came from [[Ferdinand de Saussure]], [[Hjelmslev]], [[Émile Benveniste]] and [[Roman Jakobson]], which are characterized as being highly [[systematic]].@1@29@@oe@30-11-2008
10450340@unknown@formal@none@1@S@== Human languages ==@1@4@@oe@30-11-2008
10450350@unknown@formal@none@1@S@Human languages are usually referred to as natural languages, and the science of studying them falls under the purview of [[linguistics]].@1@21@@oe@30-11-2008
10450360@unknown@formal@none@1@S@A common progression for natural languages is that they are considered to be first spoken, then written, and then an understanding and explanation of their grammar is attempted.@1@28@@oe@30-11-2008
10450370@unknown@formal@none@1@S@Languages live, die, move from place to place, and change with time.@1@12@@oe@30-11-2008
10450380@unknown@formal@none@1@S@Any language that ceases to change or develop is categorized as a [[dead language]].@1@14@@oe@30-11-2008
10450390@unknown@formal@none@1@S@Conversely, any language that is a ''living language,'' that is, it is in a continuous state of change, is known as a [[modern language]].@1@24@@oe@30-11-2008
10450400@unknown@formal@none@1@S@Making a principled distinction between one language and another is usually impossible.@1@12@@oe@30-11-2008
10450410@unknown@formal@none@1@S@For instance, there are a few [[dialect]]s of [[German language|German]] similar to some dialects of [[Dutch language|Dutch]].@1@17@@oe@30-11-2008
10450420@unknown@formal@none@1@S@The transition between languages within the same [[language family]] is sometimes gradual (see [[dialect continuum]]).@1@15@@oe@30-11-2008
10450430@unknown@formal@none@1@S@Some like to make parallels with [[biology]], where it is not possible to make a well-defined distinction between one species and the next.@1@23@@oe@30-11-2008
10450440@unknown@formal@none@1@S@In either case, the ultimate difficulty may stem from the [[interaction]]s between languages and [[population]]s.@1@15@@oe@30-11-2008
10450450@unknown@formal@none@1@S@(See [[Dialect]] or [[August Schleicher]] for a longer discussion.)@1@9@@oe@30-11-2008
10450460@unknown@formal@none@1@S@The concepts of [[Ausbausprache - Abstandsprache - Dachsprache|Ausbausprache, Abstandsprache and Dachsprache]] are used to make finer distinctions about the degrees of difference between languages or dialects.@1@26@@oe@30-11-2008
10450470@unknown@formal@none@1@S@==Artificial languages==@1@2@@oe@30-11-2008
10450480@unknown@formal@none@1@S@=== Constructed languages ===@1@4@@oe@30-11-2008
10450490@unknown@formal@none@1@S@Some individuals and groups have constructed their own artificial languages, for practical, experimental, personal, or ideological reasons.@1@17@@oe@30-11-2008
10450500@unknown@formal@none@1@S@International auxiliary languages are generally constructed languages that strive to be easier to learn than natural languages; other constructed languages strive to be more logical ("loglangs") than natural languages; a prominent example of this is [[Lojban]].@1@36@@oe@30-11-2008
10450510@unknown@formal@none@1@S@Some writers, such as [[J. R. R. Tolkien]], have created fantasy languages, for literary, [[Artistic language|artistic]] or personal reasons.@1@19@@oe@30-11-2008
10450520@unknown@formal@none@1@S@The fantasy language of the [[Klingon]] race has in recent years been developed by fans of the Star Trek series, including a vocabulary and grammar.@1@25@@oe@30-11-2008
10450530@unknown@formal@none@1@S@Constructed languages are not necessarily restricted to the properties shared by natural languages.@1@13@@oe@30-11-2008
10450540@unknown@formal@none@1@S@This part of ISO 639 also includes identifiers that denote constructed (or artificial) languages.@1@14@@oe@30-11-2008
10450550@unknown@formal@none@1@S@In order to qualify for inclusion the language must have a literature and it must be designed for the purpose of human communication.@1@23@@oe@30-11-2008
10450560@unknown@formal@none@1@S@Specifically excluded are reconstructed languages and computer programming languages.@1@9@@oe@30-11-2008
10450570@unknown@formal@none@1@S@===International auxiliary languages===@1@3@@oe@30-11-2008
10450580@unknown@formal@none@1@S@Some languages, most constructed, are meant specifically for communication between people of different nationalities or language groups as an easy-to-learn second language.@1@22@@oe@30-11-2008
10450590@unknown@formal@none@1@S@Several of these languages have been constructed by individuals or groups.@1@11@@oe@30-11-2008
10450600@unknown@formal@none@1@S@Natural, pre-existing languages may also be used in this way - their developers merely catalogued and standardized their vocabulary and identified their grammatical rules.@1@24@@oe@30-11-2008
10450610@unknown@formal@none@1@S@These languages are called ''naturalistic.''@1@5@@oe@30-11-2008
10450620@unknown@formal@none@1@S@One such language, [[Latino Sine Flexione]], is a simplified form of Latin.@1@12@@oe@30-11-2008
10450630@unknown@formal@none@1@S@Two others, [[Occidental language|Occidental]] and [[Novial]], were drawn from several Western languages.@1@12@@oe@30-11-2008
10450640@unknown@formal@none@1@S@To date, the most successful auxiliary language is [[Esperanto]], invented by Polish ophthalmologist [[L. L. Zamenhof|Zamenhof]].@1@16@@oe@30-11-2008
10450650@unknown@formal@none@1@S@It has a relatively large community roughly estimated at about 2 million speakers worldwide, with a large body of literature, songs, and is the only known constructed language to have [[Native Esperanto speakers|native speakers]], such as the Hungarian-born American businessman [[George Soros]].@1@42@@oe@30-11-2008
10450660@unknown@formal@none@1@S@Other auxiliary languages with a relatively large number of speakers and literature are [[Interlingua]] and [[Ido]].@1@16@@oe@30-11-2008
10450670@unknown@formal@none@1@S@===Controlled languages===@1@2@@oe@30-11-2008
10450680@unknown@formal@none@1@S@Controlled natural languages are subsets of natural languages whose grammars and dictionaries have been restricted in order to reduce or eliminate both ambiguity and complexity.@1@25@@oe@30-11-2008
10450690@unknown@formal@none@1@S@The purpose behind the development and implementation of a controlled natural language typically is to aid non-native speakers of a natural language in understanding it, or to ease computer processing of a natural language.@1@34@@oe@30-11-2008
10450700@unknown@formal@none@1@S@An example of a widely used controlled natural language is [[Simplified English]], which was originally developed for [[aerospace]] industry maintenance manuals.@1@21@@oe@30-11-2008
10450710@unknown@formal@none@1@S@== Formal languages ==@1@4@@oe@30-11-2008
10450720@unknown@formal@none@1@S@[[Mathematics]] and [[computer science]] use artificial entities called formal languages (including [[programming language]]s and [[markup language]]s, and some that are more theoretical in nature).@1@24@@oe@30-11-2008
10450730@unknown@formal@none@1@S@These often take the form of [[character string]]s, produced by a combination of [[formal grammar]] and semantics of arbitrary complexity.@1@20@@oe@30-11-2008
10450740@unknown@formal@none@1@S@=== Programming languages ===@1@4@@oe@30-11-2008
10450750@unknown@formal@none@1@S@A programming language is an extreme case of a formal language that can be used to control the behavior of a machine, particularly a computer, to perform specific tasks.@1@29@@oe@30-11-2008
10450760@unknown@formal@none@1@S@Programming languages are defined using syntactic and semantic rules, to determine structure and meaning respectively.@1@15@@oe@30-11-2008
10450770@unknown@formal@none@1@S@Programming languages are used to facilitate communication about the task of organizing and manipulating information, and to express algorithms precisely.@1@20@@oe@30-11-2008
10450780@unknown@formal@none@1@S@Some authors restrict the term "programming language" to those languages that can express all possible algorithms; sometimes the term "computer language" is used for artificial languages that are more limited.@1@30@@oe@30-11-2008
10450790@unknown@formal@none@1@S@== Animal communication ==@1@4@@oe@30-11-2008
10450800@unknown@formal@none@1@S@The term "[[animal language]]s" is often used for non-human languages.@1@10@@oe@30-11-2008
10450810@unknown@formal@none@1@S@Linguists do not consider these to be "language", but describe them as [[animal communication]], because the interaction between animals in such communication is fundamentally different in its underlying principles from human language.@1@32@@oe@30-11-2008
10450820@unknown@formal@none@1@S@Nevertheless, some scholars have tried to disprove this mainstream premise through experiments on training chimpanzees to talk.@1@17@@oe@30-11-2008
10450830@unknown@formal@none@1@S@[[Karl von Frisch]] received the Nobel Prize in 1973 for his proof of the language and dialects of the bees.@1@20@@oe@30-11-2008
10450840@unknown@formal@none@1@S@In several publicized instances, non-human animals have been taught to understand certain features of human language.@1@16@@oe@30-11-2008
10450850@unknown@formal@none@1@S@[[Chimpanzee]]s, [[gorilla]]s, and [[orangutan]]s have been taught hand signs based on [[American Sign Language]].@1@14@@oe@30-11-2008
10450860@unknown@formal@none@1@S@The [[African Grey Parrot]], which possesses the ability to mimic human speech with a high degree of accuracy, is suspected of having sufficient intelligence to comprehend some of the speech it mimics.@1@32@@oe@30-11-2008
10450870@unknown@formal@none@1@S@Most species of [[parrot]], despite expert mimicry, are believed to have no linguistic comprehension at all.@1@16@@oe@30-11-2008
10450880@unknown@formal@none@1@S@While proponents of animal communication systems have debated levels of [[semantics]], these systems have not been found to have anything approaching human language [[syntax]].@1@24@@oe@30-11-2008
10460010@unknown@formal@none@1@S@<article>Language model</article>@1@2@@oe@30-11-2008
10460020@unknown@formal@none@1@S@A statistical '''language model''' assigns a [[probability]] to a sequence of ''m'' words <math>P(w_1,\\ldots,w_m)</math> by means of a [[probability distribution]].@1@20@@oe@30-11-2008
10460030@unknown@formal@none@1@S@Language modeling is used in many [[natural language processing]] applications such as [[speech recognition]], [[machine translation]], [[part-of-speech tagging]], [[parsing]] and [[information retrieval]].@1@22@@oe@30-11-2008
10460040@unknown@formal@none@1@S@In [[speech recognition]] and in [[data compression]], such a model tries to capture the properties of a language, and to predict the next word in a speech sequence.@1@28@@oe@30-11-2008
10460050@unknown@formal@none@1@S@When used in information retrieval, a language model is associated with a [[document]] in a collection.@1@16@@oe@30-11-2008
10460060@unknown@formal@none@1@S@With query ''Q'' as input, retrieved documents are ranked based on the probability that the document's language model would generate the terms of the query, ''P(Q|M<sub>d</sub>)''.@1@26@@oe@30-11-2008
10460070@unknown@formal@none@1@S@Estimating the probability of sequences can become difficult in [[corpora]], in which [[phrase]]s or [[Sentence (linguistics)|sentence]]s can be arbitrarily long and hence some sequences are not observed during [[training]] of the language model ([[data sparseness problem]] of [[overfitting]]).@1@38@@oe@30-11-2008
10460080@unknown@formal@none@1@S@For that reason these models are often approximated using smoothed [[N-gram]] models.@1@12@@oe@30-11-2008
10460090@unknown@formal@none@1@S@== N-gram models ==@1@4@@oe@30-11-2008
10460100@unknown@formal@none@1@S@In an n-gram model, the probability <math>P(w_1,\\ldots,w_m)</math> of observing the sentence w<sub>1</sub>,...,w<sub>m</sub> is approximated as@1@15@@oe@30-11-2008
10460110@unknown@formal@none@1@S@<math> P(w_1,\\ldots,w_m) = \\prod^m_{i=1} P(w_i|w_1,\\ldots,w_{i-1}) \\approx \\prod^m_{i=1} P(w_i|w_{i-(n-1)},\\ldots,w_{i-1}) </math>@1@9@@oe@30-11-2008
10460120@unknown@formal@none@1@S@Here, it is assumed that the probability of observing the ''i<sup>th</sup>'' word ''w<sub>i</sub>'' in the context history of the preceding ''i-1'' words can be approximated by the probability of observing it in the shortened context history of the preceding ''n-1'' words (''n<sup>th</sup> order [[Markov property]]).@1@45@@oe@30-11-2008
10460130@unknown@formal@none@1@S@The conditional probability can be calculated from n-gram frequency counts: <math> P(w_i|w_{i-(n-1)},\\ldots,w_{i-1}) = \\frac{count(w_{i-(n-1)},\\ldots,w_{i-1})}{count(w_{i-(n-1)},w_{i-1},\\ldots,w_i)} </math>@1@15@@oe@30-11-2008
10460140@unknown@formal@none@1@S@The words '''bigram''' and '''trigram''' language model denote n-gram language models with ''n=2'' and ''n=3'', respectively.@1@16@@oe@30-11-2008
10460150@unknown@formal@none@1@S@=== Example ===@1@3@@oe@30-11-2008
10460160@unknown@formal@none@1@S@In a bigram (n=2) language model, the probability of the sentence ''I saw the red house'' is approximated as <math> P(I,saw,the,red,house) \\approx P(I) P(saw|I) P(the|saw) P(red|the) P(house|red) </math>@1@28@@oe@30-11-2008
10460170@unknown@formal@none@1@S@whereas in a trigram (n=3) language model, the approximation is <math> P(I,saw,the,red,house) \\approx P(I) P(saw|I) P(the|I,saw) P(red|saw,the) P(house|the,red) </math>@1@19@@oe@30-11-2008
10470010@unknown@formal@none@1@S@<article>Latent semantic analysis</article>@1@3@@oe@30-11-2008
10470020@unknown@formal@none@1@S@'''Latent semantic analysis (LSA)''' is a technique in [[natural language processing]], in particular in [[vectorial semantics]], of analyzing relationships between a set of documents and the terms they contain by producing a set of concepts related to the documents and terms.@1@41@@oe@30-11-2008
10470030@unknown@formal@none@1@S@LSA was patented in [[1988]] ([http://patft.uspto.gov/netacgi/nph-Parser?patentnumber=4839853 US Patent 4,839,853]) by [[Scott Deerwester]], [[Susan Dumais]], [[George Furnas]], [[Richard Harshman]], [[Thomas Landauer]], [[Karen Lochbaum]] and [[Lynn Streeter]].@1@25@@oe@30-11-2008
10470040@unknown@formal@none@1@S@In the context of its application to [[information retrieval]], it is sometimes called '''latent semantic indexing (LSI)'''.@1@17@@oe@30-11-2008
10470050@unknown@formal@none@1@S@== Occurrence matrix ==@1@4@@oe@30-11-2008
10470060@unknown@formal@none@1@S@LSA can use a [[term-document matrix]] which describes the occurrences of terms in documents; it is a [[sparse matrix]] whose rows correspond to [[terminology|terms]] and whose columns correspond to documents, typically [[stemming|stemmed]] words that appear in the documents.@1@38@@oe@30-11-2008
10470070@unknown@formal@none@1@S@A typical example of the weighting of the elements of the matrix is [[tf-idf]] (term frequency–inverse document frequency): the element of the matrix is proportional to the number of times the terms appear in each document, where rare terms are upweighted to reflect their relative importance.@1@46@@oe@30-11-2008
10470080@unknown@formal@none@1@S@This matrix is also common to standard semantic models, though it is not necessarily explicitly expressed as a matrix, since the mathematical properties of matrices are not always used.@1@29@@oe@30-11-2008
10470090@unknown@formal@none@1@S@LSA transforms the occurrence matrix into a relation between the terms and some ''concepts'', and a relation between those concepts and the documents.@1@23@@oe@30-11-2008
10470100@unknown@formal@none@1@S@Thus the terms and documents are now indirectly related through the concepts.@1@12@@oe@30-11-2008
10470110@unknown@formal@none@1@S@== Applications ==@1@3@@oe@30-11-2008
10470120@unknown@formal@none@1@S@The new concept space typically can be used to:@1@9@@oe@30-11-2008
10470130@unknown@formal@none@1@S@* Compare the documents in the concept space ([[data clustering]], [[document classification]])......@1@12@@oe@30-11-2008
10470140@unknown@formal@none@1@S@* Find similar documents across languages, after analyzing a base set of translated documents ([[cross language retrieval]]).@1@17@@oe@30-11-2008
10470150@unknown@formal@none@1@S@* Find relations between terms ([[synonymy]] and [[polysemy]]).@1@8@@oe@30-11-2008
10470160@unknown@formal@none@1@S@* Given a query of terms, translate it into the concept space, and find matching documents ([[information retrieval]]).@1@18@@oe@30-11-2008
10470170@unknown@formal@none@1@S@Synonymy and polysemy are fundamental problems in [[natural language processing]]:@1@10@@oe@30-11-2008
10470180@unknown@formal@none@1@S@* Synonymy is the phenomenon where different words describe the same idea.@1@12@@oe@30-11-2008
10470190@unknown@formal@none@1@S@Thus, a query in a search engine may fail to retrieve a relevant document that does not contain the words which appeared in the query.@1@25@@oe@30-11-2008
10470200@unknown@formal@none@1@S@For example, a search for "doctors" may not return a document containing the word "physicians", even though the words have the same meaning.@1@23@@oe@30-11-2008
10470210@unknown@formal@none@1@S@* Polysemy is the phenomenon where the same word has multiple meanings.@1@12@@oe@30-11-2008
10470220@unknown@formal@none@1@S@So a search may retrieve irrelevant documents containing the desired words in the wrong meaning.@1@15@@oe@30-11-2008
10470230@unknown@formal@none@1@S@For example, a botanist and a computer scientist looking for the word "tree" probably desire different sets of documents.@1@19@@oe@30-11-2008
10470240@unknown@formal@none@1@S@== Rank lowering ==@1@4@@oe@30-11-2008
10470250@unknown@formal@none@1@S@After the construction of the occurrence matrix, LSA finds a low-[[rank (matrix theory)|rank]] approximation to the [[term-document matrix]].@1@18@@oe@30-11-2008
10470260@unknown@formal@none@1@S@There could be various reasons for these approximations:@1@8@@oe@30-11-2008
10470270@unknown@formal@none@1@S@* The original term-document matrix is presumed too large for the computing resources; in this case, the approximated low rank matrix is interpreted as an ''approximation'' (a "least and necessary evil").@1@31@@oe@30-11-2008
10470280@unknown@formal@none@1@S@* The original term-document matrix is presumed ''noisy'': for example, anecdotal instances of terms are to be eliminated.@1@18@@oe@30-11-2008
10470290@unknown@formal@none@1@S@From this point of view, the approximated matrix is interpreted as a ''de-noisified matrix'' (a better matrix than the original).@1@20@@oe@30-11-2008
10470300@unknown@formal@none@1@S@* The original term-document matrix is presumed overly [[Sparse matrix|sparse]] relative to the "true" term-document matrix.@1@16@@oe@30-11-2008
10470310@unknown@formal@none@1@S@That is, the original matrix lists only the words actually ''in'' each document, whereas we might be interested in all words ''related to'' each document--generally a much larger set due to [[synonymy]].@1@32@@oe@30-11-2008
10470320@unknown@formal@none@1@S@The consequence of the rank lowering is that some dimensions are combined and depend on more than one term:@1@19@@oe@30-11-2008
10470330@unknown@formal@none@1@S@:: {(car), (truck), (flower)} --> {(1.3452 * car + 0.2828 * truck), (flower)}@1@13@@oe@30-11-2008
10470340@unknown@formal@none@1@S@This mitigates synonymy, as the rank lowering is expected to merge the dimensions associated with terms that have similar meanings.@1@20@@oe@30-11-2008
10470350@unknown@formal@none@1@S@It also mitigates polysemy, since components of polysemous words that point in the "right" direction are added to the components of words that share a similar meaning.@1@27@@oe@30-11-2008
10470360@unknown@formal@none@1@S@Conversely, components that point in other directions tend to either simply cancel out, or, at worst, to be smaller than components in the directions corresponding to the intended sense.@1@29@@oe@30-11-2008
10470370@unknown@formal@none@1@S@== Derivation ==@1@3@@oe@30-11-2008
10470380@unknown@formal@none@1@S@Let <math>X</math> be a matrix where element <math>(i,j)</math> describes the occurrence of term <math>i</math> in document <math>j</math> (this can be, for example, the frequency). <math>X</math> will look like this:@1@29@@oe@30-11-2008
10470390@unknown@formal@none@1@S@:<math> \\begin{matrix} & \\textbf{d}_j \\\\ & \\downarrow \\\\ \\textbf{t}_i^T \\rightarrow & \\begin{bmatrix} x_{1,1} & \\dots & x_{1,n} \\\\ \\vdots & \\ddots & \\vdots \\\\ x_{m,1} & \\dots & x_{m,n} \\\\ \\end{bmatrix} \\end{matrix} </math>@1@33@@oe@30-11-2008
10470400@unknown@formal@none@1@S@Now a row in this matrix will be a vector corresponding to a term, giving its relation to each document:@1@20@@oe@30-11-2008
10470410@unknown@formal@none@1@S@:<math>\\textbf{t}_i^T = \\begin{bmatrix} x_{i,1} & \\dots & x_{i,n} \\end{bmatrix}</math>@1@9@@oe@30-11-2008
10470420@unknown@formal@none@1@S@Likewise, a column in this matrix will be a vector corresponding to a document, giving its relation to each term:@1@20@@oe@30-11-2008
10470430@unknown@formal@none@1@S@:<math>\\textbf{d}_j = \\begin{bmatrix} x_{1,j} \\\\ \\vdots \\\\ x_{m,j} \\end{bmatrix}</math>@1@9@@oe@30-11-2008
10470440@unknown@formal@none@1@S@Now the [[dot product]] <math>\\textbf{t}_i^T \\textbf{t}_p</math> between two term vectors gives the [[correlation]] between the terms over the documents.@1@19@@oe@30-11-2008
10470450@unknown@formal@none@1@S@The [[matrix product]] <math>X X^T</math> contains all these dot products.@1@10@@oe@30-11-2008
10470460@unknown@formal@none@1@S@Element <math>(i,p)</math> (which is equal to element <math>(p,i)</math>) contains the dot product <math>\\textbf{t}_i^T \\textbf{t}_p</math> (<math> = \\textbf{t}_p^T \\textbf{t}_i</math>).@1@18@@oe@30-11-2008
10470470@unknown@formal@none@1@S@Likewise, the matrix <math>X^T X</math> contains the dot products between all the document vectors, giving their correlation over the terms: <math>\\textbf{d}_j^T \\textbf{d}_q = \\textbf{d}_q^T \\textbf{d}_j</math>.@1@25@@oe@30-11-2008
10470480@unknown@formal@none@1@S@Now assume that there exists a decomposition of <math>X</math> such that <math>U</math> and <math>V</math> are [[orthonormal matrix|orthonormal matrices]] and <math>\\Sigma</math> is a [[diagonal matrix]].@1@24@@oe@30-11-2008
10470490@unknown@formal@none@1@S@This is called a [[singular value decomposition]] (SVD):@1@8@@oe@30-11-2008
10470500@unknown@formal@none@1@S@:<math> X = U \\Sigma V^T </math>@1@7@@oe@30-11-2008
10470510@unknown@formal@none@1@S@The matrix products giving us the term and document correlations then become@1@12@@oe@30-11-2008
10470520@unknown@formal@none@1@S@:<math> \\begin{matrix} X X^T &=& (U \\Sigma V^T) (U \\Sigma V^T)^T = (U \\Sigma V^T) (V^{T^T} \\Sigma^T U^T) = U \\Sigma V^T V \\Sigma^T U^T = U \\Sigma \\Sigma^T U^T \\\\ X^T X &=& (U \\Sigma V^T)^T (U \\Sigma V^T) = (V^{T^T} \\Sigma^T U^T) (U \\Sigma V^T) = V \\Sigma U^T U \\Sigma V^T = V \\Sigma^T \\Sigma V^T \\end{matrix} </math>@1@61@@oe@30-11-2008
10470530@unknown@formal@none@1@S@Since <math>\\Sigma \\Sigma^T</math> and <math>\\Sigma^T \\Sigma</math> are diagonal we see that <math>U</math> must contain the [[eigenvector]]s of <math>X X^T</math>, while <math>V</math> must be the eigenvectors of <math>X^T X</math>.@1@28@@oe@30-11-2008
10470540@unknown@formal@none@1@S@Both products have the same non-zero eigenvalues, given by the non-zero entries of <math>\\Sigma \\Sigma^T</math>, or equally, by the non-zero entries of <math>\\Sigma^T\\Sigma</math>.@1@23@@oe@30-11-2008
10470550@unknown@formal@none@1@S@Now the decomposition looks like this:@1@6@@oe@30-11-2008
10470560@unknown@formal@none@1@S@:<math> \\begin{matrix} & X & & & U & & \\Sigma & & V^T \\\\ & (\\textbf{d}_j) & & & & & & & (\\hat \\textbf{d}_j) \\\\ & \\downarrow & & & & & & & \\downarrow \\\\ (\\textbf{t}_i^T) \\rightarrow & \\begin{bmatrix} x_{1,1} & \\dots & x_{1,n} \\\\ \\\\ \\vdots & \\ddots & \\vdots \\\\ \\\\ x_{m,1} & \\dots & x_{m,n} \\\\ \\end{bmatrix} & = & (\\hat \\textbf{t}_i^T) \\rightarrow & \\begin{bmatrix} \\begin{bmatrix} \\, \\\\ \\, \\\\ \\textbf{u}_1 \\\\ \\, \\\\ \\,\\end{bmatrix} \\dots \\begin{bmatrix} \\, \\\\ \\, \\\\ \\textbf{u}_l \\\\ \\, \\\\ \\, \\end{bmatrix} \\end{bmatrix} & \\cdot & \\begin{bmatrix} \\sigma_1 & \\dots & 0 \\\\ \\vdots & \\ddots & \\vdots \\\\ 0 & \\dots & \\sigma_l \\\\ \\end{bmatrix} & \\cdot & \\begin{bmatrix} \\begin{bmatrix} & & \\textbf{v}_1 & & \\end{bmatrix} \\\\ \\vdots \\\\ \\begin{bmatrix} & & \\textbf{v}_l & & \\end{bmatrix} \\end{bmatrix} \\end{matrix} </math>@1@141@@oe@30-11-2008
10470570@unknown@formal@none@1@S@The values <math>\\sigma_1, \\dots, \\sigma_l</math> are called the singular values, and <math>u_1, \\dots, u_l</math> and <math>v_1, \\dots, v_l</math> the left and right singular vectors.@1@24@@oe@30-11-2008
10470580@unknown@formal@none@1@S@Notice how the only part of <math>U</math> that contributes to <math>\\textbf{t}_i</math> is the <math>i\\textrm{'th}</math> row.@1@15@@oe@30-11-2008
10470590@unknown@formal@none@1@S@Let this row vector be called <math>\\hat \\textrm{t}_i</math>.@1@8@@oe@30-11-2008
10470600@unknown@formal@none@1@S@Likewise, the only part of <math>V^T</math> that contributes to <math>\\textbf{d}_j</math> is the <math>j\\textrm{'th}</math> column, <math>\\hat \\textrm{d}_j</math>.@1@16@@oe@30-11-2008
10470610@unknown@formal@none@1@S@These are ''not'' the eigenvectors, but ''depend'' on ''all'' the eigenvectors.@1@11@@oe@30-11-2008
10470620@unknown@formal@none@1@S@It turns out that when you select the <math>k</math> largest singular values, and their corresponding singular vectors from <math>U</math> and <math>V</math>, you get the rank <math>k</math> approximation to X with the smallest error ([[Frobenius norm]]).@1@35@@oe@30-11-2008
10470630@unknown@formal@none@1@S@The amazing thing about this approximation is that not only does it have a minimal error, but it translates the term and document vectors into a concept space.@1@28@@oe@30-11-2008
10470640@unknown@formal@none@1@S@The vector <math>\\hat \\textbf{t}_i</math> then has <math>k</math> entries, each giving the occurrence of term <math>i</math> in one of the <math>k</math> concepts.@1@21@@oe@30-11-2008
10470650@unknown@formal@none@1@S@Likewise, the vector <math>\\hat \\textbf{d}_j</math> gives the relation between document <math>j</math> and each concept.@1@14@@oe@30-11-2008
10470660@unknown@formal@none@1@S@We write this approximation as@1@5@@oe@30-11-2008
10470670@unknown@formal@none@1@S@:<math>X_k = U_k \\Sigma_k V_k^T</math>@1@5@@oe@30-11-2008
10470680@unknown@formal@none@1@S@You can now do the following:@1@6@@oe@30-11-2008
10470690@unknown@formal@none@1@S@* See how related documents <math>j</math> and <math>q</math> are in the concept space by comparing the vectors <math>\\hat \\textbf{d}_j</math> and <math>\\hat \\textbf{d}_q</math> (typically by [[vector space model|cosine similarity]]).@1@28@@oe@30-11-2008
10470700@unknown@formal@none@1@S@This gives you a clustering of the documents.@1@8@@oe@30-11-2008
10470710@unknown@formal@none@1@S@* Comparing terms <math>i</math> and <math>p</math> by comparing the vectors <math>\\hat \\textbf{t}_i</math> and <math>\\hat \\textbf{t}_p</math>, giving you a clustering of the terms in the concept space.@1@26@@oe@30-11-2008
10470720@unknown@formal@none@1@S@* Given a query, view this as a mini document, and compare it to your documents in the concept space.@1@20@@oe@30-11-2008
10470730@unknown@formal@none@1@S@To do the latter, you must first translate your query into the concept space.@1@14@@oe@30-11-2008
10470740@unknown@formal@none@1@S@It is then intuitive that you must use the same transformation that you use on your documents:@1@17@@oe@30-11-2008
10470750@unknown@formal@none@1@S@:<math>\\textbf{d}_j = U_k \\Sigma_k \\hat \\textbf{d}_j</math>@1@6@@oe@30-11-2008
10470760@unknown@formal@none@1@S@:<math>\\hat \\textbf{d}_j = \\Sigma_k^{-1} U_k^T \\textbf{d}_j</math>@1@6@@oe@30-11-2008
10470770@unknown@formal@none@1@S@This means that if you have a query vector <math>q</math>, you must do the translation <math>\\hat \\textbf{q} = \\Sigma_k^{-1} U_k^T \\textbf{q}</math> before you compare it with the document vectors in the concept space.@1@33@@oe@30-11-2008
10470780@unknown@formal@none@1@S@You can do the same for pseudo term vectors:@1@9@@oe@30-11-2008
10470790@unknown@formal@none@1@S@:<math>\\textbf{t}_i^T = \\hat \\textbf{t}_i^T \\Sigma_k V_k^T</math>@1@6@@oe@30-11-2008
10470800@unknown@formal@none@1@S@:<math>\\hat \\textbf{t}_i^T = \\textbf{t}_i^T V_k^{-T} \\Sigma_k^{-1} = \\textbf{t}_i^T V_k \\Sigma_k^{-1}</math>@1@10@@oe@30-11-2008
10470810@unknown@formal@none@1@S@:<math>\\hat \\textbf{t}_i = \\Sigma_k^{-1} V_k^T \\textbf{t}_i</math>@1@6@@oe@30-11-2008
10470820@unknown@formal@none@1@S@== Implementation ==@1@3@@oe@30-11-2008
10470830@unknown@formal@none@1@S@The [[Singular Value Decomposition|SVD]] is typically computed using large matrix methods (for example, [[Lanczos method]]s) but may also be computed incrementally and with greatly reduced resources via a [[neural network]]-like approach, which does not require the large, full-rank matrix to be held in memory ([http://www.dcs.shef.ac.uk/~genevieve/gorrell_webb.pdf Gorrell and Webb, 2005]).@1@49@@oe@30-11-2008
10470840@unknown@formal@none@1@S@A fast, incremental, low-memory, large-matrix SVD algorithm has recently been developed ([http://www.merl.com/publications/TR2006-059/ Brand, 2006]).@1@14@@oe@30-11-2008
10470850@unknown@formal@none@1@S@Unlike Gorrell and Webb's (2005) stochastic approximation, Brand's (2006) algorithm provides an exact solution.@1@14@@oe@30-11-2008
10470860@unknown@formal@none@1@S@== Limitations ==@1@3@@oe@30-11-2008
10470870@unknown@formal@none@1@S@LSA has two drawbacks:@1@4@@oe@30-11-2008
10470880@unknown@formal@none@1@S@* The resulting dimensions might be difficult to interpret.@1@9@@oe@30-11-2008
10470890@unknown@formal@none@1@S@For instance, in@1@3@@oe@30-11-2008
10470900@unknown@formal@none@1@S@:: {(car), (truck), (flower)} --> {(1.3452 * car + 0.2828 * truck), (flower)}@1@13@@oe@30-11-2008
10470910@unknown@formal@none@1@S@:the (1.3452 * car + 0.2828 * truck) component could be interpreted as "vehicle".@1@14@@oe@30-11-2008
10470920@unknown@formal@none@1@S@However, it is very likely that cases close to@1@9@@oe@30-11-2008
10470930@unknown@formal@none@1@S@:: {(car), (bottle), (flower)} --> {(1.3452 * car + 0.2828 * bottle), (flower)}@1@13@@oe@30-11-2008
10470940@unknown@formal@none@1@S@:will occur.@1@2@@oe@30-11-2008
10470950@unknown@formal@none@1@S@This leads to results which can be justified on the mathematical level, but have no interpretable meaning in natural language.@1@20@@oe@30-11-2008
10470960@unknown@formal@none@1@S@* The [[probabilistic model]] of LSA does not match observed data: LSA assumes that words and documents form a joint [[normal distribution|Gaussian]] model ([[ergodic hypothesis]]), while a [[Poisson distribution]] has been observed.@1@32@@oe@30-11-2008
10470970@unknown@formal@none@1@S@Thus, a newer alternative is [[probabilistic latent semantic analysis]], based on a [[multinomial distribution|multinomial]] model, which is reported to give better results than standard LSA .@1@26@@oe@30-11-2008
10480010@unknown@formal@none@1@S@<article>Linguistics</article>@1@1@@oe@30-11-2008
10480020@unknown@formal@none@1@S@'''Linguistics''' is the [[science|scientific]] study of [[language]], encompassing a number of sub-fields.@1@12@@oe@30-11-2008
10480030@unknown@formal@none@1@S@An important topical division is between the study of language structure ([[grammar]]) and the study of [[Meaning (linguistics)|meaning]] ([[semantics]]).@1@19@@oe@30-11-2008
10480040@unknown@formal@none@1@S@Grammar encompasses [[morphology (linguistics)|morphology]] (the formation and composition of [[word]]s), [[syntax]] (the rules that determine how words combine into [[phrase]]s and [[Sentence (linguistics)|sentences]]) and [[phonology]] (the study of sound systems and abstract sound units).@1@34@@oe@30-11-2008
10480050@unknown@formal@none@1@S@[[Phonetics]] is a related branch of linguistics concerned with the actual properties of speech sounds ([[phone]]s), non-speech sounds, and how they are produced and [[speech perception|perceived]].@1@26@@oe@30-11-2008
10480060@unknown@formal@none@1@S@Over the twentieth century, following the work of [[Noam Chomsky]], linguistics came to be dominated by the [[Generative grammar|Generativist school]], which is chiefly concerned with explaining how human beings [[language acquisition|acquire language]] and the biological constraints on this acquisition; generative theory is [[Language module|modularist]] in character.@1@46@@oe@30-11-2008
10480070@unknown@formal@none@1@S@While this remains the dominant paradigm, other linguistic theories have increasingly gained in popularity &mdash; [[cognitive linguistics]] being a prominent example.@1@21@@oe@30-11-2008
10480080@unknown@formal@none@1@S@There are many sub-fields in linguistics, which may or may not be dominated by a particular theoretical approach: [[evolutionary linguistics]], for example, attempts to account for the origins of language; [[historical linguistics]] explores language change; and [[sociolinguistics]] looks at the relation between linguistic variation and social structures.@1@47@@oe@30-11-2008
10480090@unknown@formal@none@1@S@A variety of intellectual disciplines are relevant to the study of language.@1@12@@oe@30-11-2008
10480100@unknown@formal@none@1@S@Although certain linguists have downplayed the relevance of some other fields, linguistics &mdash; like other sciences &mdash; is highly interdisciplinary and draws on work from such fields as [[psychology]], [[informatics]], [[computer science]], [[philosophy]], [[biology]], [[human anatomy]], [[neuroscience]], [[sociology]], [[anthropology]], and [[acoustics]].@1@41@@oe@30-11-2008
10480110@unknown@formal@none@1@S@==Names for the discipline==@1@4@@oe@30-11-2008
10480120@unknown@formal@none@1@S@Before the twentieth century (the word is first attested 1716), the term "[[philology]]" was commonly used to refer to the science of language, which was then predominately historical in focus.@1@30@@oe@30-11-2008
10480130@unknown@formal@none@1@S@Since [[Ferdinand de Saussure]]'s insistence on the importance of [[Synchronic analysis (linguistics)|synchronic analysis]], however, this focus has shifted and the term "philology" is now generally used for the "study of a language's grammar, history and literary tradition", especially in the [[USA]]., where it was never as popular as elsewhere in the sense "science of language".@1@55@@oe@30-11-2008
10480140@unknown@formal@none@1@S@The term "linguistics" dates from 1847, although "linguist" in the sense a student of language" dates from 1641.@1@18@@oe@30-11-2008
10480150@unknown@formal@none@1@S@It is now the usual academic term in English for the scientific study of language.@1@15@@oe@30-11-2008
10480160@unknown@formal@none@1@S@==Fundamental concerns and divisions==@1@4@@oe@30-11-2008
10480170@unknown@formal@none@1@S@Linguistics concerns itself with describing and explaining the nature of human language.@1@12@@oe@30-11-2008
10480180@unknown@formal@none@1@S@Relevant to this are the questions of what is universal to language, how language can vary, and how human beings come to know languages.@1@24@@oe@30-11-2008
10480190@unknown@formal@none@1@S@All humans (setting aside extremely pathological cases) achieve competence in whatever language is spoken (or signed, in the case of [[sign language|signed languages]]) around them when growing up, with apparently little need for explicit conscious instruction.@1@36@@oe@30-11-2008
10480200@unknown@formal@none@1@S@While non-humans acquire their own communication systems, they do not acquire human language in this way (although many non-human animals can learn to respond to language, or can even be trained to use it to a degree).@1@37@@oe@30-11-2008
10480210@unknown@formal@none@1@S@Therefore, linguists assume, the ability to acquire and use language is an innate, biologically-based potential of modern human beings, similar to the ability to walk.@1@25@@oe@30-11-2008
10480220@unknown@formal@none@1@S@There is no consensus, however, as to the extent of this innate potential, or its domain-specificity (the degree to which such innate abilities are specific to language), with some theorists claiming that there is a very large set of highly abstract and specific binary settings coded into the human brain, while others claim that the ability to learn language is a product of general human cognition.@1@66@@oe@30-11-2008
10480230@unknown@formal@none@1@S@It is, however, generally agreed that there are no strong ''genetic'' differences underlying the differences between languages: an individual will acquire whatever language(s) they are exposed to as a child, regardless of parentage or ethnic origin.@1@36@@oe@30-11-2008
10480240@unknown@formal@none@1@S@Linguistic structures are pairings of meaning and form (which may consist of sound patterns, movements of the hand, written symbols, and so on); such pairings are known as [[Ferdinand de Saussure|Saussurean]] [[linguistic sign|signs]].@1@33@@oe@30-11-2008
10480250@unknown@formal@none@1@S@Linguists may specialize in some sub-area of linguistic structure, which can be arranged in the following terms, from form to meaning:@1@21@@oe@30-11-2008
10480260@unknown@formal@none@1@S@* '''[[Phonetics]]''', the study of the physical properties of speech (or signed) production and perception@1@15@@oe@30-11-2008
10480270@unknown@formal@none@1@S@* '''[[Phonology]]''', the study of sounds (adjusted appropriately for signed languages) as discrete, abstract elements in the speaker's mind that distinguish meaning@1@22@@oe@30-11-2008
10480280@unknown@formal@none@1@S@* '''[[Morphology (linguistics)|Morphology]]''', the study of internal structures of [[word]]s and how they can be modified@1@16@@oe@30-11-2008
10480290@unknown@formal@none@1@S@* '''[[Syntax]]''', the study of how words combine to form grammatical [[sentence]]s@1@12@@oe@30-11-2008
10480300@unknown@formal@none@1@S@* '''[[Semantics]]''', the study of the meaning of words ([[lexical semantics]]) and fixed word combinations ([[phraseology]]), and how these combine to form the [[meaning]]s of sentences@1@26@@oe@30-11-2008
10480310@unknown@formal@none@1@S@* '''[[Pragmatics]]''', the study of how [[utterance]]s are used (literally, figuratively, or otherwise) in [[speech acts|communicative acts]]@1@17@@oe@30-11-2008
10480320@unknown@formal@none@1@S@* '''[[Discourse analysis]]''', the analysis of language use in [[texts]] (spoken, written, or signed)@1@14@@oe@30-11-2008
10480330@unknown@formal@none@1@S@Many linguists would agree that these divisions overlap considerably, and the independent significance of each of these areas is not universally acknowledged.@1@22@@oe@30-11-2008
10480340@unknown@formal@none@1@S@Regardless of any particular linguist's position, each area has core concepts that foster significant scholarly inquiry and research.@1@18@@oe@30-11-2008
10480350@unknown@formal@none@1@S@Intersecting with these domains are fields arranged around the kind of external factors that are considered.@1@16@@oe@30-11-2008
10480360@unknown@formal@none@1@S@For example@1@2@@oe@30-11-2008
10480370@unknown@formal@none@1@S@* [[Linguistic typology]], the study of the common properties of diverse unrelated languages, properties that may, given sufficient attestation, be assumed to be innate to human language capacity.@1@28@@oe@30-11-2008
10480380@unknown@formal@none@1@S@* [[Stylistics (linguistics)|Stylistics]], the study of linguistic factors that place a discourse in context.@1@14@@oe@30-11-2008
10480390@unknown@formal@none@1@S@* [[Developmental linguistics]], the study of the development of linguistic ability in an individual, particularly [[Language acquisition|the acquisition of language]] in childhood.@1@22@@oe@30-11-2008
10480400@unknown@formal@none@1@S@* [[Historical linguistics]] or Diachronic linguistics, the study of language change.@1@11@@oe@30-11-2008
10480410@unknown@formal@none@1@S@* [[Language geography]], the study of the spatial patterns of languages.@1@11@@oe@30-11-2008
10480420@unknown@formal@none@1@S@* [[Evolutionary linguistics]], the study of the origin and subsequent development of language.@1@13@@oe@30-11-2008
10480430@unknown@formal@none@1@S@* [[Psycholinguistics]], the study of the cognitive processes and representations underlying language use.@1@13@@oe@30-11-2008
10480440@unknown@formal@none@1@S@* [[Sociolinguistics]], the study of social patterns and norms of linguistic variability.@1@12@@oe@30-11-2008
10480450@unknown@formal@none@1@S@* [[Clinical linguistics]], the application of linguistic theory to the area of [[Speech-Language Pathology]].@1@14@@oe@30-11-2008
10480460@unknown@formal@none@1@S@* [[Neurolinguistics]], the study of the brain networks that underlie grammar and communication.@1@13@@oe@30-11-2008
10480470@unknown@formal@none@1@S@* [[Biolinguistics]], the study of natural as well as human-taught communication systems in animals compared to human language.@1@18@@oe@30-11-2008
10480480@unknown@formal@none@1@S@* [[Computational linguistics]], the study of computational implementations of linguistic structures.@1@11@@oe@30-11-2008
10480490@unknown@formal@none@1@S@* [[Applied linguistics]], the study of language related issues applied in everyday life, notably language. policies, planning, and education.@1@19@@oe@30-11-2008
10480500@unknown@formal@none@1@S@[[Constructed language]] fits under Applied linguistics.@1@6@@oe@30-11-2008
10480510@unknown@formal@none@1@S@The related discipline of [[semiotics]] investigates the relationship between signs and what they signify.@1@14@@oe@30-11-2008
10480520@unknown@formal@none@1@S@From the perspective of semiotics, language can be seen as a sign or symbol, with the world as its representation.@1@20@@oe@30-11-2008
10480530@unknown@formal@none@1@S@==Variation and universality==@1@3@@oe@30-11-2008
10480540@unknown@formal@none@1@S@Much modern linguistic research, particularly within the [[paradigm]] of [[generative grammar]], has concerned itself with trying to account for differences between languages of the world.@1@25@@oe@30-11-2008
10480550@unknown@formal@none@1@S@This has worked on the assumption that if human linguistic ability is narrowly constrained by human biology, then all languages must share certain fundamental properties.@1@25@@oe@30-11-2008
10480560@unknown@formal@none@1@S@In [[generative grammar|generativist theory]], the collection of fundamental properties all languages share are referred to as [[universal grammar]] (UG).@1@19@@oe@30-11-2008
10480570@unknown@formal@none@1@S@The specific characteristics of this universal grammar are a much debated topic.@1@12@@oe@30-11-2008
10480580@unknown@formal@none@1@S@[[Linguistic typology|Typologists]] and non-generativist linguists usually refer simply to [[linguistic universal|language universals]], or ''universals of language''.@1@16@@oe@30-11-2008
10480590@unknown@formal@none@1@S@Similarities between languages can have a number of different origins.@1@10@@oe@30-11-2008
10480600@unknown@formal@none@1@S@In the simplest case, universal properties may be due to universal aspects of human experience.@1@15@@oe@30-11-2008
10480610@unknown@formal@none@1@S@For example, all humans experience water, and all human languages have a word for water.@1@15@@oe@30-11-2008
10480620@unknown@formal@none@1@S@Other similarities may be due to common descent: the [[Latin language]] spoken by the [[Ancient Rome|Ancient Romans]] developed into Spanish in Spain and Italian in Italy; similarities between Spanish and Italian are thus in many cases due to both being descended from Latin.@1@43@@oe@30-11-2008
10480630@unknown@formal@none@1@S@In other cases, [[Language contact|contact between languages]] &mdash; particularly where many speakers are bilingual &mdash; can lead to much borrowing of structures, as well as words.@1@26@@oe@30-11-2008
10480640@unknown@formal@none@1@S@Similarity may also, of course, be due to coincidence.@1@9@@oe@30-11-2008
10480650@unknown@formal@none@1@S@English ''much'' and Spanish ''mucho'' are not descended from the same form or borrowed from one language to the other; nor is the similarity due to innate linguistic knowledge (see [[False cognate]]).@1@32@@oe@30-11-2008
10480660@unknown@formal@none@1@S@Arguments in favor of language universals have also come from documented cases of [[sign language]]s (such as [[Al-Sayyid Bedouin Sign Language]]) developing in communities of congenitally deaf people, independently of spoken language.@1@32@@oe@30-11-2008
10480670@unknown@formal@none@1@S@The properties of these sign languages conform generally to many of the properties of spoken languages.@1@16@@oe@30-11-2008
10480680@unknown@formal@none@1@S@Other known and suspected sign language [[language isolate|isolates]] include [[Kata Kolok]], [[Nicaraguan Sign Language]], and [[Providence Island Sign Language]].@1@19@@oe@30-11-2008
10480690@unknown@formal@none@1@S@== Structures ==@1@3@@oe@30-11-2008
10480700@unknown@formal@none@1@S@It has been perceived that languages tend to be organized around [[grammatical categories]] such as noun and verb, [[nominative case|nominative]] and [[accusative case|accusative]], or present and past, though, importantly, not exclusively so.@1@32@@oe@30-11-2008
10480710@unknown@formal@none@1@S@The grammar of a language is organized around such fundamental categories, though many languages express the relationships between words and syntax in other discrete ways (cf. some Bantu languages for noun/verb relations, ergative/absolutive systems for case relations, several Native American languages for tense/aspect relations).@1@44@@oe@30-11-2008
10480720@unknown@formal@none@1@S@In addition to making substantial use of discrete categories, language has the important property that it organizes elements into recursive structures; this allows, for example, a noun phrase to contain another noun phrase (as in “the chimpanzee’s lips”) or a clause to contain a clause (as in “I think that it’s raining”).@1@52@@oe@30-11-2008
10480730@unknown@formal@none@1@S@Though recursion in grammar was implicitly recognized much earlier (for example by [[Otto Jespersen|Jespersen]]), the importance of this aspect of language became more popular after the 1957 publication of [[Noam Chomsky]]’s book “[[Syntactic Structures]]”, - that presented a formal grammar of a fragment of English.@1@45@@oe@30-11-2008
10480740@unknown@formal@none@1@S@Prior to this, the most detailed descriptions of linguistic systems were of phonological or morphological systems.@1@16@@oe@30-11-2008
10480750@unknown@formal@none@1@S@Chomsky used a [[context-free grammar]] augmented with transformations.@1@8@@oe@30-11-2008
10480760@unknown@formal@none@1@S@Since then, following the trend of Chomskyan linguistics, context-free grammars have been written for substantial fragments of various languages (for example [[Generalised phrase structure grammar|GPSG]], for English), but it has been demonstrated that human languages include cross-serial dependencies, which cannot be handled adequately by context-free grammars.@1@46@@oe@30-11-2008
10480770@unknown@formal@none@1@S@==Some selected sub-fields ==@1@4@@oe@30-11-2008
10480780@unknown@formal@none@1@S@'''Diachronic linguistics'''@1@2@@oe@30-11-2008
10480790@unknown@formal@none@1@S@Studying languages at a particular point in time (usually the present) is "synchronic", while diachronic linguistics examines how language changes through time, sometimes over centuries.@1@25@@oe@30-11-2008
10480800@unknown@formal@none@1@S@It enjoys both a rich history and a strong theoretical foundation for the study of [[language change]].@1@17@@oe@30-11-2008
10480810@unknown@formal@none@1@S@In universities in the United States, the non-historic perspective is often out of fashion.@1@14@@oe@30-11-2008
10480820@unknown@formal@none@1@S@The shift in focus to a non-historic perspective started with [[Ferdinand de Saussure|Saussure]] and became pre-dominant with [[Noam Chomsky]].@1@19@@oe@30-11-2008
10480830@unknown@formal@none@1@S@Explicitly historical perspectives include [[historical-comparative linguistics]] and [[etymology]].@1@8@@oe@30-11-2008
10480840@unknown@formal@none@1@S@'''Contextual linguistics'''@1@2@@oe@30-11-2008
10480850@unknown@formal@none@1@S@Contextual linguistics may include the study of linguistics in interaction with other academic disciplines.@1@14@@oe@30-11-2008
10480860@unknown@formal@none@1@S@The interdisciplinary areas of linguistics consider how language interacts with the rest of the world.@1@15@@oe@30-11-2008
10480870@unknown@formal@none@1@S@[[Sociolinguistics]], [[anthropological linguistics]], and [[linguistic anthropology]] are seen as areas that bridge the gap between linguistics and society as a whole.@1@21@@oe@30-11-2008
10480880@unknown@formal@none@1@S@[[Psycholinguistics]] and [[neurolinguistics]] relate linguistics to the [[medical science]]s.@1@9@@oe@30-11-2008
10480890@unknown@formal@none@1@S@Other cross-disciplinary areas of linguistics include [[evolutionary linguistics]], [[computational linguistics]] and [[cognitive science]].@1@13@@oe@30-11-2008
10480900@unknown@formal@none@1@S@'''Applied linguistics'''@1@2@@oe@30-11-2008
10480910@unknown@formal@none@1@S@Linguists are largely concerned with finding and [[descriptive linguistics|describing]] the generalities and varieties both within particular languages and among all language.@1@21@@oe@30-11-2008
10480920@unknown@formal@none@1@S@[[Applied linguistics]] takes the result of those findings and “applies” them to other areas.@1@14@@oe@30-11-2008
10480930@unknown@formal@none@1@S@Often “applied linguistics” refers to the use of linguistic research in language teaching, but results of linguistic research are used in many other areas, as well.@1@26@@oe@30-11-2008
10480940@unknown@formal@none@1@S@Today in the age of information technology, many areas of applied linguistics attempt to involve the use of computers.@1@19@@oe@30-11-2008
10480950@unknown@formal@none@1@S@[[Speech synthesis]] and [[speech recognition]] use phonetic and phonemic knowledge to provide voice interfaces to computers.@1@16@@oe@30-11-2008
10480960@unknown@formal@none@1@S@Applications of [[computational linguistics]] in [[machine translation]], [[computer-assisted translation]], and [[natural language processing]] are areas of applied linguistics which have come to the forefront.@1@24@@oe@30-11-2008
10480970@unknown@formal@none@1@S@Their influence has had an effect on theories of syntax and semantics, as modeling syntactic and semantic theories on computers constraints.@1@21@@oe@30-11-2008
10480980@unknown@formal@none@1@S@==Description and prescription==@1@3@@oe@30-11-2008
10480990@unknown@formal@none@1@S@''Main articles: [[Descriptive linguistics]], [[Linguistic prescription]]''@1@6@@oe@30-11-2008
10481000@unknown@formal@none@1@S@Linguistics is '''descriptive'''; linguists describe and explain features of language without making subjective judgments on whether a particular feature is "right" or "wrong".@1@23@@oe@30-11-2008
10481010@unknown@formal@none@1@S@This is analogous to practice in other sciences: a [[zoologist]] studies the animal kingdom without making subjective judgments on whether a particular animal is better or worse than another.@1@29@@oe@30-11-2008
10481020@unknown@formal@none@1@S@'''Prescription''', on the other hand, is an attempt to promote particular linguistic usages over others, often favouring a particular dialect or "[[acrolect]]".@1@22@@oe@30-11-2008
10481030@unknown@formal@none@1@S@This may have the aim of establishing a [[Standard language|linguistic standard]], which can aid communication over large geographical areas.@1@19@@oe@30-11-2008
10481040@unknown@formal@none@1@S@It may also, however, be an attempt by speakers of one language or dialect to exert influence over speakers of other languages or dialects (see [[Linguistic imperialism]]).@1@27@@oe@30-11-2008
10481050@unknown@formal@none@1@S@An extreme version of prescriptivism can be found among [[censorship|censors]], who attempt to eradicate words and structures which they consider to be destructive to society.@1@25@@oe@30-11-2008
10481060@unknown@formal@none@1@S@== Speech and writing ==@1@5@@oe@30-11-2008
10481070@unknown@formal@none@1@S@Most contemporary linguists work under the assumption that [[spoken language|spoken]] (or signed) language is more fundamental than [[written language]].@1@19@@oe@30-11-2008
10481080@unknown@formal@none@1@S@This is because:@1@3@@oe@30-11-2008
10481090@unknown@formal@none@1@S@* Speech appears to be a human "universal", whereas there have been many [[culture]]s and speech communities that lack written communication;@1@21@@oe@30-11-2008
10481100@unknown@formal@none@1@S@* Speech evolved before human beings discovered writing;@1@8@@oe@30-11-2008
10481110@unknown@formal@none@1@S@* People learn to speak and process spoken languages more easily and much earlier than writing;@1@16@@oe@30-11-2008
10481120@unknown@formal@none@1@S@Linguists nonetheless agree that the study of written language can be worthwhile and valuable.@1@14@@oe@30-11-2008
10481130@unknown@formal@none@1@S@For research that relies on [[corpus linguistics]] and [[computational linguistics]], written language is often much more convenient for processing large amounts of linguistic data.@1@24@@oe@30-11-2008
10481140@unknown@formal@none@1@S@Large corpora of spoken language are difficult to create and hard to find, and are typically [[transcription (linguistics)|transcribed]] and written.@1@20@@oe@30-11-2008
10481150@unknown@formal@none@1@S@Additionally, linguists have turned to text-based discourse occurring in various formats of [[computer-mediated communication]] as a viable site for linguistic inquiry.@1@21@@oe@30-11-2008
10481160@unknown@formal@none@1@S@The study of [[writing systems]] themselves is in any case considered a branch of linguistics.@1@15@@oe@30-11-2008
10481170@unknown@formal@none@1@S@== History ==@1@3@@oe@30-11-2008
10481180@unknown@formal@none@1@S@Some of the earliest linguistic activities can be recalled from [[Iron Age India]] with the analysis of [[Sanskrit]].@1@18@@oe@30-11-2008
10481190@unknown@formal@none@1@S@The [[Pratishakhya]]s (from ca. the 8th century BC) constitute as it were a proto-linguistic ''ad hoc'' collection of observations about mutations to a given [[corpus linguistics|corpus]] particular to a given [[Shakha|Vedic school]].@1@32@@oe@30-11-2008
10481200@unknown@formal@none@1@S@Systematic study of these texts gives rise to the [[Vedanga]] discipline of [[Vyakarana]], the earliest surviving account of which is the work of {{IAST|[[Pānini]]}} (c. 520 – 460 BC), who, however, looks back on what are probably several generations of grammarians, whose opinions he occasionally refers to.@1@47@@oe@30-11-2008
10481210@unknown@formal@none@1@S@{{IAST|Pānini}} formulates close to 4,000 rules which together form a compact [[generative grammar]] of Sanskrit.@1@15@@oe@30-11-2008
10481220@unknown@formal@none@1@S@Inherent in his analytic approach are the concepts of the [[phoneme]], the [[morpheme]] and the [[root]].@1@16@@oe@30-11-2008
10481230@unknown@formal@none@1@S@Due to its focus on brevity, his grammar has a highly unintuitive structure, reminiscent of contemporary "machine language" (as opposed to "human readable" programming languages).@1@25@@oe@30-11-2008
10481240@unknown@formal@none@1@S@Indian linguistics maintained a high level for several centuries; [[Mahābhāṣya|Patanjali]] in the 2nd century BC still actively criticizes Panini.@1@19@@oe@30-11-2008
10481250@unknown@formal@none@1@S@In the later centuries BC, however, Panini's grammar came to be seen as prescriptive, and commentators came to be fully dependent on it.@1@23@@oe@30-11-2008
10481260@unknown@formal@none@1@S@[[Bhartrihari]] (c. 450 – 510) theorized the act of speech as being made up of four stages: first, conceptualization of an idea, second, its verbalization and sequencing (articulation) and third, delivery of speech into atmospheric air, the interpretation of speech by the listener, the interpreter.@1@45@@oe@30-11-2008
10481270@unknown@formal@none@1@S@In the [[Middle East]], the [[Persian language|Persian]] linguist [[Sibawayh]] made a detailed and professional description of [[Arabic language|Arabic]] in 760, in his monumental work, ''Al-kitab fi al-nahw'' (الكتاب في النحو, ''The Book on Grammar''), bringing many linguistic aspects of language to light.@1@42@@oe@30-11-2008
10481280@unknown@formal@none@1@S@In his book he distinguished [[phonetics]] from [[phonology]].@1@8@@oe@30-11-2008
10481290@unknown@formal@none@1@S@Western linguistics begins in Classical Antiquity with grammatical speculation such as [[Plato]]'s ''[[Cratylus]]''.@1@13@@oe@30-11-2008
10481300@unknown@formal@none@1@S@[[William Jones (philologist)|Sir William Jones]] noted that [[Sanskrit]] shared many common features with classical [[Latin]] and [[Ancient Greek|Greek]], notably verb roots and grammatical structures, such as the [[case system]].@1@29@@oe@30-11-2008
10481310@unknown@formal@none@1@S@This led to the theory that all languages sprung from a common source and to the discovery of the [[Indo-European]] [[language family]].@1@22@@oe@30-11-2008
10481320@unknown@formal@none@1@S@He began the study of [[comparative linguistics]], which would uncover more language families and branches.@1@15@@oe@30-11-2008
10481330@unknown@formal@none@1@S@Some early-19th-century linguists were [[Jakob Grimm]], who devised a principle of consonantal shifts in pronunciation &ndash; known as [[Grimm's Law]] &ndash; in 1822; [[Karl Verner]], who formulated [[Verner's Law]]; [[August Schleicher]], who created the "Stammbaumtheorie" ("family tree"); and [[Johannes Schmidt (linguist)|Johannes Schmidt]], who developed the "Wellentheorie" ("wave model") in 1872.@1@50@@oe@30-11-2008
10481340@unknown@formal@none@1@S@[[Ferdinand de Saussure]] was the founder of modern structural linguistics.@1@10@@oe@30-11-2008
10481350@unknown@formal@none@1@S@[[Edward Sapir]], a leader in American structural linguistics, was one of the first who explored the relations between language studies and anthropology.@1@22@@oe@30-11-2008
10481360@unknown@formal@none@1@S@His methodology had strong influence on all his successors.@1@9@@oe@30-11-2008
10481370@unknown@formal@none@1@S@[[Noam Chomsky|Noam Chomsky's]] formal model of language, [[transformational-generative grammar]], developed under the influence of his teacher [[Zellig Harris]], who was in turn strongly influenced by [[Leonard Bloomfield]], has been the dominant model since the 1960s.@1@35@@oe@30-11-2008
10481380@unknown@formal@none@1@S@[[Noam Chomsky]] remains a pop-linguistic figure.@1@6@@oe@30-11-2008
10481390@unknown@formal@none@1@S@Linguists (working in frameworks such as [[Head-Driven Phrase Structure Grammar]] (HPSG) or [[Lexical Functional Grammar]] (LFG)) are increasingly seen to stress the importance of formalization and formal rigor in linguistic description, and may distance themselves somewhat from Chomsky's more recent work (the "Minimalist" program for [[Transformational grammar]]), connecting more closely to his earlier works.@1@54@@oe@30-11-2008
10481400@unknown@formal@none@1@S@Other linguists working in [[Optimality Theory]] state generalizations in terms of violable constraints that interact with each other, and abandon the traditional rule-based formalism first pioneered by early work in generativist linguistics.@1@32@@oe@30-11-2008
10481410@unknown@formal@none@1@S@Functionalist linguists working in [[functional grammar]] and [[Cognitive Linguistics]] tend to stress the non-autonomy of linguistic knowledge and the non-universality of linguistic structures, thus differing significantly from the Chomskyan school.@1@30@@oe@30-11-2008
10481420@unknown@formal@none@1@S@They reject Chomskyan intuitive introspection as a scientific method, relying instead on typological evidence.@1@14@@oe@30-11-2008
