#!/coli/apps/tcl8.0+tk8.0/bin/bltwish
#!../bltwish

source bltDemo.tcl
set graph .bc

proc random {{max 1.0} {min 0.0}} {
    global randomSeed

    set randomSeed [expr (7141*$randomSeed+54773) % 259200]
    set num  [expr $randomSeed/259200.0*($max-$min)+$min]
    return $num
}
set randomSeed 148230

proc FormatLabel { w value } {

    # Determine the element name from the value

    set names [$w element show]
    set index [expr round($value)]
    if { $index != $value } {
	return $value 
    }
    set name [lindex $names [expr $index - 1]]
    if { $name == "" } { 
	return $name
    }
    return [$w element cget $name -label]
}

source patterns.tcl

image create photo bgTexture -file bitmaps/rain.gif

option add *font			-*-helvetica*-bold-r-*-*-14-*-*
option add *tile			bgTexture

option add *Button.tile			""

option add *Htext.tileOffset		no
option add *Htext.font			-*-times*-medium-r-*-*-14-*-*

option add *Barchart.title		"A Simple Barchart"

option add *Axis.TickFont		*Courier-Medium-R*-12-*

option add *x.Title			"X Axis Label"
option add *x.Rotate			90
option add *x.Command			FormatLabel
option add *y.Title			"Y Axis Label"

option add *Element.Background		white
option add *Element.Relief		raised
option add *Element.BorderWidth		2 

#option add *Legend.hide			yes

option add *Grid.hide			no
option add *Grid.dashes			{ 2 4 }
option add *Grid.mapX			""

set visual [winfo screenvisual .] 
if { $visual != "staticgray" && $visual != "grayscale" } {
    option add *print.background yellow
    option add *quit.background red
    option add *graph.background palegreen
}

htext .header -text {
    The barchart has several components: coordinate axes, data 
    elements, legend, crosshairs, grid,  postscript, and markers.  
    They each control various aspects of the barchart.  For example,
    the postscript component lets you generate PostScript output.  
    Pressing the %%

    set w $htext(widget)
    button $w.print -text {Print} -command {
	.bc postscript output bar.ps
    } 
    $w append $w.print

%% button will create a file "bar.ps" 
}

htext .footer -text {
    Hit the %%

    set w $htext(widget)
    button $w.quit -text quit -command exit 
    $w append $w.quit 

%% button when you've seen enough.%%

    label $w.logo -bitmap BLT
    $w append $w.logo -padx 20

%% }

barchart .bc  

#
# Element attributes:  
#
#    Label	Foreground	Background	Stipple Pattern
set attributes { 
    "One"	red		green		pattern1
    "Two"	green		blue		pattern2 
    "Three"	blue		purple		pattern6
    "Four"	purple		orange		pattern7
    "Five"	orange		brown		pattern8
    "Six"	brown		cyan		pattern1
    "Seven"	cyan		navy		pattern2 
    "Eight"	navy		red		pattern6
    "Nine"	red		orange		""
    "Ten"	seagreen	palegreen	hobbes
}

set count 1
foreach {label fg bg stipple} $attributes {
    .bc element create $label -ydata [random -2 10] -xdata $count \
	-fg $fg -bg $bg -stipple $stipple 
    incr count
}

table . \
    0,0 .header -fill x \
    1,0 .bc -fill both \
    2,0	.footer -fill x	
	
table configure . r0 r2 -resize none

Blt_ZoomStack .bc
Blt_Crosshairs .bc
Blt_ActiveLegend .bc
Blt_ClosestPoint .bc

