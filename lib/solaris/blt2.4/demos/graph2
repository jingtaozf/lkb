#!/coli/apps/tcl8.0+tk8.0/bin/bltwish
#!../bltwish

source bltDemo.tcl

set graph .graph

bitmap define pattern1 { {4 4} {01 02 04 08} }
bitmap define pattern5 { {4 4} {01 01 01 01} }

set visual [winfo screenvisual .]
if { $visual != "staticgray" && $visual != "grayscale" } {
    option add *Button.Background	red
    option add *TextMarker.Foreground	black
    option add *TextMarker.Background	yellow
    option add *LineMarker.Foreground	black
    option add *LineMarker.Background	yellow
    option add *PolyMarker.Fill		yellow2
    option add *PolyMarker.Outline	""
    option add *PolyMarker.Stipple	pattern5
    option add *activeLine.Color	red4
    option add *activeLine.Fill		red2
    option add *Element.Color		purple
}

option add *HighlightThickness		0
option add *Graph.shadow  { navyblue 2 }
option add *psPreview yes

option add *Graph.halo			8i
option add *Graph.title			"Bitmap Symbols" 
option add *Graph.foreground		white
option add *Graph.width			8i
option add *Graph.height		6i
option add *Graph.borderWidth		2
option add *Graph.relief		raised
option add *Graph.font	 		-*-helvetica-bold-r-*-*-24-*-*-*-*-*-*-* 

option add *Axis.TickFont 	-*-helvetica-bold-r-*-*-12*-*-*-*-*-*-* 
option add *Axis.TitleFont 	-*-helvetica-bold-r-*-*-12-*-*-*-*-*-*-*
option add *y2.hide 		no
option add *degrees.stepSize		90 
option add *degrees.Command		formatXLabels 
option add *degrees.Subdivisions	0 
option add *degrees.Title		"Degrees" 
option add *degrees.Limits 	"T=%g"
option add *y.Limits		"%g"
option add *y.Title		"Y" 
option add *y.loose		no
option add *y.Color		purple2
option add *y.rotate		90 
option add *y2.rotate		270
option add *y2.color		magenta3
option add *y2.Title		"Y2" 
option add *temp.Limits 	"T=%g"
option add *temp.title		"Temperature"

option add *Legend.position 	plotarea
option add *Legend.anchor 	ne
option add *Legend.activeRelief raised
option add *Legend.activeBorderWidth 2
option add *Legend.font		-*-helvetica-medium-r-*-*-34-*-*-*-*-*-*-*
option add *Legend.relief	flat
option add *Legend.borderWidth  0
option add *Legend.foreground   orange

option add *Element.ScaleSymbols true
option add *Element*Pixels	2.75m

graph $graph

proc formatXLabels {graph x} {
     return "[expr int($x)]\260"
}


table . \
    $graph -fill both  
table configure . r1 -resize none

wm min . 0 0

set max -1.0
set step 0.2

set letters { A B C D E F G H I J K L }
set count 0
for { set level 30 } { $level <= 100 } { incr level 10 } {
    set color [format "#dd0d%0.2x" [expr round($level*2.55)]]
    bitmap compose symbol$count [lindex $letters $count] \
    	-font -*-helvetica-medium-r-*-*-34-*-*-*-*-*-*-*
    $graph pen create style$level -color $color -symbol symbol$count \
	-fill "" -pixels 6m
    set min $max
    set max [expr $max + $step]
    lappend styles "style$level $min $max"
    incr count
}


$graph axis create temp -color lightgreen -title Temp  -min -0.5 -max 0.5
$graph axis create degrees -color lightblue
$graph xaxis use degrees

set tcl_precision 15
set pi1_2 [expr 3.14159265358979323846/180.0]

vector create w x sinX cosX radians
x seq -360.0 360.0 10.0
radians expr { x * $pi1_2 }
sinX expr sin(radians)
cosX expr cos(radians)
cosX dup w
vector destroy radians

$graph element create line1 \
    -color black \
    -dashes { 10 4 } \
    -fill orange \
    -fill yellow \
    -label "sin(x)" \
    -linewidth 1 \
    -mapx degrees \
    -pixels 6m \
    -symbol "@bitmaps/hobbes.xbm @bitmaps/hobbes_mask.xbm" \
    -xdata x \
    -ydata sinX

$graph element create line2 \
    -color green4 \
    -fill green \
    -label "cos(x)" \
    -mapx degrees \
    -styles $styles \
    -weights w \
    -xdata x \
    -ydata cosX 


Blt_ZoomStack $graph
Blt_Crosshairs $graph
#Blt_ActiveLegend $graph
Blt_ClosestPoint $graph
Blt_PrintKey $graph


#
# Put a scrolled listbox in the graph
#
frame $graph.win
listbox $graph.win.lbox \
	-width 10 -height 5 -yscrollcommand { $graph.win.sbar set }
eval $graph.win.lbox insert 0 [$graph pen names]
$graph.win.lbox selection set 0

scrollbar $graph.win.sbar -command { $graph.win.lbox yview }
table $graph.win \
    $graph.win.lbox 0,0 -fill both \
    $graph.win.sbar 0,1 -fill y
table configure $graph.win c1 -resize none

$graph marker create window -name barney -coords "360.0 -1" \
	-window $graph.win -under true -anchor se -hide no -mapx degrees

$graph postscript configure -maxpect yes -landscape yes

set unique 0

bind $graph <Control-ButtonPress-3> { MakeSnapshot }

proc MakeSnapshot {} {
    update idletasks
    global unique
    set top ".snapshot[incr unique]"
    set im [image create photo]
    $graph snap $im 210 150

    toplevel $top
    wm title $top "Snapshot \#$unique of \"[$graph cget -title]\""
    label $top.lab -image $im 
    button $top.but -text "Dismiss" -command "DestroySnapshot $top"
    table $top $top.lab
    table $top $top.but -pady 4 
    focus $top.but
}

proc DestroySnapshot { win } {
    set im [$win.lab cget -image]
    $im write test.ppm
    image delete $im
    destroy $win
    exit
}

focus $graph
