--- Copyright (c) 2003 - 2005
--- Benjamin Waldron, Fabre Lambeau, Stephan Oepen;
--- see `licence.txt' for conditions.

--
--

--CREATE OR REPLACE FUNCTION public.hide_schemas2 () RETURNS boolean AS
-- '
--DECLARE
--x RECORD;
--	sql_str text;
--BEGIN
--	DELETE FROM pg_catalog.pg_class WHERE relnamespace=(SELECT oid FROM pg_catalog.pg_namespace WHERE nspname LIKE \'old\\\\_%\');
--	DELETE FROM pg_catalog.pg_namespace WHERE nspname LIKE \'old\\\\_%\';
--
--	IF psql_server_version(\'7.4\') THEN
--		FOR x IN SELECT val FROM public.meta WHERE var=\'user\' LOOP
--			sql_str := \'ALTER SCHEMA \' || quote_ident(x.val) || \' RENAME TO old_\' || quote_ident(x.val);
--			RAISE INFO \'%\', sql_str;
--			EXECUTE sql_str;
--		END LOOP;
--	ELSE
--		UPDATE pg_catalog.pg_namespace SET nspname=\'old_\' ||  nspname WHERE nspname IN (SELECT val FROM public.meta WHERE var=\'user\');
--	END IF;
--	DELETE FROM public.meta WHERE var=\'user\';
--	RETURN true;
--END '
-- LANGUAGE plpgsql SECURITY INVOKER;

---- work around
--CREATE OR REPLACE FUNCTION public.hide_schemas () RETURNS boolean AS
--'
--	SELECT public.hide_schemas2();
--'
-- LANGUAGE SQL SECURITY DEFINER;

--CREATE OR REPLACE FUNCTION public.restore_public_rev_su(text) RETURNS text AS '
--DECLARE
--	dump_file_rev text;
--	base text;
--BEGIN
--	base := $1;
--	-- base := tmp_base(\'lexdb\') || $1;
--	dump_file_rev := base || \'.rev\';
--
--	RAISE INFO \'Restoring public.rev from file %\', dump_file_rev;
--	EXECUTE \'COPY public.rev FROM \' || quote_literal(dump_file_rev) ;
--	RETURN dump_file_rev;
--END;
--' LANGUAGE plpgsql SECURITY DEFINER;

--CREATE OR REPLACE FUNCTION public.restore_public_dfn_su(text) RETURNS text AS '
--DECLARE
--	dump_file_dfn text;
--	base text;
--BEGIN
--	base := $1;
--	--base := tmp_base(\'lexdb\') || $1;
--	dump_file_dfn := base || \'.dfn\';
--
--	RAISE INFO \'Restoring public.dfn from file %\', dump_file_dfn;
--	EXECUTE \'COPY public.dfn FROM \' || quote_literal(dump_file_dfn);
--	RETURN dump_file_dfn;
--END;
--' LANGUAGE plpgsql SECURITY DEFINER;

--CREATE OR REPLACE FUNCTION public.restore_public_fld_su(text) RETURNS text AS '
--DECLARE
--	dump_file_fld text;
--	base text;
--BEGIN
--	base := $1;
--	--base := tmp_base(\'lexdb\') || $1;
--	dump_file_fld := base || \'.fld\';
--
--	RAISE INFO \'Restoring public.fld from file %\', dump_file_fld;
--	EXECUTE \'COPY public.fld FROM \' || quote_literal(dump_file_fld);
--	RETURN dump_file_fld;
--END;
--' LANGUAGE plpgsql SECURITY DEFINER;
